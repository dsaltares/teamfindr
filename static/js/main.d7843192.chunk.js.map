{"version":3,"sources":["components/Avatar/Avatar.styles.ts","components/Avatar/Avatar.tsx","components/AvatarMenu/AvatarMenu.styles.ts","services/images.service.ts","services/location.service.ts","endpoints.ts","services/user.service.ts","utils/encodeQueryData.ts","services/index.ts","services/venues.service.ts","services/events.service.ts","providers/ServicesProvider.tsx","hooks/location/useCurrentLocation.ts","hooks/location/useLocationAutocomplete.ts","hooks/location/useLocationFromCoordinates.ts","hooks/location/useLocationFromMapClick.ts","hooks/user/useUser.ts","hooks/user/useLogout.ts","hooks/user/useLoginViaSocialMedia.ts","hooks/user/useChangeAvatar.ts","hooks/utils/usePrefetch.ts","hooks/venues/useCreateVenue.ts","hooks/utils/useDebounce.ts","hooks/venues/useVenues.ts","hooks/venues/useVenue.ts","hooks/events/useCreateEvent.ts","components/AvatarMenu/AvatarMenu.tsx","components/Navigation/DesktopNavigation/DesktopNavigation.styles.ts","components/Navigation/navigationItems.ts","components/Navigation/DesktopNavigation/DesktopNavigation.tsx","components/Navigation/MobileNavigation/MobileNavigation.styles.ts","components/Navigation/MobileNavigation/MobileNavigation.tsx","components/Page/PageTitle.styles.ts","components/Page/PageTitle.tsx","components/Page/Page.styles.ts","components/Page/Page.tsx","pages/Home/Home.tsx","components/LocationAutocomplete/LocationAutocomplete.tsx","components/Map/icons/index.ts","utils/leaflet.ts","components/Map/Map.tsx","components/NewVenueDialog/LocationWithMapField.tsx","components/Slider/Slider.styles.ts","components/Slider/Slider.tsx","components/Slider/RadiusSlider.tsx","components/Slider/PlayersSlider.tsx","components/Slider/DurationSlider.tsx","components/SportsAutocomplete/SportsAutocomplete.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DateTimePicker.tsx","pages/Events/Events.styles.ts","components/Dialog/Dialog.styles.ts","components/Dialog/Dialog.tsx","components/Dialog/DialogActions.tsx","components/Dialog/DialogContent.tsx","components/NewEventDialog/VenueAutocomplete.tsx","components/NewEventDialog/VenueWithMapField.tsx","components/NewEventDialog/NewEventDialogContent.tsx","components/NewEventDialog/NewEventDialog.tsx","pages/Events/Events.tsx","components/NewVenueDialog/NewVenueDialogContent.tsx","components/NewVenueDialog/NewVenueDialog.tsx","pages/Venues/VenueListItem.styles.ts","pages/Venues/VenueListItem.tsx","pages/Venues/VenueList.tsx","pages/Venues/VenueMarkers.tsx","pages/Venues/Venues.styles.ts","pages/Venues/Venues.tsx","components/VenueBasicInfoPanel/VenueBasicInfoPanel.styles.ts","components/VenueBasicInfoPanel/VenueBasicInfoPanel.tsx","pages/Venue/Venue.tsx","pages/Settings/Profile/AvatarUploader.styles.ts","pages/Settings/Profile/AvatarUploader.tsx","pages/Settings/Profile/Profile.styles.ts","pages/Settings/Profile/Profile.tsx","pages/Settings/NotificationSettings/NotificationSettings.tsx","pages/Settings/Settings.styles.ts","pages/Settings/Settings.tsx","pages/Dashboard/Dashboard.tsx","components/GoogleIcon.tsx","components/LoginButtons/LoginButtons.styles.ts","components/LoginButtons/LoginButtons.tsx","pages/Login/Login.styles.ts","pages/Login/Login.tsx","pages/Authenticating/Authenticating.styles.ts","pages/Authenticating/Authenticating.tsx","components/WithAuthentication.tsx","components/WithNoAuthentication.tsx","App.tsx","reportWebVitals.ts","providers/ThemeProvider.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","small","width","spacing","height","medium","large","Avatar","firstName","lastName","avatar","size","variant","loading","classes","fullName","Skeleton","className","animation","alt","src","React","memo","fullHeight","itemIcon","minWidth","paddingRight","imagesService","uploadImage","file","a","fd","FormData","append","axios","post","url","data","secure_url","PHOTON_API","featureToLocation","feature","coordinates","geometry","properties","name","country","city","postcode","number","housenumber","street","baseProperties","geo","type","specificName","descriptionProperties","description","map","propertyName","filter","value","join","getLocationFromCoordinates","longitude","latitude","get","features","filterByType","restrictToType","location","locationService","getLocationFromGeolocation","Promise","resolve","reject","navigator","geolocation","code","GeolocationPositionError","POSITION_UNAVAILABLE","message","getCurrentPosition","newPosition","coords","getLocationFromIp","getLocationSuggestions","query","around","aroundQuery","encodeURIComponent","API_URL","userService","verify","withCredentials","headers","Accept","user","response","status","openIdpAuthPage","provider","window","open","logout","patchUser","id","patch","updatedUser","encodeQueryData","Object","keys","reduce","acc","key","services","images","venues","createVenue","venue","getVenues","radius","lon","lat","getVenue","events","createEvent","params","event","ServiceContext","createContext","useServices","useContext","ServicesProvider","children","injectedServices","Provider","STALE_TIME_MS","useCurrentLocation","geoLocation","useQuery","staleTime","refetchInterval","isLoading","error","useCurrentGeoLocation","ipLocation","useCurrentIpLocation","ipLocationFinished","useLocationAutocomplete","debouncedQuery","useDebounce","useState","suggestions","setSuggestions","setLoading","useEffect","newSuggestions","performSearch","debounceOpts","leading","trailing","useLocationFromCoordinates","debouncedCoordinates","setLocation","newLocation","lookupCoordinates","useLocationFromMapClick","setCoordinates","useMapEvents","click","e","latlng","lng","useUser","cacheTime","useLogout","useLoginViaSocialMedia","useChangeAvatar","queryClient","useQueryClient","changeUserAvatar","useMutation","onSuccess","setQueryData","usePrefetch","fetchQuery","useCreateVenue","invalidateQueries","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useVenues","debouncedRadius","enabled","forEach","useVenue","useCreateEvent","AvatarMenu","anchorEl","setAnchorEl","menuItems","label","onClick","Icon","ExitToAppIcon","Button","currentTarget","Menu","keepMounted","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","item","MenuItem","ListItemIcon","ListItemText","topBar","minHeight","titleContainer","list","padding","display","flexDirection","icon","filler","NavigationItems","HomeIcon","SportsSoccerIcon","LocationOnIcon","SettingsIcon","DesktopNavigation","selectedValue","useLocation","pathname","split","AppBar","position","Toolbar","Grid","container","justify","alignItems","Typography","List","component","ListItem","selected","button","Link","to","disableGutters","navigation","bottom","top","zIndex","drawer","background","MobileNavigation","history","useHistory","BottomNavigation","onChange","_event","push","BottomNavigationAction","flex","justifyContent","PageTitle","title","action","startIcon","color","root","centered","paddingTop","paddingBottom","content","maxWidth","paddingLeft","Page","titleAction","Hidden","smDown","disableWidth","autoHide","style","document","documentElement","clientHeight","mdUp","Home","suggestionsForValue","find","b","coordA","coordB","geTextFieldLabel","LocationAutocomplete","disabled","required","helperText","onBlur","inputValue","setInputValue","Autocomplete","fullWidth","getOptionLabel","option","options","autoComplete","includeInputInList","filterSelectedOptions","disableClearable","noOptionsText","newValue","onInputChange","newInputValue","renderInput","TextField","renderOption","xs","Marker","L","iconUrl","iconSize","iconAnchor","popupAnchor","Pin","toLeaflet","MapController","useMap","locationFromClick","setView","getZoom","oldLocationFromClick","setOldLocationFromClick","Map","circleRadius","markers","leafCoordinates","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","PinIcon","Circle","center","pathOptions","fillColor","LocationWithMapField","disableChangePositionViaMap","current","direction","sliderContainer","Slider","valueText","toString","marks","step","min","max","handleChange","useCallback","gutterBottom","getAriaValueText","aria-labelledby","Math","round","RadiusSlider","PlayersSlider","DurationSlider","Sports","SportIcons","Football","Basketball","Tennis","Squash","Volleyball","Handball","Padel","Badminton","getIcon","valueHasIcon","SportsAutocomplete","multiple","renderTags","getTagProps","index","Chip","alignContent","DatePicker","autoOk","inputVariant","clearable","disableFuture","format","placeholder","DateTimePicker","disablePast","filtersPaper","dialogPaper","margin","closeButton","right","palette","grey","Dialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","titleId","paper","undefined","disableBackdropClick","disableEscapeKeyDown","scroll","DialogTitle","disableTypography","IconButton","aria-label","DialogActions","actions","CircularProgress","DialogContent","dividers","optionsForValue","v","VenueAutocomplete","VenueWithMapField","setRadius","NewEventInitialFormValues","sport","numPlayers","startsAt","duration","price","amount","currency","NewEventDialogContent","enqueueSnackbar","useSnackbar","isSuccess","isError","initialValues","onSubmit","values","mutate","toISOString","validate","errors","touched","handleBlur","handleSubmit","setFieldValue","multiline","NewEventDialog","Events","sports","setSports","Date","date","setDate","excludeFull","setNotFull","currentLocation","newEventDialogOpen","setNewEventDialogOpen","md","Paper","FormControlLabel","control","Checkbox","checked","NewVenueInitialFormValues","NewVenueDialogContent","NewVenueDialog","link","textDecoration","VenueListItem","ListItemAvatar","primary","secondary","VenueList","VenueMarkers","Popup","Venues","newVenueDialogOpen","setNewVenueDialogOpen","card","address","getGoogleMapsUrl","protocol","isIOS","VenueBasicInfoPanel","Card","CardActionArea","href","rel","target","underline","CardContent","CardMedia","Venue","venueId","useParams","visuallyHidden","AvatarUploader","changeAvatar","changingAvatar","inputEl","useRef","Tooltip","placement","ref","accept","files","avatarContainer","Profile","dataItems","PersonIcon","text","EmailIcon","email","NotificationSettings","tabPanel","tabLabelContainer","tabIcon","AllTabs","Component","NotificationsIcon","Settings","match","useRouteMatch","currentTab","tab","parts","length","lastSegment","Tabs","changeTab","indicatorColor","textColor","Tab","SvgIcon","role","Dashboard","path","exact","render","GoogleIcon","props","d","baseRoot","facebookRoot","backgroundColor","googleRoot","twitterRoot","FacebookLoginButton","clsx","GoogleLoginButton","TwitterLoginButton","buttonsContainer","buttonContainer","LoginButtons","authProvider","Login","loginViaSocialMedia","loginButton","Authenticating","WithAuthentication","WithNoAuthentication","App","withNoAuthentication","withAuthentication","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","lightGreen","typography","textTransform","TeamFindrThemeProvider","ThemeProvider","QueryClient","ReactDOM","StrictMode","QueryClientProvider","client","CssBaseline","utils","DateFnsUtils","initialIsOpen","getElementById"],"mappings":"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","file":"static/js/main.d7843192.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  medium: {\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n  },\n  large: {\n    width: theme.spacing(16),\n    height: theme.spacing(16),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport AvatarBase from '@material-ui/core/Avatar';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport useStyles from './Avatar.styles';\nimport { User } from '../../types';\n\nexport type Size = 'small' | 'medium' | 'large';\ntype Variant = 'circle' | 'rounded' | 'circular' | 'square';\n\ninterface BaseProps {\n  size?: Size;\n  variant?: Variant;\n  loading?: boolean;\n}\n\ntype AvatarProps = Pick<User, 'firstName' | 'lastName' | 'avatar'> & BaseProps;\n\nconst Avatar: React.FC<AvatarProps> = ({\n  firstName,\n  lastName,\n  avatar,\n  size = 'medium',\n  variant,\n  loading = false,\n}) => {\n  const classes = useStyles();\n  const fullName = `${firstName} ${lastName}`;\n  return loading ? (\n    <Skeleton className={classes[size]} variant=\"circle\" animation=\"wave\" />\n  ) : (\n    <AvatarBase\n      variant={variant}\n      className={classes[size]}\n      alt={fullName}\n      src={avatar}\n    />\n  );\n};\n\nexport default React.memo(Avatar);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  fullHeight: {\n    height: '100%',\n  },\n  itemIcon: {\n    minWidth: 0,\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import axios from 'axios';\n\nconst imagesService = {\n  uploadImage: async (file: File): Promise<string> => {\n    const endpoint = 'https://api.cloudinary.com/v1_1/teamfindr/image/upload';\n    const preset = 'teamfindr';\n    const fd = new FormData();\n    fd.append('file', file);\n    fd.append('upload_preset', preset);\n    const {\n      data: { secure_url: url },\n    } = await axios.post(endpoint, fd);\n    return url;\n  },\n};\n\nexport default imagesService;\n","import axios from 'axios';\nimport {\n  Coordinates,\n  Locations,\n  Location,\n  LocationType,\n  GeoType,\n} from '../types';\n\nconst PHOTON_API = 'https://photon.komoot.io';\nconst GEOLOCATION_API =\n  'https://geolocation-db.com/json/85249190-4601-11eb-9067-21b51bc8dee3';\n\ntype DescriptionProperty =\n  | 'number'\n  | 'street'\n  | 'postcode'\n  | 'city'\n  | 'country';\ntype DescriptionProperties = DescriptionProperty[];\n\nconst featureToLocation = (feature: any): Location => {\n  const {\n    geometry: { coordinates },\n    properties: {\n      name,\n      country,\n      city,\n      postcode,\n      housenumber: number,\n      street,\n      type,\n    },\n  } = feature;\n  const baseProperties = {\n    geo: {\n      type: 'Point' as GeoType,\n      coordinates: coordinates,\n    },\n    country,\n    city,\n    postcode,\n    number,\n    street,\n    type,\n  };\n\n  let specificName = '';\n  let descriptionProperties: DescriptionProperties = [];\n\n  switch (feature.properties.type) {\n    case 'house':\n      if (name) {\n        descriptionProperties = [\n          'number',\n          'street',\n          'postcode',\n          'city',\n          'country',\n        ];\n      } else {\n        specificName = `${number ? `${number} ` : ''}${street}`;\n        descriptionProperties = ['postcode', 'city', 'country'];\n      }\n      break;\n    case 'street':\n      descriptionProperties = ['postcode', 'city', 'country'];\n      break;\n    case 'district':\n      descriptionProperties = ['city', 'country'];\n      break;\n    case 'city':\n    case 'county':\n      descriptionProperties = ['country'];\n      break;\n  }\n\n  return {\n    ...baseProperties,\n    name: name || specificName,\n    description: descriptionProperties\n      .map(\n        (propertyName: DescriptionProperty) =>\n          baseProperties[propertyName] as string\n      )\n      .filter((value) => !!value)\n      .join(', '),\n  };\n};\n\nconst getLocationFromCoordinates = async (\n  coordinates: Coordinates\n): Promise<Location> => {\n  const [longitude, latitude] = coordinates;\n  const { data } = await axios.get(\n    `${PHOTON_API}/reverse?lat=${latitude}&lon=${longitude}`\n  );\n  return {\n    ...featureToLocation(data.features[0]),\n    geo: {\n      type: 'Point',\n      coordinates,\n    },\n  };\n};\n\nconst getCoordinatesFromGeolocation = (): Promise<Coordinates> =>\n  new Promise((resolve, reject) => {\n    const geo = navigator.geolocation;\n    if (!geo) {\n      reject({\n        code: GeolocationPositionError.POSITION_UNAVAILABLE,\n        message: 'Geolocation not available',\n      });\n    }\n\n    const handleSuccess: PositionCallback = (newPosition) =>\n      resolve([newPosition.coords.longitude, newPosition.coords.latitude]);\n\n    geo.getCurrentPosition(handleSuccess, reject);\n  });\n\nconst getLocationFromGeolocation = async (): Promise<Location> => {\n  const coordinates = await getCoordinatesFromGeolocation();\n  return getLocationFromCoordinates(coordinates);\n};\n\nconst getLocationFromIp = async (): Promise<Location> => {\n  const {\n    data: { latitude, longitude },\n  } = await axios.get(GEOLOCATION_API);\n  return getLocationFromCoordinates([longitude, latitude]);\n};\n\nconst filterByType = (restrictToType?: LocationType) => (\n  location: Location\n) => {\n  if (!restrictToType) {\n    return true;\n  }\n\n  return location.type === restrictToType;\n};\n\nconst getLocationSuggestions = async (\n  query: string,\n  around?: Coordinates,\n  restrictToType?: LocationType\n): Promise<Locations> => {\n  if (!query) {\n    return [];\n  }\n\n  const aroundQuery = around ? `&lon=${around[0]}&lat=${around[1]}` : '';\n  const url = `${PHOTON_API}/api/?q=${encodeURIComponent(query)}${aroundQuery}`;\n\n  try {\n    const {\n      data: { features },\n    } = await axios.get(url);\n\n    return features.map(featureToLocation).filter(filterByType(restrictToType));\n  } catch (error) {\n    return [];\n  }\n};\n\nconst locationService = {\n  getLocationFromGeolocation,\n  getLocationFromIp,\n  getLocationSuggestions,\n  getLocationFromCoordinates,\n};\n\nexport default locationService;\n","export const API_URL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:5000'\n    : 'https://api.teamfindr.saltares.com';\n","import axios from 'axios';\nimport { User, AuthProvider } from '../types';\nimport { API_URL } from '../endpoints';\n\nconst userService = {\n  verify: async (): Promise<User | null> => {\n    try {\n      const {\n        data: { user },\n      } = await axios.get(`${API_URL}/auth/verify`, {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      });\n      return user;\n    } catch (error) {\n      if (error?.response?.status === 401) {\n        return null;\n      }\n      throw error;\n    }\n  },\n  openIdpAuthPage: (provider: AuthProvider) => {\n    window.open(`${API_URL}/auth/${provider}`, '_self');\n  },\n  logout: () => {\n    window.open(`${API_URL}/auth/logout`, '_self');\n  },\n  patchUser: async (id: string, user: Partial<User>): Promise<User> => {\n    const {\n      data: { user: updatedUser },\n    } = await axios.patch(\n      `${API_URL}/users/${id}`,\n      {\n        user,\n      },\n      {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      }\n    );\n    return updatedUser;\n  },\n};\n\nexport default userService;\n","const encodeQueryData = (data: any) => {\n  const queryParts: string[] = Object.keys(data).reduce(\n    (acc: string[], key: string): string[] => {\n      const value = data[key];\n      if (!key || !value) {\n        return acc;\n      }\n      return [\n        ...acc,\n        `${encodeURIComponent(key)}=${encodeURIComponent(value)}`,\n      ];\n    },\n    []\n  );\n  return queryParts.join('&');\n};\n\nexport default encodeQueryData;\n","import images from './images.service';\nimport location from './location.service';\nimport user from './user.service';\nimport venues from './venues.service';\nimport events from './events.service';\n\nconst services = {\n  images,\n  location,\n  user,\n  venues,\n  events,\n};\n\nexport default services;\n","import axios from 'axios';\nimport { API_URL } from '../endpoints';\nimport { Location, Venue } from '../types';\nimport encodeQueryData from '../utils/encodeQueryData';\n\nexport interface CreateVenueParams {\n  name: string;\n  location: Location;\n}\n\nexport interface GetVenuesParams {\n  location?: Location | null;\n  radius?: number;\n}\n\nconst venuesService = {\n  createVenue: async ({\n    name,\n    location,\n  }: CreateVenueParams): Promise<Venue> => {\n    const {\n      data: { venue },\n    } = await axios.post(\n      `${API_URL}/venues`,\n      { venue: { name, location } },\n      {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      }\n    );\n    return venue;\n  },\n  getVenues: async ({\n    location,\n    radius,\n  }: GetVenuesParams): Promise<Venue[]> => {\n    const coords = location?.geo.coordinates || [];\n    const query = encodeQueryData({\n      lon: coords[0],\n      lat: coords[1],\n      radius,\n    });\n    const {\n      data: { venues },\n    } = await axios.get(`${API_URL}/venues?${query}`, {\n      withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      },\n    });\n    return venues;\n  },\n  getVenue: async (id: string): Promise<Venue> => {\n    const {\n      data: { venue },\n    } = await axios.get(`${API_URL}/venues/${id}`, {\n      withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      },\n    });\n    return venue;\n  },\n};\n\nexport default venuesService;\n","import axios from 'axios';\nimport { API_URL } from '../endpoints';\nimport { Event, Price, Sport } from '../types';\n\nexport interface CreateEventParams {\n  startsAt: string;\n  venue: string;\n  sport: Sport;\n  duration: number;\n  numPlayers: number;\n  description: string;\n  price: Price;\n}\n\nconst eventsService = {\n  createEvent: async (params: CreateEventParams): Promise<Event> => {\n    const {\n      data: { event },\n    } = await axios.post(\n      `${API_URL}/events`,\n      { event: params },\n      {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      }\n    );\n    return event;\n  },\n};\n\nexport default eventsService;\n","import React, { createContext, useContext } from 'react';\nimport services from '../services';\n\ntype ServicesContextType = typeof services;\n\nconst ServiceContext = createContext<ServicesContextType>(services);\n\ninterface ServicesProviderProps {\n  services?: typeof services;\n}\n\nconst ServicesProvider: React.FC<ServicesProviderProps> = ({\n  children,\n  services: injectedServices,\n}) => {\n  return (\n    <ServiceContext.Provider value={injectedServices || services}>\n      {children}\n    </ServiceContext.Provider>\n  );\n};\n\nexport const useServices = () => useContext(ServiceContext);\n\nexport default ServicesProvider;\n","import { useQuery } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useCurrentIpLocation = () => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    'ipLocation',\n    () => services.location.getLocationFromIp(),\n    { staleTime: STALE_TIME_MS, refetchInterval: STALE_TIME_MS }\n  );\n  return {\n    isLoading,\n    error,\n    location: data || null,\n  };\n};\n\nconst useCurrentGeoLocation = () => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    'geoLocation',\n    () => services.location.getLocationFromGeolocation(),\n    { staleTime: STALE_TIME_MS, refetchInterval: STALE_TIME_MS }\n  );\n  return {\n    isLoading,\n    error,\n    location: data || null,\n  };\n};\n\nconst useCurrentLocation = () => {\n  const geoLocation = useCurrentGeoLocation();\n  const ipLocation = useCurrentIpLocation();\n\n  const ipLocationFinished = !!ipLocation.location || !!ipLocation.error;\n  const geoError = !!geoLocation.error;\n  const validIp = ipLocationFinished && !!ipLocation;\n\n  if (geoError && validIp) {\n    return ipLocation;\n  }\n\n  return geoLocation;\n};\n\nexport default useCurrentLocation;\n","import { useState, useEffect } from 'react';\nimport { useDebounce } from 'use-lodash-debounce';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { Coordinates, Locations, LocationType } from '../../types';\n\ninterface UseLocationTypeArgs {\n  query: string;\n  around?: Coordinates;\n  restrictToType?: LocationType;\n}\n\nconst useLocationAutocomplete = ({\n  query,\n  around,\n  restrictToType,\n}: UseLocationTypeArgs) => {\n  const services = useServices();\n  const debouncedQuery = useDebounce(query, 200);\n  const [suggestions, setSuggestions] = useState<Locations>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const performSearch = async () => {\n      setLoading(true);\n      const newSuggestions = await services.location.getLocationSuggestions(\n        debouncedQuery,\n        around,\n        restrictToType\n      );\n      if (newSuggestions) {\n        setSuggestions(newSuggestions);\n      }\n      setLoading(false);\n    };\n    performSearch();\n  }, [\n    debouncedQuery,\n    setSuggestions,\n    setLoading,\n    services,\n    around,\n    restrictToType,\n  ]);\n\n  return { suggestions, loading };\n};\n\nexport default useLocationAutocomplete;\n","import { useEffect, useState } from 'react';\nimport { useDebounce } from 'use-lodash-debounce';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { Coordinates, Location } from '../../types';\n\nconst debounceTimeMs = 200;\nconst debounceOpts = {\n  leading: true,\n  trailing: true,\n};\n\nconst useLocationFromCoordinates = (coordinates: Coordinates | null) => {\n  const debouncedCoordinates = useDebounce(\n    coordinates,\n    debounceTimeMs,\n    debounceOpts\n  );\n  const [location, setLocation] = useState<Location | null>(null);\n  const services = useServices();\n\n  useEffect(() => {\n    const lookupCoordinates = async () => {\n      if (!debouncedCoordinates) {\n        return;\n      }\n      try {\n        const newLocation = await services.location.getLocationFromCoordinates(\n          debouncedCoordinates\n        );\n        setLocation(newLocation);\n      } catch (e) {}\n    };\n    lookupCoordinates();\n  }, [debouncedCoordinates, services, setLocation]);\n\n  return location;\n};\n\nexport default useLocationFromCoordinates;\n","import { useState } from 'react';\nimport { useMapEvents } from 'react-leaflet';\nimport { Coordinates } from '../../types';\nimport useLocationFromCoordinates from './useLocationFromCoordinates';\n\nconst useLocationFromMapClick = () => {\n  const [coordinates, setCoordinates] = useState<Coordinates | null>(null);\n  const location = useLocationFromCoordinates(coordinates);\n\n  useMapEvents({\n    click: (e) => {\n      setCoordinates([e.latlng.lng, e.latlng.lat]);\n    },\n  });\n\n  return location;\n};\n\nexport default useLocationFromMapClick;\n","import { useQuery } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useUser = () => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    'user',\n    () => services.user.verify(),\n    {\n      staleTime: STALE_TIME_MS,\n      cacheTime: STALE_TIME_MS,\n    }\n  );\n  return {\n    isLoading,\n    error,\n    user: data,\n  };\n};\n\nexport default useUser;\n","import { useServices } from '../../providers/ServicesProvider';\n\nconst useLogout = () => {\n  const services = useServices();\n  return services.user.logout;\n};\n\nexport default useLogout;\n","import { useServices } from '../../providers/ServicesProvider';\n\nconst useLoginViaSocialMedia = () => {\n  const services = useServices();\n  return services.user.openIdpAuthPage;\n};\n\nexport default useLoginViaSocialMedia;\n","import { useMutation, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { User } from '../../types';\nimport useUser from './useUser';\n\nconst useChangeAvatar = () => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const user = useUser().user as User;\n  const changeUserAvatar = async (file: File) => {\n    const url = await services.images.uploadImage(file);\n    return services.user.patchUser(user.id, { avatar: url });\n  };\n  const mutation = useMutation(changeUserAvatar, {\n    onSuccess: (data) => {\n      queryClient.setQueryData('user', data);\n    },\n  });\n  return mutation;\n};\n\nexport default useChangeAvatar;\n","import { useEffect } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst usePrefetch = () => {\n  const services = useServices();\n  const queryClient = useQueryClient();\n  useEffect(() => {\n    queryClient.fetchQuery('user', services.user.verify);\n    queryClient.fetchQuery('ipLocation', services.location.getLocationFromIp);\n    queryClient.fetchQuery(\n      'geoLocation',\n      services.location.getLocationFromGeolocation\n    );\n  }, [queryClient, services]);\n};\n\nexport default usePrefetch;\n","import { useMutation, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst useCreateVenue = () => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const mutation = useMutation(services.venues.createVenue, {\n    onSuccess: (data) => {\n      queryClient.invalidateQueries('venues');\n      queryClient.setQueryData(`venues/${data.id}`, data);\n    },\n  });\n  return mutation;\n};\n\nexport default useCreateVenue;\n","import { useState, useEffect } from 'react';\n\nconst useDebounce = <T>(value: T, delay: number = 500) => {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler: NodeJS.Timeout = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useQuery, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { Location } from '../../types';\nimport useDebounce from '../utils/useDebounce';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useVenues = (location: Location | null, radius: number) => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const debouncedRadius = useDebounce(radius, 200);\n  const { isLoading, error, data } = useQuery(\n    ['venues', [location?.geo.coordinates, debouncedRadius]],\n    () => services.venues.getVenues({ location, radius: debouncedRadius }),\n    {\n      staleTime: STALE_TIME_MS,\n      enabled: !!location,\n      onSuccess: (venues) => {\n        venues.forEach((venue) => {\n          queryClient.setQueryData(`venues/${venue.id}`, venue);\n        });\n      },\n    }\n  );\n  return {\n    isLoading,\n    error,\n    venues: data,\n  };\n};\n\nexport default useVenues;\n","import { useQuery } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useVenue = (id: string) => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    `venues/${id}`,\n    () => services.venues.getVenue(id),\n    {\n      staleTime: STALE_TIME_MS,\n    }\n  );\n  return {\n    isLoading,\n    error,\n    venue: data,\n  };\n};\n\nexport default useVenue;\n","import { useMutation, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst useCreateEvent = () => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const mutation = useMutation(services.events.createEvent, {\n    onSuccess: (data) => {\n      queryClient.invalidateQueries('events');\n      queryClient.setQueryData(`events/${data.id}`, data);\n    },\n  });\n  return mutation;\n};\n\nexport default useCreateEvent;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Avatar from '../Avatar';\nimport useStyles from './AvatarMenu.styles';\nimport { useUser, useLogout } from '../../hooks';\nimport { User } from '../../types';\n\nconst AvatarMenu = () => {\n  const user = useUser().user as User;\n  const logout = useLogout();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  const classes = useStyles();\n\n  const menuItems = [\n    {\n      key: 'logout',\n      label: 'Log out',\n      onClick: handleLogout,\n      Icon: ExitToAppIcon,\n    },\n  ];\n\n  return (\n    <>\n      <Button className={classes.fullHeight} onClick={handleClick}>\n        <Avatar avatar={user.avatar} />\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        {menuItems.map((item) => (\n          <MenuItem key={item.key} onClick={item.onClick}>\n            <ListItemIcon className={classes.itemIcon}>\n              <item.Icon />\n            </ListItemIcon>\n            <ListItemText>{item.label}</ListItemText>\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default React.memo(AvatarMenu);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  topBar: {\n    minHeight: 'auto',\n    height: 64,\n  },\n  fullHeight: {\n    height: '100%',\n  },\n  titleContainer: {\n    paddingRight: theme.spacing(6),\n  },\n  list: {\n    padding: 0,\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100%',\n  },\n  item: {\n    height: '100%',\n  },\n  icon: {\n    minWidth: 0,\n    paddingRight: theme.spacing(1),\n  },\n  filler: {\n    height: 64,\n  },\n}));\n\nexport default useStyles;\n","import HomeIcon from '@material-ui/icons/Home';\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst NavigationItems = [\n  {\n    value: 'home',\n    label: 'Home',\n    icon: HomeIcon,\n  },\n  {\n    value: 'events',\n    label: 'Events',\n    icon: SportsSoccerIcon,\n  },\n  {\n    value: 'venues',\n    label: 'Venues',\n    icon: LocationOnIcon,\n  },\n  {\n    value: 'settings',\n    label: 'Settings',\n    icon: SettingsIcon,\n  },\n];\n\nexport default NavigationItems;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport AvatarMenu from '../../AvatarMenu/AvatarMenu';\nimport useStyles from './DesktopNavigation.styles';\nimport NavigationItems from '../navigationItems';\n\nconst DesktopNavigation = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const selectedValue = location.pathname.split('/')[1];\n\n  return (\n    <>\n      <AppBar className={classes.topBar} position=\"fixed\">\n        <Toolbar>\n          <Grid\n            container\n            className={classes.fullHeight}\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item className={classes.fullHeight}>\n              <Grid\n                container\n                className={classes.fullHeight}\n                alignItems=\"center\"\n              >\n                <Grid item className={classes.titleContainer}>\n                  <Typography variant=\"h5\">TeamFindr</Typography>\n                </Grid>\n                <Grid item className={classes.fullHeight}>\n                  <List className={classes.list} component=\"nav\">\n                    {NavigationItems.map((item) => (\n                      <ListItem\n                        key={item.value}\n                        className={classes.item}\n                        selected={item.value === selectedValue}\n                        button\n                        component={Link}\n                        to={`/${item.value}`}\n                      >\n                        <ListItemIcon className={classes.icon}>\n                          <item.icon />\n                        </ListItemIcon>\n                        <ListItemText>{item.label}</ListItemText>\n                      </ListItem>\n                    ))}\n                  </List>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item className={classes.fullHeight}>\n              <AvatarMenu />\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Toolbar disableGutters className={classes.filler} />\n    </>\n  );\n};\n\nexport default React.memo(DesktopNavigation);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  navigation: {\n    position: 'fixed',\n    bottom: 0,\n    top: 'auto',\n    width: '100%',\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  filler: {\n    background: 'none',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport BottomNavigationBase from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport useStyles from './MobileNavigation.styles';\nimport NavigationItems from '../navigationItems';\n\nconst MobileNavigation = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const selectedValue = location.pathname.split('/')[1];\n\n  const handleNavigationChange = (\n    _event: React.ChangeEvent<{}>,\n    value: string\n  ) => {\n    history.push(`/${value}`);\n  };\n\n  return (\n    <>\n      <BottomNavigationBase className={classes.filler} />\n      <BottomNavigationBase\n        className={classes.navigation}\n        value={selectedValue}\n        onChange={handleNavigationChange}\n      >\n        {NavigationItems.map((item) => (\n          <BottomNavigationAction\n            key={item.value}\n            value={item.value}\n            label={item.label}\n            icon={<item.icon />}\n          />\n        ))}\n      </BottomNavigationBase>\n    </>\n  );\n};\n\nexport default React.memo(MobileNavigation);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './PageTitle.styles';\nimport Button from '@material-ui/core/Button';\n\nexport interface PageTitleAction {\n  label: string;\n  icon: React.ReactElement;\n  onClick: () => void;\n}\n\ninterface PageTitleProps {\n  title: string;\n  action?: PageTitleAction;\n}\n\nconst PageTitle: React.FC<PageTitleProps> = ({ title, action }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div>\n        <Typography variant=\"h4\">{title}</Typography>\n      </div>\n      {action && (\n        <div>\n          <Button\n            startIcon={action.icon}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={action.onClick}\n          >\n            {action.label}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(PageTitle);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  centered: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  content: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    width: '100%',\n    maxWidth: '900px',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { AutoSizer } from 'react-virtualized';\nimport DesktopNavigation from '../../components/Navigation/DesktopNavigation';\nimport MobileNavigation from '../../components/Navigation/MobileNavigation';\nimport PageTitle, { PageTitleAction } from './PageTitle';\nimport useStyles from './Page.styles';\n\ninterface PageProps {\n  title: string;\n  titleAction?: PageTitleAction;\n  children: React.ReactElement;\n}\n\nconst Page: React.FC<PageProps> = ({ title, titleAction, children }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Hidden smDown>\n        <DesktopNavigation />\n      </Hidden>\n      <AutoSizer disableWidth>\n        {({ height }) => (\n          <Scrollbars\n            autoHide\n            style={{\n              width: '100%',\n              height: document.documentElement.clientHeight - height,\n            }}\n          >\n            <div className={classes.centered}>\n              <main className={classes.content}>\n                <div className={classes.titleContainer}>\n                  <PageTitle title={title} action={titleAction} />\n                </div>\n                {children}\n              </main>\n            </div>\n          </Scrollbars>\n        )}\n      </AutoSizer>\n      <Hidden mdUp>\n        <MobileNavigation />\n      </Hidden>\n    </div>\n  );\n};\n\nexport default React.memo(Page);\n","import React from 'react';\nimport Page from '../../components/Page';\n\nconst Home = () => (\n  <Page title=\"Home\">\n    <div>Page content</div>\n  </Page>\n);\n\nexport default React.memo(Home);\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { useLocationAutocomplete } from '../../hooks';\nimport { Coordinates, Location, Locations, LocationType } from '../../types';\n\ninterface LocationAutocompleteProps {\n  value: Location | null;\n  around?: Coordinates;\n  onChange: (value: Location | null) => void;\n  disabled?: boolean;\n  required?: boolean;\n  restrictToType?: LocationType;\n  name?: string;\n  error?: boolean;\n  helperText?: string | false;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nconst byCoordinates = (a: Location) => (b: Location) => {\n  const {\n    geo: { coordinates: coordA },\n  } = a;\n  const {\n    geo: { coordinates: coordB },\n  } = b;\n  return coordA[0] === coordB[0] && coordA[1] === coordB[1];\n};\n\nconst suggestionsForValue = (\n  value: Location | null,\n  suggestions: Locations\n): Locations => {\n  if (!value) {\n    return suggestions;\n  }\n\n  const suggestion = suggestions.find(byCoordinates(value));\n  if (!suggestion) {\n    return [value, ...suggestions];\n  }\n\n  return suggestions;\n};\n\nconst getOptionLabel = (option: Location, restrictToType?: LocationType) =>\n  restrictToType && restrictToType !== 'house'\n    ? option[restrictToType] || (option.name as string)\n    : option.name;\n\nconst geTextFieldLabel = (restrictToType?: LocationType) =>\n  `Enter a ${restrictToType || 'location'}`;\n\nconst LocationAutocomplete: React.FC<LocationAutocompleteProps> = ({\n  value,\n  around,\n  onChange,\n  disabled = false,\n  required = false,\n  restrictToType,\n  name,\n  error = false,\n  helperText,\n  onBlur,\n}) => {\n  const [inputValue, setInputValue] = useState<string>('');\n  const { suggestions, loading } = useLocationAutocomplete({\n    query: inputValue,\n    around,\n    restrictToType,\n  });\n\n  return (\n    <Autocomplete\n      fullWidth\n      disabled={disabled}\n      getOptionLabel={(option) => getOptionLabel(option, restrictToType)}\n      options={suggestionsForValue(value, suggestions)}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      disableClearable={true}\n      value={value as Location}\n      loading={loading}\n      noOptionsText={'No results'}\n      onChange={(event, newValue) => {\n        onChange(newValue);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          name={name}\n          label={geTextFieldLabel(restrictToType)}\n          variant=\"outlined\"\n          fullWidth\n          required={required}\n          error={error}\n          helperText={helperText}\n          onBlur={onBlur}\n        />\n      )}\n      renderOption={(option) => (\n        <Grid container alignItems=\"center\" spacing={1}>\n          <Grid item>\n            <Typography color=\"textSecondary\">\n              <LocationOnIcon />\n            </Typography>\n          </Grid>\n          <Grid item xs>\n            <Typography color=\"textPrimary\">{option.name}</Typography>\n            <Typography color=\"textSecondary\">\n              {option.description || ''}\n            </Typography>\n          </Grid>\n        </Grid>\n      )}\n    />\n  );\n};\n\nexport default React.memo(LocationAutocomplete);\n","import L from 'leaflet';\n\nexport const Marker = L.icon({\n  iconUrl: '/icons/marker.svg',\n  iconSize: [38, 95],\n  iconAnchor: [19, 60],\n  popupAnchor: [0, -20],\n});\n\nexport const Pin = L.icon({\n  iconUrl: '/icons/pin.svg',\n  iconSize: [38, 95],\n  iconAnchor: [19, 60],\n  popupAnchor: [0, -15],\n});\n","import { Coordinates } from '../types';\n\nexport const toLeaflet = (coordinates: Coordinates): Coordinates => [\n  coordinates[1],\n  coordinates[0],\n];\n","import React, { useState, useEffect } from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Circle,\n  useMap,\n  useMapEvents,\n} from 'react-leaflet';\nimport { Pin as PinIcon } from './icons';\nimport { Location } from '../../types';\nimport { toLeaflet } from '../../utils/leaflet';\nimport { useLocationFromMapClick } from '../../hooks';\n\ninterface MapControllerProps {\n  onChange?: (location: Location) => void;\n  location: Location;\n}\n\nconst MapController: React.FC<MapControllerProps> = ({\n  onChange,\n  location,\n}) => {\n  const map = useMap();\n  const locationFromClick = useLocationFromMapClick();\n\n  useMapEvents({\n    click: (e) => {\n      map.setView([e.latlng.lat, e.latlng.lng], map.getZoom());\n    },\n  });\n\n  const [\n    oldLocationFromClick,\n    setOldLocationFromClick,\n  ] = useState<Location | null>(null);\n\n  const coordinates = location.geo.coordinates;\n\n  useEffect(() => {\n    if (\n      onChange &&\n      locationFromClick &&\n      locationFromClick !== oldLocationFromClick\n    ) {\n      onChange(locationFromClick);\n      setOldLocationFromClick(locationFromClick);\n    }\n  }, [\n    locationFromClick,\n    onChange,\n    oldLocationFromClick,\n    setOldLocationFromClick,\n  ]);\n\n  useEffect(() => {\n    map.setView(toLeaflet(coordinates), map.getZoom());\n  }, [map, coordinates]);\n\n  return null;\n};\n\ninterface MapProps {\n  location: Location | null;\n  onChange?: (location: Location | null) => void;\n  circleRadius?: number;\n  markers?: React.ReactNode;\n}\n\nconst Map: React.FC<MapProps> = ({\n  location,\n  onChange,\n  circleRadius,\n  markers,\n}) => {\n  if (!location) {\n    return <Skeleton width=\"100%\" height={310} variant=\"rect\" />;\n  }\n\n  const coordinates = location.geo.coordinates;\n  const leafCoordinates = toLeaflet(coordinates);\n\n  return (\n    <div style={{ width: '100%' }}>\n      <MapContainer zoom={12} scrollWheelZoom={true}>\n        <MapController location={location} onChange={onChange} />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={leafCoordinates} icon={PinIcon} />\n        {circleRadius && (\n          <Circle\n            center={leafCoordinates}\n            pathOptions={{ color: 'green', fillColor: 'green' }}\n            radius={circleRadius}\n          />\n        )}\n        {!!markers && markers}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default React.memo(Map);\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Coordinates, Location, LocationType } from '../../types';\nimport LocationAutocomplete from '../LocationAutocomplete';\nimport Map from '../Map';\nimport { useCurrentLocation } from '../../hooks';\n\ninterface LocationFieldProps {\n  location: Location | null;\n  around?: Coordinates;\n  onChange: (location: Location | null) => void;\n  disabled?: boolean;\n  name?: string;\n  error?: boolean;\n  helperText?: string | false;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  disableChangePositionViaMap?: boolean;\n  restrictToType?: LocationType;\n  circleRadius?: number;\n  markers?: React.ReactNode;\n}\n\nconst LocationWithMapField: React.FC<LocationFieldProps> = ({\n  location,\n  onChange,\n  disabled = false,\n  name,\n  error = false,\n  helperText,\n  onBlur,\n  disableChangePositionViaMap,\n  restrictToType,\n  circleRadius,\n  markers,\n}) => {\n  const { location: current } = useCurrentLocation();\n  useEffect(() => {\n    if (!location && current) {\n      onChange(current);\n    }\n  }, [current, onChange, location]);\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item>\n        <LocationAutocomplete\n          name={name}\n          value={location}\n          onChange={onChange}\n          disabled={disabled || disableChangePositionViaMap}\n          required\n          around={current?.geo.coordinates}\n          error={error}\n          helperText={helperText}\n          onBlur={onBlur}\n          restrictToType={restrictToType}\n        />\n      </Grid>\n      <Grid item>\n        <Map\n          location={location}\n          onChange={onChange}\n          circleRadius={circleRadius}\n          markers={markers}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(LocationWithMapField);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  sliderContainer: {\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import React, { useCallback } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MuiSlider from '@material-ui/core/Slider';\nimport useStyles from './Slider.styles';\n\ninterface Mark {\n  value: number;\n  label: string;\n}\n\ntype Marks = Mark[];\n\ninterface SliderProps {\n  id: string;\n  value: number;\n  onChange: (e: React.ChangeEvent<{}>, value: number) => void;\n  name?: string;\n  disabled?: boolean;\n  valueText?: (value: number) => string;\n  marks?: Marks;\n  label: string;\n  step: number;\n  min: number;\n  max: number;\n}\n\nconst Slider: React.FC<SliderProps> = ({\n  id,\n  value,\n  onChange,\n  name,\n  disabled,\n  valueText = (value) => value.toString(),\n  marks,\n  label,\n  step,\n  min,\n  max,\n}) => {\n  const classes = useStyles();\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<{}>, value: number | number[]) => {\n      onChange(e, value as number);\n    },\n    [onChange]\n  );\n  return (\n    <div className={classes.root}>\n      <Typography id={id} gutterBottom>\n        {label}: {`${valueText(value)}`}\n      </Typography>\n      <div className={classes.sliderContainer}>\n        <MuiSlider\n          getAriaValueText={valueText}\n          aria-labelledby={id}\n          step={step}\n          marks={marks}\n          min={min}\n          max={max}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          disabled={disabled}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Slider);\n","import React from 'react';\nimport Slider from './Slider';\n\ninterface RadiusSliderProps {\n  id: string;\n  value: number;\n  onChange: (e: React.ChangeEvent<{}>, value: number) => void;\n  name?: string;\n  disabled?: boolean;\n}\n\nfunction valueText(value: number) {\n  return `${Math.round(value / 1000)}km`;\n}\n\nconst marks = [\n  {\n    value: 1000,\n    label: '1km',\n  },\n  {\n    value: 5000,\n    label: '5km',\n  },\n  {\n    value: 10000,\n    label: '10km',\n  },\n  {\n    value: 20000,\n    label: '20km',\n  },\n  {\n    value: 30000,\n    label: '30km',\n  },\n];\n\nconst RadiusSlider: React.FC<RadiusSliderProps> = ({\n  id,\n  value,\n  onChange,\n  name,\n  disabled,\n}) => (\n  <Slider\n    label=\"Radius\"\n    id={id}\n    valueText={valueText}\n    step={1000}\n    marks={marks}\n    min={1000}\n    max={30000}\n    name={name}\n    value={value}\n    onChange={onChange}\n    disabled={disabled}\n  />\n);\n\nexport default React.memo(RadiusSlider);\n","import React from 'react';\nimport Slider from './Slider';\n\ninterface PlayerSliderProps {\n  id: string;\n  value: number;\n  onChange: (e: React.ChangeEvent<{}>, value: number) => void;\n  name?: string;\n  disabled?: boolean;\n}\n\nconst PlayersSlider: React.FC<PlayerSliderProps> = ({\n  id,\n  value,\n  onChange,\n  name,\n  disabled,\n}) => (\n  <Slider\n    label=\"Number of players\"\n    id={id}\n    step={1}\n    min={2}\n    max={30}\n    name={name}\n    value={value}\n    onChange={onChange}\n    disabled={disabled}\n  />\n);\n\nexport default React.memo(PlayersSlider);\n","import React from 'react';\nimport Slider from './Slider';\n\ninterface DurationSliderProps {\n  id: string;\n  value: number;\n  onChange: (e: React.ChangeEvent<{}>, value: number) => void;\n  name?: string;\n  disabled?: boolean;\n}\n\nconst valueText = (value: number) => `${value} min`;\n\nconst DurationSlider: React.FC<DurationSliderProps> = ({\n  id,\n  value,\n  onChange,\n  name,\n  disabled,\n}) => (\n  <Slider\n    label=\"Duration\"\n    id={id}\n    valueText={valueText}\n    step={15}\n    min={15}\n    max={120}\n    name={name}\n    value={value}\n    onChange={onChange}\n    disabled={disabled}\n  />\n);\n\nexport default React.memo(DurationSlider);\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport { Sport } from '../../types';\n\nconst Sports: Sport[] = [\n  'Football',\n  'Basketball',\n  'Tennis',\n  'Squash',\n  'Volleyball',\n  'Handball',\n  'Padel',\n  'Badminton',\n  'Table tennis',\n];\n\nconst SportIcons = {\n  Football: SportsSoccerIcon,\n  Basketball: SportsSoccerIcon,\n  Tennis: SportsSoccerIcon,\n  Squash: SportsSoccerIcon,\n  Volleyball: SportsSoccerIcon,\n  Handball: SportsSoccerIcon,\n  Padel: SportsSoccerIcon,\n  Badminton: SportsSoccerIcon,\n  'Table tennis': SportsSoccerIcon,\n};\n\ninterface SportsAutocompleteProps {\n  value: any;\n  onChange: (value: any) => void;\n  disabled?: boolean;\n  required?: boolean;\n  name?: string;\n  error?: boolean;\n  helperText?: string | false;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  multiple?: boolean;\n}\n\nconst valueHasIcon = (value: string): value is keyof typeof SportIcons =>\n  value in SportIcons;\n\nconst getIcon = (value: string) => {\n  if (valueHasIcon(value)) {\n    const Icon = SportIcons[value];\n    return <Icon />;\n  }\n  return undefined;\n};\n\nconst SportsAutocomplete: React.FC<SportsAutocompleteProps> = ({\n  value,\n  multiple,\n  onChange,\n  disabled,\n  required,\n  name,\n  error,\n  helperText,\n  onBlur,\n}) => {\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => onChange(newValue)}\n      multiple={multiple}\n      filterSelectedOptions\n      disabled={disabled}\n      options={Sports}\n      renderTags={(value, getTagProps) =>\n        value.map((option, index) => (\n          <Chip\n            variant=\"outlined\"\n            icon={getIcon(option)}\n            label={option}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"outlined\"\n          fullWidth\n          disabled={disabled}\n          required={required}\n          name={name}\n          error={error}\n          helperText={helperText}\n          onBlur={onBlur}\n          label={multiple ? 'Sports' : 'Sport'}\n        />\n      )}\n      renderOption={(option) => {\n        return (\n          <Grid container alignContent=\"center\" spacing={1}>\n            <Grid item>\n              <Typography color=\"textSecondary\">\n                {getIcon(option) || null}\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <Typography color=\"textSecondary\">{option}</Typography>\n            </Grid>\n          </Grid>\n        );\n      }}\n    />\n  );\n};\n\nexport default React.memo(SportsAutocomplete);\n","import React from 'react';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\ninterface DatePickerProps {\n  value: Date | null;\n  onChange: (date: Date | null) => void;\n  disabled?: boolean;\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({\n  value,\n  onChange,\n  disabled,\n}) => {\n  return (\n    <KeyboardDatePicker\n      autoOk\n      fullWidth\n      inputVariant=\"outlined\"\n      label=\"Date\"\n      clearable\n      disableFuture\n      value={value}\n      onChange={onChange}\n      format=\"yyyy/MM/dd\"\n      placeholder=\"yyyy/mm/dd\"\n      disabled={disabled}\n    />\n  );\n};\nexport default React.memo(DatePicker);\n","import React from 'react';\nimport { KeyboardDateTimePicker } from '@material-ui/pickers';\n\ninterface DateTimePickerProps {\n  value: Date | null;\n  onChange: (date: Date | null) => void;\n  disabled?: boolean;\n  onBlur?: (\n    event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n  name?: string;\n  required?: boolean;\n  error?: boolean;\n  helperText?: string | false;\n  disablePast?: boolean;\n}\n\nconst DateTimePicker: React.FC<DateTimePickerProps> = ({\n  value,\n  onChange,\n  disabled,\n  onBlur,\n  name,\n  required,\n  error,\n  helperText,\n  disablePast,\n}) => {\n  return (\n    <KeyboardDateTimePicker\n      name={name}\n      autoOk\n      disablePast={disablePast}\n      fullWidth\n      error={error}\n      helperText={helperText}\n      required={required}\n      inputVariant=\"outlined\"\n      label=\"Date & time\"\n      clearable\n      value={value}\n      onChange={onChange}\n      format=\"yyyy/MM/dd HH:mm\"\n      placeholder=\"yyyy/mm/dd hh:mm\"\n      disabled={disabled}\n      onBlur={onBlur}\n    />\n  );\n};\nexport default React.memo(DateTimePicker);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  filtersPaper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    minWidth: 500,\n    maxWidth: 900,\n  },\n  title: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport DialogBase from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\nimport useStyles from './Dialog.styles';\n\ninterface DialogProps {\n  id: string;\n  open: boolean;\n  onClose: () => void;\n  title: string;\n  loading?: boolean;\n  children: React.ReactNode;\n}\n\nconst Dialog: React.FC<DialogProps> = ({\n  id,\n  open,\n  onClose,\n  title,\n  children,\n  loading = false,\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const titleId = `${id}-title`;\n  const classes = useStyles();\n\n  return (\n    <DialogBase\n      classes={{\n        paper: !fullScreen ? classes.dialogPaper : undefined,\n      }}\n      fullScreen={fullScreen}\n      disableBackdropClick={loading}\n      disableEscapeKeyDown={loading}\n      onClose={onClose}\n      aria-labelledby={titleId}\n      open={open}\n      scroll=\"paper\"\n    >\n      <DialogTitle id={titleId} className={classes.title} disableTypography>\n        <Typography variant=\"h6\">{title}</Typography>\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      {open && children}\n    </DialogBase>\n  );\n};\n\nexport default React.memo(Dialog);\n","import React from 'react';\nimport DialogActionsBase from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\ninterface Action {\n  key: string;\n  label: string;\n  disabled?: boolean;\n  loading?: boolean;\n  onClick?: () => void;\n  type?: 'submit';\n}\n\ninterface DialogActionProps {\n  actions: Action[];\n  loading?: boolean;\n}\n\nconst DialogActions: React.FC<DialogActionProps> = ({\n  actions,\n  loading = false,\n}) => (\n  <DialogActionsBase>\n    {actions.map((action) => (\n      <Button\n        key={action.key}\n        type={action.type}\n        onClick={action.onClick}\n        color=\"primary\"\n        disabled={action.disabled || loading}\n      >\n        {action.loading ? (\n          <CircularProgress size={24} color=\"primary\" />\n        ) : (\n          action.label\n        )}\n      </Button>\n    ))}\n  </DialogActionsBase>\n);\n\nexport default React.memo(DialogActions);\n","import React from 'react';\nimport DialogContentBase from '@material-ui/core/DialogContent';\n\ninterface DialogContentProps {\n  children: React.ReactNode;\n}\n\nconst DialogContent: React.FC<DialogContentProps> = ({ children }) => (\n  <DialogContentBase dividers>{children}</DialogContentBase>\n);\n\nexport default React.memo(DialogContent);\n","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { Venue } from '../../types';\n\ninterface VenueAutocompleteProps {\n  value: Venue | null;\n  onChange: (value: Venue | null) => void;\n  options: Venue[];\n  disabled?: boolean;\n  required?: boolean;\n  name?: string;\n  error?: boolean;\n  helperText?: string | false;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nconst optionsForValue = (value: Venue | null, options: Venue[]): Venue[] => {\n  if (!value) {\n    return options;\n  }\n\n  const suggestion = options.find((v) => v.id === value.id);\n  if (!suggestion) {\n    return [value, ...options];\n  }\n\n  return options;\n};\n\nconst VenueAutocomplete: React.FC<VenueAutocompleteProps> = ({\n  value,\n  onChange,\n  options,\n  disabled,\n  required,\n  name,\n  error,\n  helperText,\n  onBlur,\n}) => {\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(_event, newValue) => onChange(newValue)}\n      disabled={disabled}\n      options={optionsForValue(value, options)}\n      getOptionLabel={(option) => option.name}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"outlined\"\n          fullWidth\n          disabled={disabled}\n          required={required}\n          name={name}\n          error={error}\n          helperText={helperText}\n          onBlur={onBlur}\n          label=\"Venue\"\n        />\n      )}\n      renderOption={(option) => (\n        <Grid container alignItems=\"center\" spacing={1}>\n          <Grid item>\n            <Typography color=\"textSecondary\">\n              <LocationOnIcon />\n            </Typography>\n          </Grid>\n          <Grid item xs>\n            <Typography color=\"textPrimary\">{option.name}</Typography>\n            <Typography color=\"textSecondary\">\n              {option.location.description || ''}\n            </Typography>\n          </Grid>\n        </Grid>\n      )}\n    />\n  );\n};\n\nexport default React.memo(VenueAutocomplete);\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Location, Venue } from '../../types';\nimport VenueAutocomplete from './VenueAutocomplete';\nimport Map from '../Map';\nimport { useCurrentLocation, useVenues } from '../../hooks';\nimport { RadiusSlider } from '../Slider';\n\ninterface VenueWithMapFieldProps {\n  value: Venue | null;\n  onChange: (venue: Venue | null) => void;\n  disabled?: boolean;\n  name?: string;\n  error?: boolean;\n  helperText?: string | false;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nconst VenueWithMapField: React.FC<VenueWithMapFieldProps> = ({\n  value,\n  onChange,\n  name,\n  disabled = false,\n  error = false,\n  helperText,\n  onBlur,\n}) => {\n  const [location, setLocation] = useState<Location | null>(null);\n  const [radius, setRadius] = useState<number>(5000);\n  const { venues } = useVenues(location, radius);\n  const { location: current, isLoading } = useCurrentLocation();\n  useEffect(() => {\n    if (!location && current) {\n      setLocation(current);\n    }\n  }, [current, setLocation, location]);\n\n  const handleRadiusChange = (e: React.ChangeEvent<{}>, value: number) =>\n    setRadius(value);\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item>\n        <VenueAutocomplete\n          value={value}\n          options={venues || []}\n          onChange={onChange}\n          disabled={disabled}\n          required\n          name={name}\n          error={error}\n          helperText={helperText}\n          onBlur={onBlur}\n        />\n      </Grid>\n      <Grid item>\n        <Map location={location} onChange={setLocation} circleRadius={radius} />\n      </Grid>\n      <Grid item>\n        <RadiusSlider\n          id=\"venue-field-radius\"\n          value={radius}\n          disabled={isLoading}\n          onChange={handleRadiusChange}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(VenueWithMapField);\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { DialogContent, DialogActions } from '../Dialog';\nimport SportsAutocomplete from '../SportsAutocomplete';\nimport { DateTimePicker } from '../DatePicker';\nimport { PlayersSlider, DurationSlider } from '../Slider';\nimport VenueWithMapField from './VenueWithMapField';\nimport { Price, Sport, Venue } from '../../types';\nimport { useCreateEvent } from '../../hooks';\n\ninterface NewEventFormValues {\n  venue: Venue | null;\n  sport: Sport | null;\n  numPlayers: number;\n  startsAt: Date | null;\n  duration: number;\n  price: Price;\n  description: string;\n}\n\nconst NewEventInitialFormValues: NewEventFormValues = {\n  venue: null,\n  sport: null,\n  numPlayers: 2,\n  startsAt: null,\n  duration: 60,\n  price: {\n    amount: 1,\n    currency: 'EUR',\n  },\n  description: '',\n};\n\ninterface NewEventDialogContentProps {\n  onClose: () => void;\n}\n\nconst NewEventDialogContent: React.FC<NewEventDialogContentProps> = ({\n  onClose,\n}) => {\n  const createEvent = useCreateEvent();\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (createEvent.isSuccess) {\n      onClose();\n      enqueueSnackbar('Event created', { variant: 'success' });\n    }\n    if (createEvent.isError) {\n      enqueueSnackbar('Failed to create event', { variant: 'error' });\n    }\n  }, [enqueueSnackbar, createEvent.isSuccess, createEvent.isError, onClose]);\n\n  return (\n    <Formik\n      initialValues={NewEventInitialFormValues}\n      onSubmit={(values) => {\n        createEvent.mutate({\n          startsAt: values.startsAt?.toISOString() as string,\n          venue: values.venue?.id as string,\n          sport: values.sport as Sport,\n          duration: values.duration,\n          numPlayers: values.numPlayers,\n          description: values.description,\n          price: values.price,\n        });\n      }}\n      validate={(values) => {\n        const errors: any = {};\n        if (!values.venue) {\n          errors.venue = 'Required';\n        }\n        if (!values.sport) {\n          errors.sport = 'Required';\n        }\n        if (values.numPlayers < 2 || values.numPlayers > 30) {\n          errors.numPlayers = 'Should be between 2 and 30';\n        }\n        if (values.price.amount < 0) {\n          errors.price = 'Should be positive or 0';\n        }\n        if (!values.description) {\n          errors.description = 'Required';\n        }\n        if (!values.startsAt) {\n          errors.startsAt = 'Required';\n        }\n        return errors;\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <VenueWithMapField\n                  name=\"venue\"\n                  value={values.venue}\n                  onChange={(value) => setFieldValue('venue', value)}\n                  onBlur={handleBlur}\n                  error={touched.venue && !!errors.venue}\n                  helperText={touched.venue && errors.venue}\n                />\n              </Grid>\n              <Grid item>\n                <Grid container direction=\"row\" spacing={2}>\n                  <Grid item xs={6}>\n                    <SportsAutocomplete\n                      name=\"sport\"\n                      value={values.sport}\n                      onChange={(value: any) => setFieldValue('sport', value)}\n                      onBlur={handleBlur}\n                      error={touched.sport && !!errors.sport}\n                      helperText={touched.sport && errors.sport}\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <PlayersSlider\n                      id=\"new-event-players-slider\"\n                      name=\"numPlayers\"\n                      value={values.numPlayers}\n                      onChange={(e, value) =>\n                        setFieldValue('numPlayers', value)\n                      }\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid container direction=\"row\" spacing={2}>\n                    <Grid item xs={6}>\n                      <DateTimePicker\n                        required\n                        name=\"startsAt\"\n                        value={values.startsAt}\n                        onChange={(startsAt) =>\n                          setFieldValue('startsAt', startsAt)\n                        }\n                        onBlur={handleBlur}\n                        disablePast\n                        error={touched.startsAt && !!errors.startsAt}\n                        helperText={touched.startsAt && errors.startsAt}\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <DurationSlider\n                        id=\"new-event-duration-slider\"\n                        name=\"duration\"\n                        value={values.duration}\n                        onChange={(e, value) =>\n                          setFieldValue('duration', value)\n                        }\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      name=\"description\"\n                      label=\"Description\"\n                      placeholder=\"Add indications or rules about the event.\"\n                      fullWidth\n                      multiline\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={touched.description && !!errors.description}\n                      helperText={touched.description && errors.description}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions\n            actions={[\n              {\n                key: 'create',\n                label: 'Create',\n                loading: createEvent.isLoading,\n                type: 'submit',\n              },\n            ]}\n          />\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewEventDialogContent;\n","import React from 'react';\nimport Dialog from '../Dialog';\nimport NewEventDialogContent from './NewEventDialogContent';\n\ninterface NewEventDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NewEventDialog: React.FC<NewEventDialogProps> = ({ open, onClose }) => (\n  <Dialog id=\"new-event-dialog\" title=\"New event\" open={open} onClose={onClose}>\n    <NewEventDialogContent onClose={onClose} />\n  </Dialog>\n);\n\nexport default React.memo(NewEventDialog);\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport Page from '../../components/Page';\nimport LocationWithMapField from '../../components/NewVenueDialog/LocationWithMapField';\nimport { RadiusSlider } from '../../components/Slider';\nimport SportsAutocomplete from '../../components/SportsAutocomplete';\nimport DatePicker from '../../components/DatePicker';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport useStyles from './Events.styles';\nimport { Location } from '../../types';\nimport { useCurrentLocation } from '../../hooks';\nimport NewEventDialog from '../../components/NewEventDialog';\n\nconst Events = () => {\n  const classes = useStyles();\n\n  const [location, setLocation] = useState<Location | null>(null);\n  const [radius, setRadius] = useState<number>(5000);\n  const [sports, setSports] = useState<string[]>([]);\n  const [date, setDate] = useState<Date | null>(new Date());\n  const [excludeFull, setNotFull] = useState<boolean>(false);\n  const currentLocation = useCurrentLocation();\n\n  const [newEventDialogOpen, setNewEventDialogOpen] = useState(false);\n  const handleNewEventDialogOpen = () => setNewEventDialogOpen(true);\n  const handleNewEventDialogClose = () => setNewEventDialogOpen(false);\n\n  const handleRadiusChange = (e: React.ChangeEvent<{}>, value: number) =>\n    setRadius(value);\n\n  const handleNotFullChange = (e: React.ChangeEvent<{}>, value: boolean) =>\n    setNotFull(value);\n\n  useEffect(() => {\n    if (currentLocation.location && !location) {\n      setLocation(currentLocation.location);\n    }\n  }, [currentLocation, location]);\n\n  return (\n    <>\n      <Page\n        title=\"Events\"\n        titleAction={{\n          label: 'New event',\n          icon: <AddIcon />,\n          onClick: handleNewEventDialogOpen,\n        }}\n      >\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Paper className={classes.filtersPaper}>\n              <Grid container direction=\"column\" spacing={2}>\n                <Grid item>\n                  <LocationWithMapField\n                    location={location}\n                    onChange={setLocation}\n                    disabled={currentLocation.isLoading}\n                    around={currentLocation.location?.geo.coordinates}\n                    circleRadius={radius}\n                    // markers={<VenueMarkers venues={venues} />}\n                  />\n                </Grid>\n                <Grid item>\n                  <RadiusSlider\n                    id=\"venue-search-radius\"\n                    value={radius}\n                    disabled={currentLocation.isLoading}\n                    onChange={handleRadiusChange}\n                  />\n                </Grid>\n                <Grid item>\n                  <SportsAutocomplete\n                    multiple\n                    value={sports}\n                    onChange={setSports}\n                    disabled={currentLocation.isLoading}\n                  />\n                </Grid>\n                <Grid item>\n                  <DatePicker\n                    value={date}\n                    onChange={setDate}\n                    disabled={currentLocation.isLoading}\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={excludeFull}\n                        onChange={handleNotFullChange}\n                        color=\"primary\"\n                        disabled={currentLocation.isLoading}\n                      />\n                    }\n                    label=\"Exclude full\"\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Skeleton width=\"100%\" height=\"100%\" variant=\"rect\" />\n          </Grid>\n        </Grid>\n      </Page>\n      <NewEventDialog\n        open={newEventDialogOpen}\n        onClose={handleNewEventDialogClose}\n      />\n    </>\n  );\n};\n\nexport default React.memo(Events);\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { DialogContent, DialogActions } from '../Dialog';\nimport LocationWithMapField from './LocationWithMapField';\nimport { useCreateVenue } from '../../hooks';\nimport { Location } from '../../types';\n\ninterface NewVenueFormValues {\n  name: string;\n  location: Location | null;\n}\nconst NewVenueInitialFormValues: NewVenueFormValues = {\n  name: '',\n  location: null,\n};\n\ninterface NewVenueDialogContentProps {\n  onClose: () => void;\n}\n\nconst NewVenueDialogContent: React.FC<NewVenueDialogContentProps> = ({\n  onClose,\n}) => {\n  const createVenue = useCreateVenue();\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (createVenue.isSuccess) {\n      onClose();\n      enqueueSnackbar('Venue created', { variant: 'success' });\n    }\n    if (createVenue.isError) {\n      enqueueSnackbar('Failed to create venue', { variant: 'error' });\n    }\n  }, [enqueueSnackbar, createVenue.isSuccess, createVenue.isError, onClose]);\n\n  return (\n    <Formik\n      initialValues={NewVenueInitialFormValues}\n      onSubmit={(values) => {\n        createVenue.mutate({\n          name: values.name,\n          location: values.location as Location,\n        });\n      }}\n      validate={(values) => {\n        const errors: any = {};\n        if (!values.name) {\n          errors.name = 'Required';\n        }\n        if (!values.location) {\n          errors.location = 'Required';\n        }\n        return errors;\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <TextField\n                  required\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  name=\"name\"\n                  value={values.name}\n                  fullWidth\n                  onChange={handleChange}\n                  error={touched.name && !!errors.name}\n                  helperText={touched.name && errors.name}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n              <Grid item>\n                <LocationWithMapField\n                  name=\"location\"\n                  location={values.location}\n                  error={touched.location && !!errors.location}\n                  helperText={touched.location && errors.location}\n                  onBlur={handleBlur}\n                  onChange={(newLocation) =>\n                    setFieldValue('location', newLocation)\n                  }\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions\n            actions={[\n              {\n                key: 'create',\n                label: 'Create',\n                loading: createVenue.isLoading,\n                type: 'submit',\n              },\n            ]}\n          />\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewVenueDialogContent;\n","import React from 'react';\nimport Dialog from '../Dialog';\nimport NewVenueDialogContent from './NewVenueDialogContent';\n\ninterface NewVenueDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NewVenueDialog: React.FC<NewVenueDialogProps> = ({ open, onClose }) => (\n  <Dialog id=\"new-venue-dialog\" title=\"New venue\" open={open} onClose={onClose}>\n    <NewVenueDialogContent onClose={onClose} />\n  </Dialog>\n);\n\nexport default React.memo(NewVenueDialog);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    display: 'flex',\n    alignItems: 'center',\n    textDecoration: 'none',\n    '&:focus, &:hover, &:visited, &:link, &:active': {\n      textDecoration: 'none',\n      color: 'inherit',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport { Venue } from '../../types';\nimport { Link } from 'react-router-dom';\nimport useStyles from './VenueListItem.styles';\n\ninterface VenueListItemProps {\n  venue: Venue;\n}\n\nconst VenueListItem: React.FC<VenueListItemProps> = ({ venue }) => {\n  const classes = useStyles();\n  return (\n    <ListItem button component=\"li\">\n      <Link className={classes.link} to={`/venues/${venue.id}`}>\n        <ListItemAvatar>\n          <Avatar>\n            <ImageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={venue.name}\n          secondary={`${venue.location.name} ${venue.location.description}`}\n        />\n      </Link>\n    </ListItem>\n  );\n};\n\nexport default React.memo(VenueListItem);\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport VenueListItem from './VenueListItem';\nimport { Venue } from '../../types';\n\ninterface VenueListProps {\n  venues: Venue[];\n}\n\nconst VenueList: React.FC<VenueListProps> = ({ venues }) => {\n  return (\n    <List>\n      {venues.map((venue) => (\n        <VenueListItem key={venue.id} venue={venue} />\n      ))}\n    </List>\n  );\n};\n\nexport default React.memo(VenueList);\n","import React from 'react';\nimport { Marker, Popup } from 'react-leaflet';\nimport { Link } from 'react-router-dom';\nimport { Marker as PinIcon } from '../../components/Map/icons';\nimport { Venue } from '../../types';\nimport { toLeaflet } from '../../utils/leaflet';\n\ninterface VenueMarkersProps {\n  venues?: Venue[];\n}\n\nconst VenueMarkers: React.FC<VenueMarkersProps> = ({ venues = [] }) => {\n  return (\n    <>\n      {venues.map((venue) => (\n        <Marker\n          key={venue.id}\n          position={toLeaflet(venue.location.geo.coordinates)}\n          icon={PinIcon}\n        >\n          <Popup>\n            <Link to={`/venues/${venue.id}`}>{venue.name}</Link>\n          </Popup>\n        </Marker>\n      ))}\n    </>\n  );\n};\n\nexport default React.memo(VenueMarkers);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  filtersPaper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Page from '../../components/Page';\nimport LocationWithMapField from '../../components/NewVenueDialog/LocationWithMapField';\nimport { RadiusSlider } from '../../components/Slider';\nimport NewVenueDialog from '../../components/NewVenueDialog';\nimport { Location } from '../../types';\nimport { useCurrentLocation, useVenues } from '../../hooks';\nimport VenueList from './VenueList';\nimport VenueMarkers from './VenueMarkers';\nimport useStyles from './Venues.styles';\n\nconst Venues = () => {\n  const [location, setLocation] = useState<Location | null>(null);\n  const [radius, setRadius] = useState<number>(5000);\n  const { venues } = useVenues(location, radius);\n  const currentLocation = useCurrentLocation();\n  const [newVenueDialogOpen, setNewVenueDialogOpen] = useState(false);\n  const handleNewVenueDialogClose = () => setNewVenueDialogOpen(false);\n  const handleNewVenueDialogOpen = () => setNewVenueDialogOpen(true);\n\n  const handleRadiusChange = (e: React.ChangeEvent<{}>, value: number) =>\n    setRadius(value);\n\n  useEffect(() => {\n    if (currentLocation.location && !location) {\n      setLocation(currentLocation.location);\n    }\n  }, [currentLocation, location]);\n\n  const classes = useStyles();\n\n  return (\n    <Page\n      title=\"Venues\"\n      titleAction={{\n        label: 'New venue',\n        icon: <AddIcon />,\n        onClick: handleNewVenueDialogOpen,\n      }}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Paper className={classes.filtersPaper}>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <LocationWithMapField\n                  location={location}\n                  onChange={setLocation}\n                  disabled={currentLocation.isLoading}\n                  around={currentLocation.location?.geo.coordinates}\n                  circleRadius={radius}\n                  markers={<VenueMarkers venues={venues} />}\n                />\n              </Grid>\n              <Grid item>\n                <RadiusSlider\n                  id=\"venue-search-radius\"\n                  value={radius}\n                  disabled={currentLocation.isLoading}\n                  onChange={handleRadiusChange}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {!venues ? (\n            <Skeleton width=\"100%\" height=\"100%\" variant=\"rect\" />\n          ) : (\n            <Paper>{venues && <VenueList venues={venues} />}</Paper>\n          )}\n        </Grid>\n        <NewVenueDialog\n          open={newVenueDialogOpen}\n          onClose={handleNewVenueDialogClose}\n        />\n      </Grid>\n    </Page>\n  );\n};\n\nexport default React.memo(Venues);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    width: '100%',\n  },\n  address: {\n    flex: 1,\n  },\n}));\n\nexport default useStyles;\n","import '../../App.css';\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { isIOS } from 'react-device-detect';\nimport { Venue } from '../../types';\nimport Map from '../Map';\nimport useStyles from './VenueBasicInfoPanel.styles';\ninterface VenueBasicInfoPanelProps {\n  venue?: Venue;\n}\n\nconst getGoogleMapsUrl = (venue?: Venue) => {\n  if (!venue) {\n    return '';\n  }\n\n  const [lon, lat] = venue.location.geo.coordinates;\n  const protocol = isIOS ? `maps` : `https`;\n  return `${protocol}://maps.google.com/maps?daddr=${lat},${lon}&amp;ll=`;\n};\n\nconst VenueBasicInfoPanel: React.FC<VenueBasicInfoPanelProps> = ({ venue }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea\n        component={Link}\n        href={getGoogleMapsUrl(venue)}\n        rel=\"nofollow noopener\"\n        target=\"_blank\"\n        color=\"inherit\"\n        underline=\"none\"\n        disabled={!venue}\n      >\n        <CardContent>\n          <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\n            <Grid item>\n              <Typography color=\"textSecondary\">\n                <LocationOnIcon />\n              </Typography>\n            </Grid>\n            <Grid item className={classes.address}>\n              {venue ? (\n                <Typography color=\"textSecondary\">\n                  {venue.location.description || venue.location.name}\n                </Typography>\n              ) : (\n                <Skeleton variant=\"text\" />\n              )}\n            </Grid>\n          </Grid>\n        </CardContent>\n      </CardActionArea>\n      <CardMedia>\n        <Map location={venue?.location || null} />\n      </CardMedia>\n    </Card>\n  );\n};\n\nexport default React.memo(VenueBasicInfoPanel);\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport Page from '../../components/Page';\nimport VenueBasicInfoPanel from '../../components/VenueBasicInfoPanel';\nimport { useVenue } from '../../hooks';\n\ninterface VenueRouteParams {\n  venueId: string;\n}\n\nconst Venue = () => {\n  const { venueId } = useParams<VenueRouteParams>();\n  const { venue } = useVenue(venueId);\n\n  return (\n    <Page title={venue?.name || ''}>\n      <VenueBasicInfoPanel venue={venue} />\n    </Page>\n  );\n};\n\nexport default React.memo(Venue);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  visuallyHidden: {\n    display: 'none',\n  },\n}));\n\nexport default useStyles;\n","import React, { useRef } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '../../../components/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useStyles from './AvatarUploader.styles';\nimport { useUser, useChangeAvatar } from '../../../hooks';\nimport { User } from '../../../types';\n\nconst AvatarUploader = () => {\n  const classes = useStyles();\n  const user = useUser().user as User;\n  const { mutate: changeAvatar, isLoading: changingAvatar } = useChangeAvatar();\n  const inputEl = useRef<HTMLInputElement>(null);\n  const handleAvatarClicked = () => {\n    const current = inputEl?.current;\n    if (current) {\n      current.click();\n    }\n  };\n  const handleSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files as FileList;\n    changeAvatar(files[0]);\n  };\n\n  return (\n    <>\n      <Tooltip\n        title=\"Change avatar\"\n        aria-label=\"change avatar\"\n        placement=\"right\"\n      >\n        <IconButton onClick={handleAvatarClicked} disabled={changingAvatar}>\n          <Avatar\n            firstName={user.firstName}\n            lastName={user.lastName}\n            avatar={user.avatar}\n            size=\"large\"\n            variant=\"circular\"\n            loading={changingAvatar}\n          />\n        </IconButton>\n      </Tooltip>\n      <input\n        ref={inputEl}\n        className={classes.visuallyHidden}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleSelectFile}\n      />\n    </>\n  );\n};\n\nexport default React.memo(AvatarUploader);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  avatarContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AvatarUploader from './AvatarUploader';\nimport useStyles from './Profile.styles';\nimport { useUser } from '../../../hooks';\nimport { User } from '../../../types';\n\nconst Profile = () => {\n  const classes = useStyles();\n  const user = useUser().user as User;\n\n  const dataItems = [\n    {\n      key: 'name',\n      Icon: PersonIcon,\n      text: `${user?.firstName} ${user?.lastName}`,\n    },\n    {\n      key: 'email',\n      Icon: EmailIcon,\n      text: user.email,\n    },\n  ];\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      spacing={4}\n      justify=\"center\"\n      alignContent=\"center\"\n    >\n      <Grid item>\n        <div className={classes.avatarContainer}>\n          <AvatarUploader />\n        </div>\n      </Grid>\n      <Grid item>\n        <Grid\n          container\n          direction=\"column\"\n          spacing={2}\n          justify=\"center\"\n          alignContent=\"center\"\n        >\n          {dataItems.map((item) => (\n            <Grid key={item.key} item>\n              <Grid container direction=\"row\" spacing={2}>\n                <Grid item>\n                  <item.Icon color=\"primary\" />\n                </Grid>\n                <Grid item>\n                  <Typography>{item.text}</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(Profile);\n","const NotificationSettings = () => <div>NotificationSettings</div>;\n\nexport default NotificationSettings;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  tabPanel: {\n    padding: theme.spacing(3),\n  },\n  tabLabelContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  tabIcon: {\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {\n  Link,\n  Redirect,\n  useHistory,\n  useLocation,\n  useRouteMatch,\n} from 'react-router-dom';\nimport Page from '../../components/Page';\nimport Profile from './Profile';\nimport NotificationSettings from './NotificationSettings';\nimport useStyles from './Settings.styles';\n\nconst tabAllyProps = (key: string) => ({\n  id: `settings-tab-${key}`,\n  'aria-controls': `settings-tabpanel-${key}`,\n});\n\nconst tabPanelAllyProps = (key: string) => ({\n  role: 'tabpanel',\n  id: `settings-tabpanel-${key}`,\n  'aria-labelledby': `settings-tab-${key}`,\n});\n\ninterface SettingsTab {\n  value: string;\n  label: string;\n  Icon: React.ComponentType;\n  Component: React.ComponentType;\n  disabled?: boolean;\n}\n\nconst AllTabs: SettingsTab[] = [\n  {\n    value: 'profile',\n    label: 'Profile',\n    Icon: PersonIcon,\n    Component: Profile,\n  },\n  {\n    value: 'notifications',\n    label: 'Notifications',\n    Icon: NotificationsIcon,\n    Component: NotificationSettings,\n    // disabled: true,\n  },\n];\n\nconst lastSegment = (pathname: string) => {\n  const parts = pathname.split('/');\n  return parts[parts.length - 1];\n};\n\nconst Settings = () => {\n  const history = useHistory();\n  const match = useRouteMatch();\n  const location = useLocation();\n  const classes = useStyles();\n  const currentTab = AllTabs.find(\n    (tab) => tab.value === lastSegment(location.pathname)\n  ) as SettingsTab;\n\n  const changeTab = (value: string) => {\n    if (value !== currentTab.value) {\n      history.push(`${match.url}/${value}`);\n    }\n  };\n\n  const handleChangeTab = (event: React.ChangeEvent<{}>, value: string) => {\n    changeTab(value);\n  };\n\n  const isRootPath = match.url === location.pathname;\n  if (isRootPath) {\n    return <Redirect to={`${match.url}/profile`} />;\n  }\n\n  return (\n    <Page title=\"Settings\">\n      <>\n        <Tabs\n          value={currentTab.value}\n          onChange={handleChangeTab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          {AllTabs.map((tab) => (\n            <Tab\n              key={tab.value}\n              value={tab.value}\n              component={Link}\n              to={`${match.url}/${tab.value}`}\n              label={\n                <div className={classes.tabLabelContainer}>\n                  <SvgIcon className={classes.tabIcon}>\n                    <tab.Icon />\n                  </SvgIcon>\n                  {tab.label}\n                </div>\n              }\n              disabled={tab.disabled}\n              {...tabAllyProps(tab.value)}\n            />\n          ))}\n        </Tabs>\n        <div\n          className={classes.tabPanel}\n          {...tabPanelAllyProps(currentTab.value)}\n        >\n          <currentTab.Component />\n        </div>\n      </>\n    </Page>\n  );\n};\n\nexport default React.memo(Settings);\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport Home from '../Home';\nimport Events from '../Events';\nimport Venues from '../Venues';\nimport Venue from '../Venue';\nimport Settings from '../Settings';\n\nconst Dashboard = () => (\n  <Switch>\n    <Route path=\"/\" exact render={() => <Redirect to=\"/home\" />} />\n    <Route path=\"/home\" component={Home} />\n    <Route path=\"/events\" component={Events} />\n    <Route path=\"/venues\" exact component={Venues} />\n    <Route path=\"/venues/:venueId\" component={Venue} />\n    <Route path=\"/settings\" component={Settings} />\n  </Switch>\n);\n\nexport default React.memo(Dashboard);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst GoogleIcon: React.FC = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\" />\n  </SvgIcon>\n);\n\nexport default GoogleIcon;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  baseRoot: {\n    color: 'white',\n    justifyContent: 'flex-start',\n  },\n  facebookRoot: {\n    backgroundColor: '#4267B2',\n    '&:hover': {\n      backgroundColor: '#2e487c',\n    },\n  },\n  googleRoot: {\n    backgroundColor: '#DB4437',\n    '&:hover': {\n      backgroundColor: '#a2271d',\n    },\n  },\n  twitterRoot: {\n    backgroundColor: '#1DA1F2',\n    '&:hover': {\n      backgroundColor: '#0a73b3',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport GoogleIcon from '../GoogleIcon';\nimport useStyles from './LoginButtons.styles';\n\ninterface LoginButtonProps {\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\n}\n\nexport const FacebookLoginButton: React.FC<LoginButtonProps> = React.memo(\n  ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n      <Button\n        classes={{\n          root: clsx(classes.baseRoot, classes.facebookRoot),\n        }}\n        startIcon={<FacebookIcon />}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onClick}\n        fullWidth\n      >\n        Join with Facebook\n      </Button>\n    );\n  }\n);\n\nexport const GoogleLoginButton: React.FC<LoginButtonProps> = React.memo(\n  ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n      <Button\n        classes={{\n          root: clsx(classes.baseRoot, classes.googleRoot),\n        }}\n        startIcon={<GoogleIcon />}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onClick}\n        fullWidth\n      >\n        Join with Google\n      </Button>\n    );\n  }\n);\n\nexport const TwitterLoginButton: React.FC<LoginButtonProps> = React.memo(\n  ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n      <Button\n        classes={{\n          root: clsx(classes.baseRoot, classes.twitterRoot),\n        }}\n        startIcon={<TwitterIcon />}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onClick}\n        fullWidth\n      >\n        Join with Twitter\n      </Button>\n    );\n  }\n);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minHeight: '100vh',\n  },\n  buttonsContainer: {\n    maxWidth: '300px',\n  },\n  buttonContainer: {\n    width: '100%',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  FacebookLoginButton,\n  GoogleLoginButton,\n  TwitterLoginButton,\n} from '../../components/LoginButtons';\nimport useStyles from './Login.styles';\nimport { useLoginViaSocialMedia } from '../../hooks';\nimport { AuthProvider } from '../../types';\n\nconst LoginButtons = [\n  {\n    authProvider: 'google',\n    Button: GoogleLoginButton,\n  },\n  {\n    authProvider: 'facebook',\n    Button: FacebookLoginButton,\n  },\n  {\n    authProvider: 'twitter',\n    Button: TwitterLoginButton,\n  },\n];\n\nfunction Login() {\n  const loginViaSocialMedia = useLoginViaSocialMedia();\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      direction=\"column\"\n      alignContent=\"center\"\n      alignItems=\"center\"\n      justify=\"center\"\n    >\n      <Grid item>\n        <Grid\n          container\n          direction=\"column\"\n          alignContent=\"center\"\n          alignItems=\"center\"\n          justify=\"center\"\n          spacing={8}\n        >\n          <Grid item>\n            <Typography variant=\"h2\">Team Findr</Typography>\n          </Grid>\n          <Grid\n            className={classes.buttonsContainer}\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={1}\n          >\n            {LoginButtons.map((loginButton) => (\n              <Grid\n                key={loginButton.authProvider}\n                item\n                className={classes.buttonContainer}\n              >\n                <loginButton.Button\n                  onClick={() =>\n                    loginViaSocialMedia(\n                      loginButton.authProvider as AuthProvider\n                    )\n                  }\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default React.memo(Login);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: '100vh',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useStyles from './Authenticating.styles';\n\nconst Authenticating = () => {\n  const classes = useStyles();\n  return (\n    <Grid\n      className={classes.root}\n      container\n      alignContent=\"center\"\n      justify=\"center\"\n    >\n      <CircularProgress />\n    </Grid>\n  );\n};\n\nexport default React.memo(Authenticating);\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { useUser } from '../hooks';\n\nconst WithAuthentication = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> => (props: P) => {\n  const { user } = useUser();\n\n  if (!user) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return <Component {...props} />;\n};\n\nexport default WithAuthentication;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { useUser } from '../hooks';\n\nconst WithNoAuthentication = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> => (props: P) => {\n  const { user } = useUser();\n\n  if (user) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return <Component {...props} />;\n};\n\nexport default WithNoAuthentication;\n","import './App.css';\nimport React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport Login from './pages/Login';\nimport Authenticating from './pages/Authenticating';\nimport withAuthentication from './components/WithAuthentication';\nimport withNoAuthentication from './components/WithNoAuthentication';\nimport { useUser, usePrefetch } from './hooks';\n\nfunction App() {\n  usePrefetch();\n  const { isLoading } = useUser();\n\n  if (isLoading) {\n    return <Authenticating />;\n  }\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\" component={withNoAuthentication(Login)} />\n        <Route path=\"/\" component={withAuthentication(Dashboard)} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default React.memo(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport { lightGreen } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: lightGreen,\n  },\n  typography: {\n    button: {\n      textTransform: 'none',\n    },\n  },\n});\n\nconst TeamFindrThemeProvider: React.FC = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default TeamFindrThemeProvider;\n","import 'typeface-roboto';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeProvider from './providers/ThemeProvider';\nimport ServicesProvider from './providers/ServicesProvider';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <CssBaseline />\n      <ThemeProvider>\n        <ServicesProvider>\n          <SnackbarProvider>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <App />\n              <ReactQueryDevtools initialIsOpen={false} />\n            </MuiPickersUtilsProvider>\n          </SnackbarProvider>\n        </ServicesProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}