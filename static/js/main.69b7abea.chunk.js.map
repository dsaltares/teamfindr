{"version":3,"sources":["components/Avatar/Avatar.styles.ts","components/Avatar/Avatar.tsx","components/AvatarMenu/AvatarMenu.styles.ts","services/images.service.ts","services/location.service.ts","endpoints.ts","services/user.service.ts","utils/encodeQueryData.ts","services/index.ts","services/venues.service.ts","providers/ServicesProvider.tsx","hooks/location/useCurrentLocation.ts","hooks/location/useLocationAutocomplete.ts","hooks/location/useLocationFromCoordinates.ts","hooks/location/useLocationFromMapClick.ts","hooks/user/useUser.ts","hooks/user/useLogout.ts","hooks/user/useLoginViaSocialMedia.ts","hooks/user/useChangeAvatar.ts","hooks/utils/usePrefetch.ts","hooks/venues/useCreateVenue.ts","hooks/utils/useDebounce.ts","hooks/venues/useVenues.ts","hooks/venues/useVenue.ts","components/AvatarMenu/AvatarMenu.tsx","components/Navigation/DesktopNavigation/DesktopNavigation.styles.ts","components/Navigation/navigationItems.ts","components/Navigation/DesktopNavigation/DesktopNavigation.tsx","components/Navigation/MobileNavigation/MobileNavigation.styles.ts","components/Navigation/MobileNavigation/MobileNavigation.tsx","components/Page/PageTitle.styles.ts","components/Page/PageTitle.tsx","components/Page/Page.styles.ts","components/Page/Page.tsx","pages/Home/Home.tsx","components/Map/icons/index.ts","utils/leaflet.ts","components/Map/Map.tsx","pages/Events/Events.styles.ts","pages/Events/Events.tsx","components/LocationAutocomplete/LocationAutocomplete.tsx","components/NewVenueDialog/LocationWithMapField.tsx","components/RadiusSlider/RadiusSlider.styles.ts","components/RadiusSlider/RadiusSlider.tsx","components/Dialog/Dialog.styles.ts","components/Dialog/Dialog.tsx","components/Dialog/DialogActions.tsx","components/Dialog/DialogContent.tsx","components/NewVenueDialog/NewVenueDialogContent.tsx","components/NewVenueDialog/NewVenueDialog.tsx","pages/Venues/VenueListItem.styles.ts","pages/Venues/VenueListItem.tsx","pages/Venues/VenueList.tsx","pages/Venues/VenueMarkers.tsx","pages/Venues/Venues.styles.ts","pages/Venues/Venues.tsx","components/VenueBasicInfoPanel/VenueBasicInfoPanel.styles.ts","components/VenueBasicInfoPanel/VenueBasicInfoPanel.tsx","pages/Venue/Venue.tsx","pages/Settings/Profile/AvatarUploader.styles.ts","pages/Settings/Profile/AvatarUploader.tsx","pages/Settings/Profile/Profile.styles.ts","pages/Settings/Profile/Profile.tsx","pages/Settings/NotificationSettings/NotificationSettings.tsx","pages/Settings/Settings.styles.ts","pages/Settings/Settings.tsx","pages/Dashboard/Dashboard.tsx","components/GoogleIcon.tsx","components/LoginButtons/LoginButtons.styles.ts","components/LoginButtons/LoginButtons.tsx","pages/Login/Login.styles.ts","pages/Login/Login.tsx","pages/Authenticating/Authenticating.styles.ts","pages/Authenticating/Authenticating.tsx","components/WithAuthentication.tsx","components/WithNoAuthentication.tsx","App.tsx","reportWebVitals.ts","providers/ThemeProvider.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","small","width","spacing","height","medium","large","Avatar","firstName","lastName","avatar","size","variant","loading","classes","fullName","Skeleton","className","animation","alt","src","React","memo","fullHeight","itemIcon","minWidth","paddingRight","imagesService","uploadImage","file","a","fd","FormData","append","axios","post","url","data","secure_url","PHOTON_API","featureToLocation","feature","coordinates","geometry","properties","name","country","city","postcode","number","housenumber","street","baseProperties","geo","type","specificName","descriptionProperties","description","map","propertyName","filter","value","join","getLocationFromCoordinates","longitude","latitude","get","features","filterByType","restrictToType","location","locationService","getLocationFromGeolocation","Promise","resolve","reject","navigator","geolocation","code","GeolocationPositionError","POSITION_UNAVAILABLE","message","getCurrentPosition","newPosition","coords","getLocationFromIp","getLocationSuggestions","query","around","aroundQuery","encodeURIComponent","API_URL","userService","verify","withCredentials","headers","Accept","user","response","status","openIdpAuthPage","provider","window","open","logout","patchUser","id","patch","updatedUser","encodeQueryData","Object","keys","reduce","acc","key","services","images","venues","createVenue","venue","getVenues","radius","lon","lat","getVenue","ServiceContext","createContext","useServices","useContext","ServicesProvider","children","injectedServices","Provider","STALE_TIME_MS","useCurrentLocation","geoLocation","useQuery","staleTime","refetchInterval","isLoading","error","useCurrentGeoLocation","ipLocation","useCurrentIpLocation","ipLocationFinished","useLocationAutocomplete","debouncedQuery","useDebounce","useState","suggestions","setSuggestions","setLoading","useEffect","newSuggestions","performSearch","debounceOpts","leading","trailing","useLocationFromCoordinates","debouncedCoordinates","setLocation","newLocation","lookupCoordinates","useLocationFromMapClick","setCoordinates","useMapEvents","click","e","latlng","lng","useUser","cacheTime","useLogout","useLoginViaSocialMedia","useChangeAvatar","queryClient","useQueryClient","changeUserAvatar","useMutation","onSuccess","setQueryData","usePrefetch","fetchQuery","useCreateVenue","invalidateQueries","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useVenues","debouncedRadius","enabled","forEach","useVenue","AvatarMenu","anchorEl","setAnchorEl","menuItems","label","onClick","Icon","ExitToAppIcon","Button","event","currentTarget","Menu","keepMounted","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","item","MenuItem","ListItemIcon","ListItemText","topBar","minHeight","titleContainer","list","padding","display","flexDirection","icon","filler","NavigationItems","HomeIcon","SportsSoccerIcon","LocationOnIcon","SettingsIcon","DesktopNavigation","selectedValue","useLocation","pathname","split","AppBar","position","Toolbar","Grid","container","justify","alignItems","Typography","List","component","ListItem","selected","button","Link","to","disableGutters","navigation","bottom","top","zIndex","drawer","background","MobileNavigation","history","useHistory","BottomNavigation","onChange","_event","push","BottomNavigationAction","flex","justifyContent","PageTitle","title","action","startIcon","color","root","centered","paddingTop","paddingBottom","content","maxWidth","paddingLeft","Page","titleAction","Hidden","smDown","disableWidth","autoHide","style","document","documentElement","clientHeight","mdUp","Home","Marker","L","iconUrl","iconSize","iconAnchor","popupAnchor","Pin","toLeaflet","MapController","useMap","locationFromClick","setView","getZoom","oldLocationFromClick","setOldLocationFromClick","Map","circleRadius","markers","leafCoordinates","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","PinIcon","Circle","center","pathOptions","fillColor","AccordionSummary","withStyles","margin","expanded","MuiAccordionSummary","accordionDetails","Events","currentLocation","Accordion","defaultExpanded","expandIcon","AccordionDetails","suggestionsForValue","find","b","coordA","coordB","geTextFieldLabel","LocationAutocomplete","disabled","required","helperText","onBlur","inputValue","setInputValue","Autocomplete","fullWidth","getOptionLabel","option","options","autoComplete","includeInputInList","filterSelectedOptions","disableClearable","noOptionsText","newValue","onInputChange","newInputValue","renderInput","params","TextField","renderOption","xs","fontWeight","LocationWithMapField","disableChangePositionViaMap","current","direction","sliderContainer","valuetext","Math","round","marks","RadiusSlider","handleChange","useCallback","gutterBottom","Slider","getAriaValueText","aria-labelledby","step","min","max","dialogPaper","closeButton","right","palette","grey","Dialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","titleId","paper","undefined","disableBackdropClick","disableEscapeKeyDown","scroll","DialogTitle","disableTypography","IconButton","aria-label","DialogActions","actions","CircularProgress","DialogContent","dividers","NewVenueInitialFormValues","NewVenueDialogContent","enqueueSnackbar","useSnackbar","isSuccess","isError","initialValues","onSubmit","values","mutate","validate","errors","touched","handleBlur","handleSubmit","setFieldValue","NewVenueDialog","link","textDecoration","VenueListItem","ListItemAvatar","primary","secondary","VenueList","VenueMarkers","Popup","filtersPaper","Venues","setRadius","newVenueDialogOpen","setNewVenueDialogOpen","md","Paper","card","address","getGoogleMapsUrl","VenueBasicInfoPanel","Card","CardActionArea","href","rel","target","underline","CardContent","CardMedia","Venue","venueId","useParams","visuallyHidden","AvatarUploader","changeAvatar","changingAvatar","inputEl","useRef","Tooltip","placement","ref","accept","files","avatarContainer","Profile","dataItems","PersonIcon","text","EmailIcon","email","alignContent","NotificationSettings","tabPanel","tabLabelContainer","tabIcon","AllTabs","Component","NotificationsIcon","Settings","match","useRouteMatch","currentTab","tab","parts","length","lastSegment","Tabs","changeTab","indicatorColor","textColor","Tab","SvgIcon","role","Dashboard","path","exact","render","GoogleIcon","props","d","baseRoot","facebookRoot","backgroundColor","googleRoot","twitterRoot","FacebookLoginButton","clsx","GoogleLoginButton","TwitterLoginButton","buttonsContainer","buttonContainer","LoginButtons","authProvider","Login","loginViaSocialMedia","loginButton","Authenticating","WithAuthentication","WithNoAuthentication","App","withNoAuthentication","withAuthentication","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","lightGreen","typography","textTransform","TeamFindrThemeProvider","ThemeProvider","QueryClient","ReactDOM","StrictMode","QueryClientProvider","client","CssBaseline","initialIsOpen","getElementById"],"mappings":"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","file":"static/js/main.69b7abea.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  medium: {\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n  },\n  large: {\n    width: theme.spacing(16),\n    height: theme.spacing(16),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport AvatarBase from '@material-ui/core/Avatar';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport useStyles from './Avatar.styles';\nimport { User } from '../../types';\n\nexport type Size = 'small' | 'medium' | 'large';\ntype Variant = 'circle' | 'rounded' | 'circular' | 'square';\n\ninterface BaseProps {\n  size?: Size;\n  variant?: Variant;\n  loading?: boolean;\n}\n\ntype AvatarProps = Pick<User, 'firstName' | 'lastName' | 'avatar'> & BaseProps;\n\nconst Avatar: React.FC<AvatarProps> = ({\n  firstName,\n  lastName,\n  avatar,\n  size = 'medium',\n  variant,\n  loading = false,\n}) => {\n  const classes = useStyles();\n  const fullName = `${firstName} ${lastName}`;\n  return loading ? (\n    <Skeleton className={classes[size]} variant=\"circle\" animation=\"wave\" />\n  ) : (\n    <AvatarBase\n      variant={variant}\n      className={classes[size]}\n      alt={fullName}\n      src={avatar}\n    />\n  );\n};\n\nexport default React.memo(Avatar);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  fullHeight: {\n    height: '100%',\n  },\n  itemIcon: {\n    minWidth: 0,\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import axios from 'axios';\n\nconst imagesService = {\n  uploadImage: async (file: File): Promise<string> => {\n    const endpoint = 'https://api.cloudinary.com/v1_1/teamfindr/image/upload';\n    const preset = 'teamfindr';\n    const fd = new FormData();\n    fd.append('file', file);\n    fd.append('upload_preset', preset);\n    const {\n      data: { secure_url: url },\n    } = await axios.post(endpoint, fd);\n    return url;\n  },\n};\n\nexport default imagesService;\n","import axios from 'axios';\nimport {\n  Coordinates,\n  Locations,\n  Location,\n  LocationType,\n  GeoType,\n} from '../types';\n\nconst PHOTON_API = 'https://photon.komoot.io';\nconst GEOLOCATION_API =\n  'https://geolocation-db.com/json/85249190-4601-11eb-9067-21b51bc8dee3';\n\ntype DescriptionProperty =\n  | 'number'\n  | 'street'\n  | 'postcode'\n  | 'city'\n  | 'country';\ntype DescriptionProperties = DescriptionProperty[];\n\nconst featureToLocation = (feature: any): Location => {\n  const {\n    geometry: { coordinates },\n    properties: {\n      name,\n      country,\n      city,\n      postcode,\n      housenumber: number,\n      street,\n      type,\n    },\n  } = feature;\n  const baseProperties = {\n    geo: {\n      type: 'Point' as GeoType,\n      coordinates: coordinates,\n    },\n    country,\n    city,\n    postcode,\n    number,\n    street,\n    type,\n  };\n\n  let specificName = '';\n  let descriptionProperties: DescriptionProperties = [];\n\n  switch (feature.properties.type) {\n    case 'house':\n      if (name) {\n        descriptionProperties = [\n          'number',\n          'street',\n          'postcode',\n          'city',\n          'country',\n        ];\n      } else {\n        specificName = `${number ? `${number} ` : ''}${street}`;\n        descriptionProperties = ['postcode', 'city', 'country'];\n      }\n      break;\n    case 'street':\n      descriptionProperties = ['postcode', 'city', 'country'];\n      break;\n    case 'district':\n      descriptionProperties = ['city', 'country'];\n      break;\n    case 'city':\n    case 'county':\n      descriptionProperties = ['country'];\n      break;\n  }\n\n  return {\n    ...baseProperties,\n    name: name || specificName,\n    description: descriptionProperties\n      .map(\n        (propertyName: DescriptionProperty) =>\n          baseProperties[propertyName] as string\n      )\n      .filter((value) => !!value)\n      .join(', '),\n  };\n};\n\nconst getLocationFromCoordinates = async (\n  coordinates: Coordinates\n): Promise<Location> => {\n  const [longitude, latitude] = coordinates;\n  const { data } = await axios.get(\n    `${PHOTON_API}/reverse?lat=${latitude}&lon=${longitude}`\n  );\n  return {\n    ...featureToLocation(data.features[0]),\n    geo: {\n      type: 'Point',\n      coordinates,\n    },\n  };\n};\n\nconst getCoordinatesFromGeolocation = (): Promise<Coordinates> =>\n  new Promise((resolve, reject) => {\n    const geo = navigator.geolocation;\n    if (!geo) {\n      reject({\n        code: GeolocationPositionError.POSITION_UNAVAILABLE,\n        message: 'Geolocation not available',\n      });\n    }\n\n    const handleSuccess: PositionCallback = (newPosition) =>\n      resolve([newPosition.coords.longitude, newPosition.coords.latitude]);\n\n    geo.getCurrentPosition(handleSuccess, reject);\n  });\n\nconst getLocationFromGeolocation = async (): Promise<Location> => {\n  const coordinates = await getCoordinatesFromGeolocation();\n  return getLocationFromCoordinates(coordinates);\n};\n\nconst getLocationFromIp = async (): Promise<Location> => {\n  const {\n    data: { latitude, longitude },\n  } = await axios.get(GEOLOCATION_API);\n  return getLocationFromCoordinates([longitude, latitude]);\n};\n\nconst filterByType = (restrictToType?: LocationType) => (\n  location: Location\n) => {\n  if (!restrictToType) {\n    return true;\n  }\n\n  return location.type === restrictToType;\n};\n\nconst getLocationSuggestions = async (\n  query: string,\n  around?: Coordinates,\n  restrictToType?: LocationType\n): Promise<Locations> => {\n  if (!query) {\n    return [];\n  }\n\n  const aroundQuery = around ? `&lon=${around[0]}&lat=${around[1]}` : '';\n  const url = `${PHOTON_API}/api/?q=${encodeURIComponent(query)}${aroundQuery}`;\n\n  try {\n    const {\n      data: { features },\n    } = await axios.get(url);\n\n    return features.map(featureToLocation).filter(filterByType(restrictToType));\n  } catch (error) {\n    return [];\n  }\n};\n\nconst locationService = {\n  getLocationFromGeolocation,\n  getLocationFromIp,\n  getLocationSuggestions,\n  getLocationFromCoordinates,\n};\n\nexport default locationService;\n","export const API_URL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:5000'\n    : 'https://api.teamfindr.saltares.com';\n","import axios from 'axios';\nimport { User, AuthProvider } from '../types';\nimport { API_URL } from '../endpoints';\n\nconst userService = {\n  verify: async (): Promise<User | null> => {\n    try {\n      const {\n        data: { user },\n      } = await axios.get(`${API_URL}/auth/verify`, {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      });\n      return user;\n    } catch (error) {\n      if (error?.response?.status === 401) {\n        return null;\n      }\n      throw error;\n    }\n  },\n  openIdpAuthPage: (provider: AuthProvider) => {\n    window.open(`${API_URL}/auth/${provider}`, '_self');\n  },\n  logout: () => {\n    window.open(`${API_URL}/auth/logout`, '_self');\n  },\n  patchUser: async (id: string, user: Partial<User>): Promise<User> => {\n    const {\n      data: { user: updatedUser },\n    } = await axios.patch(\n      `${API_URL}/users/${id}`,\n      {\n        user,\n      },\n      {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      }\n    );\n    return updatedUser;\n  },\n};\n\nexport default userService;\n","const encodeQueryData = (data: any) => {\n  const queryParts: string[] = Object.keys(data).reduce(\n    (acc: string[], key: string): string[] => {\n      const value = data[key];\n      if (!key || !value) {\n        return acc;\n      }\n      return [\n        ...acc,\n        `${encodeURIComponent(key)}=${encodeURIComponent(value)}`,\n      ];\n    },\n    []\n  );\n  return queryParts.join('&');\n};\n\nexport default encodeQueryData;\n","import images from './images.service';\nimport location from './location.service';\nimport user from './user.service';\nimport venues from './venues.service';\n\nconst services = {\n  images,\n  location,\n  user,\n  venues,\n};\n\nexport default services;\n","import axios from 'axios';\nimport { API_URL } from '../endpoints';\nimport { Location, Venue } from '../types';\nimport encodeQueryData from '../utils/encodeQueryData';\n\nexport interface CreateVenueParams {\n  name: string;\n  location: Location;\n}\n\nexport interface GetVenuesParams {\n  location?: Location | null;\n  radius?: number;\n}\n\nconst venuesService = {\n  createVenue: async ({\n    name,\n    location,\n  }: CreateVenueParams): Promise<Venue> => {\n    const {\n      data: { venue },\n    } = await axios.post(\n      `${API_URL}/venues`,\n      { venue: { name, location } },\n      {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      }\n    );\n    return venue;\n  },\n  getVenues: async ({\n    location,\n    radius,\n  }: GetVenuesParams): Promise<Venue[]> => {\n    const coords = location?.geo.coordinates || [];\n    const query = encodeQueryData({\n      lon: coords[0],\n      lat: coords[1],\n      radius,\n    });\n    const {\n      data: { venues },\n    } = await axios.get(`${API_URL}/venues?${query}`, {\n      withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      },\n    });\n    return venues;\n  },\n  getVenue: async (id: string): Promise<Venue> => {\n    const {\n      data: { venue },\n    } = await axios.get(`${API_URL}/venues/${id}`, {\n      withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      },\n    });\n    return venue;\n  },\n};\n\nexport default venuesService;\n","import React, { createContext, useContext } from 'react';\nimport services from '../services';\n\ntype ServicesContextType = typeof services;\n\nconst ServiceContext = createContext<ServicesContextType>(services);\n\ninterface ServicesProviderProps {\n  services?: typeof services;\n}\n\nconst ServicesProvider: React.FC<ServicesProviderProps> = ({\n  children,\n  services: injectedServices,\n}) => {\n  return (\n    <ServiceContext.Provider value={injectedServices || services}>\n      {children}\n    </ServiceContext.Provider>\n  );\n};\n\nexport const useServices = () => useContext(ServiceContext);\n\nexport default ServicesProvider;\n","import { useQuery } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useCurrentIpLocation = () => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    'ipLocation',\n    () => services.location.getLocationFromIp(),\n    { staleTime: STALE_TIME_MS, refetchInterval: STALE_TIME_MS }\n  );\n  return {\n    isLoading,\n    error,\n    location: data || null,\n  };\n};\n\nconst useCurrentGeoLocation = () => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    'geoLocation',\n    () => services.location.getLocationFromGeolocation(),\n    { staleTime: STALE_TIME_MS, refetchInterval: STALE_TIME_MS }\n  );\n  return {\n    isLoading,\n    error,\n    location: data || null,\n  };\n};\n\nconst useCurrentLocation = () => {\n  const geoLocation = useCurrentGeoLocation();\n  const ipLocation = useCurrentIpLocation();\n\n  const ipLocationFinished = !!ipLocation.location || !!ipLocation.error;\n  const geoError = !!geoLocation.error;\n  const validIp = ipLocationFinished && !!ipLocation;\n\n  if (geoError && validIp) {\n    return ipLocation;\n  }\n\n  return geoLocation;\n};\n\nexport default useCurrentLocation;\n","import { useState, useEffect } from 'react';\nimport { useDebounce } from 'use-lodash-debounce';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { Coordinates, Locations, LocationType } from '../../types';\n\ninterface UseLocationTypeArgs {\n  query: string;\n  around?: Coordinates;\n  restrictToType?: LocationType;\n}\n\nconst useLocationAutocomplete = ({\n  query,\n  around,\n  restrictToType,\n}: UseLocationTypeArgs) => {\n  const services = useServices();\n  const debouncedQuery = useDebounce(query, 200);\n  const [suggestions, setSuggestions] = useState<Locations>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const performSearch = async () => {\n      setLoading(true);\n      const newSuggestions = await services.location.getLocationSuggestions(\n        debouncedQuery,\n        around,\n        restrictToType\n      );\n      if (newSuggestions) {\n        setSuggestions(newSuggestions);\n      }\n      setLoading(false);\n    };\n    performSearch();\n  }, [\n    debouncedQuery,\n    setSuggestions,\n    setLoading,\n    services,\n    around,\n    restrictToType,\n  ]);\n\n  return { suggestions, loading };\n};\n\nexport default useLocationAutocomplete;\n","import { useEffect, useState } from 'react';\nimport { useDebounce } from 'use-lodash-debounce';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { Coordinates, Location } from '../../types';\n\nconst debounceTimeMs = 200;\nconst debounceOpts = {\n  leading: true,\n  trailing: true,\n};\n\nconst useLocationFromCoordinates = (coordinates: Coordinates | null) => {\n  const debouncedCoordinates = useDebounce(\n    coordinates,\n    debounceTimeMs,\n    debounceOpts\n  );\n  const [location, setLocation] = useState<Location | null>(null);\n  const services = useServices();\n\n  useEffect(() => {\n    const lookupCoordinates = async () => {\n      if (!debouncedCoordinates) {\n        return;\n      }\n      try {\n        const newLocation = await services.location.getLocationFromCoordinates(\n          debouncedCoordinates\n        );\n        setLocation(newLocation);\n      } catch (e) {}\n    };\n    lookupCoordinates();\n  }, [debouncedCoordinates, services, setLocation]);\n\n  return location;\n};\n\nexport default useLocationFromCoordinates;\n","import { useState } from 'react';\nimport { useMapEvents } from 'react-leaflet';\nimport { Coordinates } from '../../types';\nimport useLocationFromCoordinates from './useLocationFromCoordinates';\n\nconst useLocationFromMapClick = () => {\n  const [coordinates, setCoordinates] = useState<Coordinates | null>(null);\n  const location = useLocationFromCoordinates(coordinates);\n\n  useMapEvents({\n    click: (e) => {\n      setCoordinates([e.latlng.lng, e.latlng.lat]);\n    },\n  });\n\n  return location;\n};\n\nexport default useLocationFromMapClick;\n","import { useQuery } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useUser = () => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    'user',\n    () => services.user.verify(),\n    {\n      staleTime: STALE_TIME_MS,\n      cacheTime: STALE_TIME_MS,\n    }\n  );\n  return {\n    isLoading,\n    error,\n    user: data,\n  };\n};\n\nexport default useUser;\n","import { useServices } from '../../providers/ServicesProvider';\n\nconst useLogout = () => {\n  const services = useServices();\n  return services.user.logout;\n};\n\nexport default useLogout;\n","import { useServices } from '../../providers/ServicesProvider';\n\nconst useLoginViaSocialMedia = () => {\n  const services = useServices();\n  return services.user.openIdpAuthPage;\n};\n\nexport default useLoginViaSocialMedia;\n","import { useMutation, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { User } from '../../types';\nimport useUser from './useUser';\n\nconst useChangeAvatar = () => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const user = useUser().user as User;\n  const changeUserAvatar = async (file: File) => {\n    const url = await services.images.uploadImage(file);\n    return services.user.patchUser(user.id, { avatar: url });\n  };\n  const mutation = useMutation(changeUserAvatar, {\n    onSuccess: (data) => {\n      queryClient.setQueryData('user', data);\n    },\n  });\n  return mutation;\n};\n\nexport default useChangeAvatar;\n","import { useEffect } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst usePrefetch = () => {\n  const services = useServices();\n  const queryClient = useQueryClient();\n  useEffect(() => {\n    queryClient.fetchQuery('user', services.user.verify);\n    queryClient.fetchQuery('ipLocation', services.location.getLocationFromIp);\n    queryClient.fetchQuery(\n      'geoLocation',\n      services.location.getLocationFromGeolocation\n    );\n  }, [queryClient, services]);\n};\n\nexport default usePrefetch;\n","import { useMutation, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst useCreateVenue = () => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const mutation = useMutation(services.venues.createVenue, {\n    onSuccess: (data) => {\n      queryClient.invalidateQueries('venues');\n      queryClient.setQueryData(`venues/${data.id}`, data);\n    },\n  });\n  return mutation;\n};\n\nexport default useCreateVenue;\n","import { useState, useEffect } from 'react';\n\nconst useDebounce = <T>(value: T, delay: number = 500) => {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler: NodeJS.Timeout = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useQuery, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { Location } from '../../types';\nimport useDebounce from '../utils/useDebounce';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useVenues = (location: Location | null, radius: number) => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const debouncedRadius = useDebounce(radius, 200);\n  const { isLoading, error, data } = useQuery(\n    ['venues', [location?.geo.coordinates, debouncedRadius]],\n    () => services.venues.getVenues({ location, radius: debouncedRadius }),\n    {\n      staleTime: STALE_TIME_MS,\n      enabled: !!location,\n      onSuccess: (venues) => {\n        venues.forEach((venue) => {\n          queryClient.setQueryData(`venues/${venue.id}`, venue);\n        });\n      },\n    }\n  );\n  return {\n    isLoading,\n    error,\n    venues: data,\n  };\n};\n\nexport default useVenues;\n","import { useQuery } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useVenue = (id: string) => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    `venues/${id}`,\n    () => services.venues.getVenue(id),\n    {\n      staleTime: STALE_TIME_MS,\n    }\n  );\n  return {\n    isLoading,\n    error,\n    venue: data,\n  };\n};\n\nexport default useVenue;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Avatar from '../Avatar';\nimport useStyles from './AvatarMenu.styles';\nimport { useUser, useLogout } from '../../hooks';\nimport { User } from '../../types';\n\nconst AvatarMenu = () => {\n  const user = useUser().user as User;\n  const logout = useLogout();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  const classes = useStyles();\n\n  const menuItems = [\n    {\n      key: 'logout',\n      label: 'Log out',\n      onClick: handleLogout,\n      Icon: ExitToAppIcon,\n    },\n  ];\n\n  return (\n    <>\n      <Button className={classes.fullHeight} onClick={handleClick}>\n        <Avatar avatar={user.avatar} />\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        {menuItems.map((item) => (\n          <MenuItem key={item.key} onClick={item.onClick}>\n            <ListItemIcon className={classes.itemIcon}>\n              <item.Icon />\n            </ListItemIcon>\n            <ListItemText>{item.label}</ListItemText>\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default React.memo(AvatarMenu);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  topBar: {\n    minHeight: 'auto',\n    height: 64,\n  },\n  fullHeight: {\n    height: '100%',\n  },\n  titleContainer: {\n    paddingRight: theme.spacing(6),\n  },\n  list: {\n    padding: 0,\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100%',\n  },\n  item: {\n    height: '100%',\n  },\n  icon: {\n    minWidth: 0,\n    paddingRight: theme.spacing(1),\n  },\n  filler: {\n    height: 64,\n  },\n}));\n\nexport default useStyles;\n","import HomeIcon from '@material-ui/icons/Home';\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst NavigationItems = [\n  {\n    value: 'home',\n    label: 'Home',\n    icon: HomeIcon,\n  },\n  {\n    value: 'events',\n    label: 'Events',\n    icon: SportsSoccerIcon,\n  },\n  {\n    value: 'venues',\n    label: 'Venues',\n    icon: LocationOnIcon,\n  },\n  {\n    value: 'settings',\n    label: 'Settings',\n    icon: SettingsIcon,\n  },\n];\n\nexport default NavigationItems;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport AvatarMenu from '../../AvatarMenu/AvatarMenu';\nimport useStyles from './DesktopNavigation.styles';\nimport NavigationItems from '../navigationItems';\n\nconst DesktopNavigation = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const selectedValue = location.pathname.split('/')[1];\n\n  return (\n    <>\n      <AppBar className={classes.topBar} position=\"fixed\">\n        <Toolbar>\n          <Grid\n            container\n            className={classes.fullHeight}\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item className={classes.fullHeight}>\n              <Grid\n                container\n                className={classes.fullHeight}\n                alignItems=\"center\"\n              >\n                <Grid item className={classes.titleContainer}>\n                  <Typography variant=\"h5\">TeamFindr</Typography>\n                </Grid>\n                <Grid item className={classes.fullHeight}>\n                  <List className={classes.list} component=\"nav\">\n                    {NavigationItems.map((item) => (\n                      <ListItem\n                        key={item.value}\n                        className={classes.item}\n                        selected={item.value === selectedValue}\n                        button\n                        component={Link}\n                        to={`/${item.value}`}\n                      >\n                        <ListItemIcon className={classes.icon}>\n                          <item.icon />\n                        </ListItemIcon>\n                        <ListItemText>{item.label}</ListItemText>\n                      </ListItem>\n                    ))}\n                  </List>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item className={classes.fullHeight}>\n              <AvatarMenu />\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Toolbar disableGutters className={classes.filler} />\n    </>\n  );\n};\n\nexport default React.memo(DesktopNavigation);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  navigation: {\n    position: 'fixed',\n    bottom: 0,\n    top: 'auto',\n    width: '100%',\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  filler: {\n    background: 'none',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport BottomNavigationBase from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport useStyles from './MobileNavigation.styles';\nimport NavigationItems from '../navigationItems';\n\nconst MobileNavigation = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const selectedValue = location.pathname.split('/')[1];\n\n  const handleNavigationChange = (\n    _event: React.ChangeEvent<{}>,\n    value: string\n  ) => {\n    history.push(`/${value}`);\n  };\n\n  return (\n    <>\n      <BottomNavigationBase className={classes.filler} />\n      <BottomNavigationBase\n        className={classes.navigation}\n        value={selectedValue}\n        onChange={handleNavigationChange}\n      >\n        {NavigationItems.map((item) => (\n          <BottomNavigationAction\n            key={item.value}\n            value={item.value}\n            label={item.label}\n            icon={<item.icon />}\n          />\n        ))}\n      </BottomNavigationBase>\n    </>\n  );\n};\n\nexport default React.memo(MobileNavigation);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './PageTitle.styles';\nimport Button from '@material-ui/core/Button';\n\nexport interface PageTitleAction {\n  label: string;\n  icon: React.ReactElement;\n  onClick: () => void;\n}\n\ninterface PageTitleProps {\n  title: string;\n  action?: PageTitleAction;\n}\n\nconst PageTitle: React.FC<PageTitleProps> = ({ title, action }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div>\n        <Typography variant=\"h4\">{title}</Typography>\n      </div>\n      {action && (\n        <div>\n          <Button\n            startIcon={action.icon}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={action.onClick}\n          >\n            {action.label}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(PageTitle);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  centered: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  content: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    width: '100%',\n    maxWidth: '900px',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { AutoSizer } from 'react-virtualized';\nimport DesktopNavigation from '../../components/Navigation/DesktopNavigation';\nimport MobileNavigation from '../../components/Navigation/MobileNavigation';\nimport PageTitle, { PageTitleAction } from './PageTitle';\nimport useStyles from './Page.styles';\n\ninterface PageProps {\n  title: string;\n  titleAction?: PageTitleAction;\n  children: React.ReactElement;\n}\n\nconst Page: React.FC<PageProps> = ({ title, titleAction, children }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Hidden smDown>\n        <DesktopNavigation />\n      </Hidden>\n      <AutoSizer disableWidth>\n        {({ height }) => (\n          <Scrollbars\n            autoHide\n            style={{\n              width: '100%',\n              height: document.documentElement.clientHeight - height,\n            }}\n          >\n            <div className={classes.centered}>\n              <main className={classes.content}>\n                <div className={classes.titleContainer}>\n                  <PageTitle title={title} action={titleAction} />\n                </div>\n                {children}\n              </main>\n            </div>\n          </Scrollbars>\n        )}\n      </AutoSizer>\n      <Hidden mdUp>\n        <MobileNavigation />\n      </Hidden>\n    </div>\n  );\n};\n\nexport default React.memo(Page);\n","import React from 'react';\nimport Page from '../../components/Page';\n\nconst Home = () => (\n  <Page title=\"Home\">\n    <div>Page content</div>\n  </Page>\n);\n\nexport default React.memo(Home);\n","import L from 'leaflet';\n\nexport const Marker = L.icon({\n  iconUrl: '/icons/marker.svg',\n  iconSize: [38, 95],\n  iconAnchor: [19, 60],\n  popupAnchor: [0, -20],\n});\n\nexport const Pin = L.icon({\n  iconUrl: '/icons/pin.svg',\n  iconSize: [38, 95],\n  iconAnchor: [19, 60],\n  popupAnchor: [0, -15],\n});\n","import { Coordinates } from '../types';\n\nexport const toLeaflet = (coordinates: Coordinates): Coordinates => [\n  coordinates[1],\n  coordinates[0],\n];\n","import React, { useState, useEffect } from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Circle,\n  useMap,\n  useMapEvents,\n} from 'react-leaflet';\nimport { Pin as PinIcon } from './icons';\nimport { Location } from '../../types';\nimport { toLeaflet } from '../../utils/leaflet';\nimport { useLocationFromMapClick } from '../../hooks';\n\ninterface MapControllerProps {\n  onChange?: (location: Location) => void;\n  location: Location;\n}\n\nconst MapController: React.FC<MapControllerProps> = ({\n  onChange,\n  location,\n}) => {\n  const map = useMap();\n  const locationFromClick = useLocationFromMapClick();\n\n  useMapEvents({\n    click: (e) => {\n      map.setView([e.latlng.lat, e.latlng.lng], map.getZoom());\n    },\n  });\n\n  const [\n    oldLocationFromClick,\n    setOldLocationFromClick,\n  ] = useState<Location | null>(null);\n\n  const coordinates = location.geo.coordinates;\n\n  useEffect(() => {\n    if (\n      onChange &&\n      locationFromClick &&\n      locationFromClick !== oldLocationFromClick\n    ) {\n      onChange(locationFromClick);\n      setOldLocationFromClick(locationFromClick);\n    }\n  }, [\n    locationFromClick,\n    onChange,\n    oldLocationFromClick,\n    setOldLocationFromClick,\n  ]);\n\n  useEffect(() => {\n    map.setView(toLeaflet(coordinates), map.getZoom());\n  }, [map, coordinates]);\n\n  return null;\n};\n\ninterface MapProps {\n  location: Location | null;\n  onChange?: (location: Location | null) => void;\n  circleRadius?: number;\n  markers?: React.ReactNode;\n}\n\nconst Map: React.FC<MapProps> = ({\n  location,\n  onChange,\n  circleRadius,\n  markers,\n}) => {\n  if (!location) {\n    return <Skeleton width=\"100%\" height={310} variant=\"rect\" />;\n  }\n\n  const coordinates = location.geo.coordinates;\n  const leafCoordinates = toLeaflet(coordinates);\n\n  return (\n    <div style={{ width: '100%' }}>\n      <MapContainer zoom={12} scrollWheelZoom={true}>\n        <MapController location={location} onChange={onChange} />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={leafCoordinates} icon={PinIcon} />\n        {circleRadius && (\n          <Circle\n            center={leafCoordinates}\n            pathOptions={{ color: 'green', fillColor: 'green' }}\n            radius={circleRadius}\n          />\n        )}\n        {!!markers && markers}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default React.memo(Map);\n","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\n\nexport const AccordionSummary = withStyles({\n  root: {\n    minHeight: 0,\n    '&$expanded': {\n      minHeight: 0,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary);\n\nconst useStyles = makeStyles(() => ({\n  accordionDetails: {\n    padding: 0,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport Page from '../../components/Page';\nimport Map from '../../components/Map';\nimport useStyles, { AccordionSummary } from './Events.styles';\nimport { useCurrentLocation } from '../../hooks';\n\nconst Events = () => {\n  const currentLocation = useCurrentLocation();\n  const classes = useStyles();\n\n  return (\n    <Page title=\"Events\">\n      <Accordion defaultExpanded>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>Map</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.accordionDetails}>\n          <Map location={currentLocation.location} />\n        </AccordionDetails>\n      </Accordion>\n    </Page>\n  );\n};\n\nexport default React.memo(Events);\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { useLocationAutocomplete } from '../../hooks';\nimport { Coordinates, Location, Locations, LocationType } from '../../types';\n\ninterface LocationAutocompleteProps {\n  value: Location | null;\n  around?: Coordinates;\n  onChange: (value: Location | null) => void;\n  disabled?: boolean;\n  required?: boolean;\n  restrictToType?: LocationType;\n  name?: string;\n  error?: boolean;\n  helperText?: string | false;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nconst byCoordinates = (a: Location) => (b: Location) => {\n  const {\n    geo: { coordinates: coordA },\n  } = a;\n  const {\n    geo: { coordinates: coordB },\n  } = b;\n  return coordA[0] === coordB[0] && coordA[1] === coordB[1];\n};\n\nconst suggestionsForValue = (\n  value: Location | null,\n  suggestions: Locations\n): Locations => {\n  if (!value) {\n    return suggestions;\n  }\n\n  const suggestion = suggestions.find(byCoordinates(value));\n  if (!suggestion) {\n    return [value, ...suggestions];\n  }\n\n  return suggestions;\n};\n\nconst getOptionLabel = (option: Location, restrictToType?: LocationType) =>\n  restrictToType && restrictToType !== 'house'\n    ? option[restrictToType] || (option.name as string)\n    : option.name;\n\nconst geTextFieldLabel = (restrictToType?: LocationType) =>\n  `Enter a ${restrictToType || 'location'}`;\n\nconst LocationAutocomplete: React.FC<LocationAutocompleteProps> = ({\n  value,\n  around,\n  onChange,\n  disabled = false,\n  required = false,\n  restrictToType,\n  name,\n  error = false,\n  helperText,\n  onBlur,\n}) => {\n  const [inputValue, setInputValue] = useState<string>('');\n  const { suggestions, loading } = useLocationAutocomplete({\n    query: inputValue,\n    around,\n    restrictToType,\n  });\n\n  return (\n    <Autocomplete\n      fullWidth\n      disabled={disabled}\n      getOptionLabel={(option) => getOptionLabel(option, restrictToType)}\n      options={suggestionsForValue(value, suggestions)}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      disableClearable={true}\n      value={value as Location}\n      loading={loading}\n      noOptionsText={'No results'}\n      onChange={(event, newValue) => {\n        onChange(newValue);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          name={name}\n          label={geTextFieldLabel(restrictToType)}\n          variant=\"outlined\"\n          fullWidth\n          required={required}\n          error={error}\n          helperText={helperText}\n          onBlur={onBlur}\n        />\n      )}\n      renderOption={(option) => (\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <LocationOnIcon />\n          </Grid>\n          <Grid item xs>\n            <span style={{ fontWeight: 700 }}>{option.name}</span>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {option.description || ''}\n            </Typography>\n          </Grid>\n        </Grid>\n      )}\n    />\n  );\n};\n\nexport default React.memo(LocationAutocomplete);\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Coordinates, Location, LocationType } from '../../types';\nimport LocationAutocomplete from '../LocationAutocomplete';\nimport Map from '../Map';\nimport { useCurrentLocation } from '../../hooks';\n\ninterface LocationFieldProps {\n  location: Location | null;\n  around?: Coordinates;\n  onChange: (location: Location | null) => void;\n  disabled?: boolean;\n  name?: string;\n  error?: boolean;\n  helperText?: string | false;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  disableChangePositionViaMap?: boolean;\n  restrictToType?: LocationType;\n  circleRadius?: number;\n  markers?: React.ReactNode;\n}\n\nconst LocationWithMapField: React.FC<LocationFieldProps> = ({\n  location,\n  onChange,\n  disabled = false,\n  name,\n  error = false,\n  helperText,\n  onBlur,\n  disableChangePositionViaMap,\n  restrictToType,\n  circleRadius,\n  markers,\n}) => {\n  const { location: current } = useCurrentLocation();\n  useEffect(() => {\n    if (!location && current) {\n      onChange(current);\n    }\n  }, [current, onChange, location]);\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item>\n        <LocationAutocomplete\n          name={name}\n          value={location}\n          onChange={onChange}\n          disabled={disabled || disableChangePositionViaMap}\n          required\n          around={current?.geo.coordinates}\n          error={error}\n          helperText={helperText}\n          onBlur={onBlur}\n          restrictToType={restrictToType}\n        />\n      </Grid>\n      <Grid item>\n        <Map\n          location={location}\n          onChange={onChange}\n          circleRadius={circleRadius}\n          markers={markers}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(LocationWithMapField);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  sliderContainer: {\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import React, { useCallback } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport useStyles from './RadiusSlider.styles';\n\ninterface RadiusSliderProps {\n  id: string;\n  value: number;\n  onChange: (e: React.ChangeEvent<{}>, value: number) => void;\n  name?: string;\n  disabled?: boolean;\n}\n\nfunction valuetext(value: number) {\n  return `${Math.round(value / 1000)}km`;\n}\n\nconst marks = [\n  {\n    value: 1000,\n    label: '1km',\n  },\n  {\n    value: 5000,\n    label: '5km',\n  },\n  {\n    value: 10000,\n    label: '10km',\n  },\n  {\n    value: 20000,\n    label: '20km',\n  },\n  {\n    value: 30000,\n    label: '30km',\n  },\n];\n\nconst RadiusSlider: React.FC<RadiusSliderProps> = ({\n  id,\n  value,\n  onChange,\n  name,\n  disabled,\n}) => {\n  const classes = useStyles();\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<{}>, value: number | number[]) => {\n      onChange(e, value as number);\n    },\n    [onChange]\n  );\n  return (\n    <div className={classes.root}>\n      <Typography id={id} gutterBottom>\n        Radius: {`${valuetext(value)}`}\n      </Typography>\n      <div className={classes.sliderContainer}>\n        <Slider\n          getAriaValueText={valuetext}\n          aria-labelledby={id}\n          step={1000}\n          marks={marks}\n          min={1000}\n          max={30000}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          disabled={disabled}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(RadiusSlider);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    minWidth: 500,\n    maxWidth: 900,\n  },\n  title: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport DialogBase from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\nimport useStyles from './Dialog.styles';\n\ninterface DialogProps {\n  id: string;\n  open: boolean;\n  onClose: () => void;\n  title: string;\n  loading?: boolean;\n  children: React.ReactNode;\n}\n\nconst Dialog: React.FC<DialogProps> = ({\n  id,\n  open,\n  onClose,\n  title,\n  children,\n  loading = false,\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const titleId = `${id}-title`;\n  const classes = useStyles();\n\n  return (\n    <DialogBase\n      classes={{\n        paper: !fullScreen ? classes.dialogPaper : undefined,\n      }}\n      fullScreen={fullScreen}\n      disableBackdropClick={loading}\n      disableEscapeKeyDown={loading}\n      onClose={onClose}\n      aria-labelledby={titleId}\n      open={open}\n      scroll=\"paper\"\n    >\n      <DialogTitle id={titleId} className={classes.title} disableTypography>\n        <Typography variant=\"h6\">{title}</Typography>\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      {open && children}\n    </DialogBase>\n  );\n};\n\nexport default React.memo(Dialog);\n","import React from 'react';\nimport DialogActionsBase from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\ninterface Action {\n  key: string;\n  label: string;\n  disabled?: boolean;\n  loading?: boolean;\n  onClick?: () => void;\n  type?: 'submit';\n}\n\ninterface DialogActionProps {\n  actions: Action[];\n  loading?: boolean;\n}\n\nconst DialogActions: React.FC<DialogActionProps> = ({\n  actions,\n  loading = false,\n}) => (\n  <DialogActionsBase>\n    {actions.map((action) => (\n      <Button\n        key={action.key}\n        type={action.type}\n        onClick={action.onClick}\n        color=\"primary\"\n        disabled={action.disabled || loading}\n      >\n        {action.loading ? (\n          <CircularProgress size={24} color=\"primary\" />\n        ) : (\n          action.label\n        )}\n      </Button>\n    ))}\n  </DialogActionsBase>\n);\n\nexport default React.memo(DialogActions);\n","import React from 'react';\nimport DialogContentBase from '@material-ui/core/DialogContent';\n\ninterface DialogContentProps {\n  children: React.ReactNode;\n}\n\nconst DialogContent: React.FC<DialogContentProps> = ({ children }) => (\n  <DialogContentBase dividers>{children}</DialogContentBase>\n);\n\nexport default React.memo(DialogContent);\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { DialogContent, DialogActions } from '../Dialog';\nimport LocationWithMapField from './LocationWithMapField';\nimport { useCreateVenue } from '../../hooks';\nimport { Location } from '../../types';\n\ninterface NewVenueFormValues {\n  name: string;\n  location: Location | null;\n}\nconst NewVenueInitialFormValues: NewVenueFormValues = {\n  name: '',\n  location: null,\n};\n\ninterface NewVenueDialogContentProps {\n  onClose: () => void;\n}\n\nconst NewVenueDialogContent: React.FC<NewVenueDialogContentProps> = ({\n  onClose,\n}) => {\n  const createVenue = useCreateVenue();\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (createVenue.isSuccess) {\n      onClose();\n      enqueueSnackbar('Venue created', { variant: 'success' });\n    }\n    if (createVenue.isError) {\n      enqueueSnackbar('Failed to create venue', { variant: 'error' });\n    }\n  }, [enqueueSnackbar, createVenue.isSuccess, createVenue.isError, onClose]);\n\n  return (\n    <Formik\n      initialValues={NewVenueInitialFormValues}\n      onSubmit={(values) => {\n        createVenue.mutate({\n          name: values.name,\n          location: values.location as Location,\n        });\n      }}\n      validate={(values) => {\n        const errors: any = {};\n        if (!values.name) {\n          errors.name = 'Required';\n        }\n        if (!values.location) {\n          errors.location = 'Required';\n        }\n        return errors;\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <TextField\n                  required\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  name=\"name\"\n                  value={values.name}\n                  fullWidth\n                  onChange={handleChange}\n                  error={touched.name && !!errors.name}\n                  helperText={touched.name && errors.name}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n              <Grid item>\n                <LocationWithMapField\n                  name=\"location\"\n                  location={values.location}\n                  error={touched.location && !!errors.location}\n                  helperText={touched.location && errors.location}\n                  onBlur={handleBlur}\n                  onChange={(newLocation) =>\n                    setFieldValue('location', newLocation)\n                  }\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions\n            actions={[\n              {\n                key: 'create',\n                label: 'Create',\n                loading: createVenue.isLoading,\n                type: 'submit',\n              },\n            ]}\n          />\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewVenueDialogContent;\n","import React from 'react';\nimport Dialog from '../Dialog';\nimport NewVenueDialogContent from './NewVenueDialogContent';\n\ninterface NewVenueDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NewVenueDialog: React.FC<NewVenueDialogProps> = ({ open, onClose }) => (\n  <Dialog id=\"new-venue-dialog\" title=\"New venue\" open={open} onClose={onClose}>\n    <NewVenueDialogContent onClose={onClose} />\n  </Dialog>\n);\n\nexport default React.memo(NewVenueDialog);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    display: 'flex',\n    alignItems: 'center',\n    textDecoration: 'none',\n    '&:focus, &:hover, &:visited, &:link, &:active': {\n      textDecoration: 'none',\n      color: 'inherit',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport { Venue } from '../../types';\nimport { Link } from 'react-router-dom';\nimport useStyles from './VenueListItem.styles';\n\ninterface VenueListItemProps {\n  venue: Venue;\n}\n\nconst VenueListItem: React.FC<VenueListItemProps> = ({ venue }) => {\n  const classes = useStyles();\n  return (\n    <ListItem button component=\"li\">\n      <Link className={classes.link} to={`/venues/${venue.id}`}>\n        <ListItemAvatar>\n          <Avatar>\n            <ImageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={venue.name}\n          secondary={`${venue.location.name} ${venue.location.description}`}\n        />\n      </Link>\n    </ListItem>\n  );\n};\n\nexport default React.memo(VenueListItem);\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport VenueListItem from './VenueListItem';\nimport { Venue } from '../../types';\n\ninterface VenueListProps {\n  venues: Venue[];\n}\n\nconst VenueList: React.FC<VenueListProps> = ({ venues }) => {\n  return (\n    <List>\n      {venues.map((venue) => (\n        <VenueListItem key={venue.id} venue={venue} />\n      ))}\n    </List>\n  );\n};\n\nexport default React.memo(VenueList);\n","import React from 'react';\nimport { Marker, Popup } from 'react-leaflet';\nimport { Link } from 'react-router-dom';\nimport { Marker as PinIcon } from '../../components/Map/icons';\nimport { Venue } from '../../types';\nimport { toLeaflet } from '../../utils/leaflet';\n\ninterface VenueMarkersProps {\n  venues?: Venue[];\n}\n\nconst VenueMarkers: React.FC<VenueMarkersProps> = ({ venues = [] }) => {\n  return (\n    <>\n      {venues.map((venue) => (\n        <Marker\n          key={venue.id}\n          position={toLeaflet(venue.location.geo.coordinates)}\n          icon={PinIcon}\n        >\n          <Popup>\n            <Link to={`/venues/${venue.id}`}>{venue.name}</Link>\n          </Popup>\n        </Marker>\n      ))}\n    </>\n  );\n};\n\nexport default React.memo(VenueMarkers);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  filtersPaper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Page from '../../components/Page';\nimport LocationWithMapField from '../../components/NewVenueDialog/LocationWithMapField';\nimport RadiusSlider from '../../components/RadiusSlider';\nimport NewVenueDialog from '../../components/NewVenueDialog';\nimport { Location } from '../../types';\nimport { useCurrentLocation, useVenues } from '../../hooks';\nimport VenueList from './VenueList';\nimport VenueMarkers from './VenueMarkers';\nimport useStyles from './Venues.styles';\n\nconst Venues = () => {\n  const [location, setLocation] = useState<Location | null>(null);\n  const [radius, setRadius] = useState<number>(5000);\n  const { venues } = useVenues(location, radius);\n  const currentLocation = useCurrentLocation();\n  const [newVenueDialogOpen, setNewVenueDialogOpen] = useState(false);\n  const handleNewVenueDialogClose = () => setNewVenueDialogOpen(false);\n  const handleNewVenueDialogOpen = () => setNewVenueDialogOpen(true);\n\n  const handleRadiusChange = (e: React.ChangeEvent<{}>, value: number) =>\n    setRadius(value);\n\n  useEffect(() => {\n    if (currentLocation.location && !location) {\n      setLocation(currentLocation.location);\n    }\n  }, [currentLocation, location]);\n\n  const classes = useStyles();\n\n  return (\n    <Page\n      title=\"Venues\"\n      titleAction={{\n        label: 'New venue',\n        icon: <AddIcon />,\n        onClick: handleNewVenueDialogOpen,\n      }}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Paper className={classes.filtersPaper}>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <LocationWithMapField\n                  location={location}\n                  onChange={setLocation}\n                  disabled={currentLocation.isLoading}\n                  around={currentLocation.location?.geo.coordinates}\n                  circleRadius={radius}\n                  markers={<VenueMarkers venues={venues} />}\n                />\n              </Grid>\n              <Grid item>\n                <RadiusSlider\n                  id=\"venue-search-radius\"\n                  value={radius}\n                  disabled={currentLocation.isLoading}\n                  onChange={handleRadiusChange}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {!venues ? (\n            <Skeleton width=\"100%\" height=\"100%\" variant=\"rect\" />\n          ) : (\n            <Paper>{venues && <VenueList venues={venues} />}</Paper>\n          )}\n        </Grid>\n        <NewVenueDialog\n          open={newVenueDialogOpen}\n          onClose={handleNewVenueDialogClose}\n        />\n      </Grid>\n    </Page>\n  );\n};\n\nexport default React.memo(Venues);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    width: '100%',\n  },\n  address: {\n    flex: 1,\n  },\n}));\n\nexport default useStyles;\n","import '../../App.css';\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Venue } from '../../types';\nimport Map from '../Map';\nimport useStyles from './VenueBasicInfoPanel.styles';\ninterface VenueBasicInfoPanelProps {\n  venue?: Venue;\n}\n\nconst getGoogleMapsUrl = (venue?: Venue) => {\n  if (!venue) {\n    return '';\n  }\n\n  const coords = venue.location.geo.coordinates;\n  return `https://www.google.com/maps/search/?api=1&query=${coords[1]},${coords[0]}`;\n};\n\nconst VenueBasicInfoPanel: React.FC<VenueBasicInfoPanelProps> = ({ venue }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea\n        component={Link}\n        href={getGoogleMapsUrl(venue)}\n        rel=\"nofollow noopener\"\n        target=\"_blank\"\n        color=\"inherit\"\n        underline=\"none\"\n        disabled={!venue}\n      >\n        <CardContent>\n          <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\n            <Grid item>\n              <Typography color=\"textSecondary\">\n                <LocationOnIcon />\n              </Typography>\n            </Grid>\n            <Grid item className={classes.address}>\n              {venue ? (\n                <Typography color=\"textSecondary\">\n                  {venue.location.description || venue.location.name}\n                </Typography>\n              ) : (\n                <Skeleton variant=\"text\" />\n              )}\n            </Grid>\n          </Grid>\n        </CardContent>\n      </CardActionArea>\n      <CardMedia>\n        <Map location={venue?.location || null} />\n      </CardMedia>\n    </Card>\n  );\n};\n\nexport default React.memo(VenueBasicInfoPanel);\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport Page from '../../components/Page';\nimport VenueBasicInfoPanel from '../../components/VenueBasicInfoPanel';\nimport { useVenue } from '../../hooks';\n\ninterface VenueRouteParams {\n  venueId: string;\n}\n\nconst Venue = () => {\n  const { venueId } = useParams<VenueRouteParams>();\n  const { venue } = useVenue(venueId);\n\n  return (\n    <Page title={venue?.name || ''}>\n      <VenueBasicInfoPanel venue={venue} />\n    </Page>\n  );\n};\n\nexport default React.memo(Venue);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  visuallyHidden: {\n    display: 'none',\n  },\n}));\n\nexport default useStyles;\n","import React, { useRef } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '../../../components/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useStyles from './AvatarUploader.styles';\nimport { useUser, useChangeAvatar } from '../../../hooks';\nimport { User } from '../../../types';\n\nconst AvatarUploader = () => {\n  const classes = useStyles();\n  const user = useUser().user as User;\n  const { mutate: changeAvatar, isLoading: changingAvatar } = useChangeAvatar();\n  const inputEl = useRef<HTMLInputElement>(null);\n  const handleAvatarClicked = () => {\n    const current = inputEl?.current;\n    if (current) {\n      current.click();\n    }\n  };\n  const handleSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files as FileList;\n    changeAvatar(files[0]);\n  };\n\n  return (\n    <>\n      <Tooltip\n        title=\"Change avatar\"\n        aria-label=\"change avatar\"\n        placement=\"right\"\n      >\n        <IconButton onClick={handleAvatarClicked} disabled={changingAvatar}>\n          <Avatar\n            firstName={user.firstName}\n            lastName={user.lastName}\n            avatar={user.avatar}\n            size=\"large\"\n            variant=\"circular\"\n            loading={changingAvatar}\n          />\n        </IconButton>\n      </Tooltip>\n      <input\n        ref={inputEl}\n        className={classes.visuallyHidden}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleSelectFile}\n      />\n    </>\n  );\n};\n\nexport default React.memo(AvatarUploader);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  avatarContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AvatarUploader from './AvatarUploader';\nimport useStyles from './Profile.styles';\nimport { useUser } from '../../../hooks';\nimport { User } from '../../../types';\n\nconst Profile = () => {\n  const classes = useStyles();\n  const user = useUser().user as User;\n\n  const dataItems = [\n    {\n      key: 'name',\n      Icon: PersonIcon,\n      text: `${user?.firstName} ${user?.lastName}`,\n    },\n    {\n      key: 'email',\n      Icon: EmailIcon,\n      text: user.email,\n    },\n  ];\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      spacing={4}\n      justify=\"center\"\n      alignContent=\"center\"\n    >\n      <Grid item>\n        <div className={classes.avatarContainer}>\n          <AvatarUploader />\n        </div>\n      </Grid>\n      <Grid item>\n        <Grid\n          container\n          direction=\"column\"\n          spacing={2}\n          justify=\"center\"\n          alignContent=\"center\"\n        >\n          {dataItems.map((item) => (\n            <Grid key={item.key} item>\n              <Grid container direction=\"row\" spacing={2}>\n                <Grid item>\n                  <item.Icon color=\"primary\" />\n                </Grid>\n                <Grid item>\n                  <Typography>{item.text}</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(Profile);\n","const NotificationSettings = () => <div>NotificationSettings</div>;\n\nexport default NotificationSettings;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  tabPanel: {\n    padding: theme.spacing(3),\n  },\n  tabLabelContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  tabIcon: {\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {\n  Link,\n  Redirect,\n  useHistory,\n  useLocation,\n  useRouteMatch,\n} from 'react-router-dom';\nimport Page from '../../components/Page';\nimport Profile from './Profile';\nimport NotificationSettings from './NotificationSettings';\nimport useStyles from './Settings.styles';\n\nconst tabAllyProps = (key: string) => ({\n  id: `settings-tab-${key}`,\n  'aria-controls': `settings-tabpanel-${key}`,\n});\n\nconst tabPanelAllyProps = (key: string) => ({\n  role: 'tabpanel',\n  id: `settings-tabpanel-${key}`,\n  'aria-labelledby': `settings-tab-${key}`,\n});\n\ninterface SettingsTab {\n  value: string;\n  label: string;\n  Icon: React.ComponentType;\n  Component: React.ComponentType;\n  disabled?: boolean;\n}\n\nconst AllTabs: SettingsTab[] = [\n  {\n    value: 'profile',\n    label: 'Profile',\n    Icon: PersonIcon,\n    Component: Profile,\n  },\n  {\n    value: 'notifications',\n    label: 'Notifications',\n    Icon: NotificationsIcon,\n    Component: NotificationSettings,\n    // disabled: true,\n  },\n];\n\nconst lastSegment = (pathname: string) => {\n  const parts = pathname.split('/');\n  return parts[parts.length - 1];\n};\n\nconst Settings = () => {\n  const history = useHistory();\n  const match = useRouteMatch();\n  const location = useLocation();\n  const classes = useStyles();\n  const currentTab = AllTabs.find(\n    (tab) => tab.value === lastSegment(location.pathname)\n  ) as SettingsTab;\n\n  const changeTab = (value: string) => {\n    if (value !== currentTab.value) {\n      history.push(`${match.url}/${value}`);\n    }\n  };\n\n  const handleChangeTab = (event: React.ChangeEvent<{}>, value: string) => {\n    changeTab(value);\n  };\n\n  const isRootPath = match.url === location.pathname;\n  if (isRootPath) {\n    return <Redirect to={`${match.url}/profile`} />;\n  }\n\n  return (\n    <Page title=\"Settings\">\n      <>\n        <Tabs\n          value={currentTab.value}\n          onChange={handleChangeTab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          {AllTabs.map((tab) => (\n            <Tab\n              key={tab.value}\n              value={tab.value}\n              component={Link}\n              to={`${match.url}/${tab.value}`}\n              label={\n                <div className={classes.tabLabelContainer}>\n                  <SvgIcon className={classes.tabIcon}>\n                    <tab.Icon />\n                  </SvgIcon>\n                  {tab.label}\n                </div>\n              }\n              disabled={tab.disabled}\n              {...tabAllyProps(tab.value)}\n            />\n          ))}\n        </Tabs>\n        <div\n          className={classes.tabPanel}\n          {...tabPanelAllyProps(currentTab.value)}\n        >\n          <currentTab.Component />\n        </div>\n      </>\n    </Page>\n  );\n};\n\nexport default React.memo(Settings);\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport Home from '../Home';\nimport Events from '../Events';\nimport Venues from '../Venues';\nimport Venue from '../Venue';\nimport Settings from '../Settings';\n\nconst Dashboard = () => (\n  <Switch>\n    <Route path=\"/\" exact render={() => <Redirect to=\"/home\" />} />\n    <Route path=\"/home\" component={Home} />\n    <Route path=\"/events\" component={Events} />\n    <Route path=\"/venues\" exact component={Venues} />\n    <Route path=\"/venues/:venueId\" component={Venue} />\n    <Route path=\"/settings\" component={Settings} />\n  </Switch>\n);\n\nexport default React.memo(Dashboard);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst GoogleIcon: React.FC = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\" />\n  </SvgIcon>\n);\n\nexport default GoogleIcon;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  baseRoot: {\n    color: 'white',\n    justifyContent: 'flex-start',\n  },\n  facebookRoot: {\n    backgroundColor: '#4267B2',\n    '&:hover': {\n      backgroundColor: '#2e487c',\n    },\n  },\n  googleRoot: {\n    backgroundColor: '#DB4437',\n    '&:hover': {\n      backgroundColor: '#a2271d',\n    },\n  },\n  twitterRoot: {\n    backgroundColor: '#1DA1F2',\n    '&:hover': {\n      backgroundColor: '#0a73b3',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport GoogleIcon from '../GoogleIcon';\nimport useStyles from './LoginButtons.styles';\n\ninterface LoginButtonProps {\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\n}\n\nexport const FacebookLoginButton: React.FC<LoginButtonProps> = React.memo(\n  ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n      <Button\n        classes={{\n          root: clsx(classes.baseRoot, classes.facebookRoot),\n        }}\n        startIcon={<FacebookIcon />}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onClick}\n        fullWidth\n      >\n        Join with Facebook\n      </Button>\n    );\n  }\n);\n\nexport const GoogleLoginButton: React.FC<LoginButtonProps> = React.memo(\n  ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n      <Button\n        classes={{\n          root: clsx(classes.baseRoot, classes.googleRoot),\n        }}\n        startIcon={<GoogleIcon />}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onClick}\n        fullWidth\n      >\n        Join with Google\n      </Button>\n    );\n  }\n);\n\nexport const TwitterLoginButton: React.FC<LoginButtonProps> = React.memo(\n  ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n      <Button\n        classes={{\n          root: clsx(classes.baseRoot, classes.twitterRoot),\n        }}\n        startIcon={<TwitterIcon />}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onClick}\n        fullWidth\n      >\n        Join with Twitter\n      </Button>\n    );\n  }\n);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minHeight: '100vh',\n  },\n  buttonsContainer: {\n    maxWidth: '300px',\n  },\n  buttonContainer: {\n    width: '100%',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  FacebookLoginButton,\n  GoogleLoginButton,\n  TwitterLoginButton,\n} from '../../components/LoginButtons';\nimport useStyles from './Login.styles';\nimport { useLoginViaSocialMedia } from '../../hooks';\nimport { AuthProvider } from '../../types';\n\nconst LoginButtons = [\n  {\n    authProvider: 'google',\n    Button: GoogleLoginButton,\n  },\n  {\n    authProvider: 'facebook',\n    Button: FacebookLoginButton,\n  },\n  {\n    authProvider: 'twitter',\n    Button: TwitterLoginButton,\n  },\n];\n\nfunction Login() {\n  const loginViaSocialMedia = useLoginViaSocialMedia();\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      direction=\"column\"\n      alignContent=\"center\"\n      alignItems=\"center\"\n      justify=\"center\"\n    >\n      <Grid item>\n        <Grid\n          container\n          direction=\"column\"\n          alignContent=\"center\"\n          alignItems=\"center\"\n          justify=\"center\"\n          spacing={8}\n        >\n          <Grid item>\n            <Typography variant=\"h2\">Team Findr</Typography>\n          </Grid>\n          <Grid\n            className={classes.buttonsContainer}\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={1}\n          >\n            {LoginButtons.map((loginButton) => (\n              <Grid\n                key={loginButton.authProvider}\n                item\n                className={classes.buttonContainer}\n              >\n                <loginButton.Button\n                  onClick={() =>\n                    loginViaSocialMedia(\n                      loginButton.authProvider as AuthProvider\n                    )\n                  }\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default React.memo(Login);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: '100vh',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useStyles from './Authenticating.styles';\n\nconst Authenticating = () => {\n  const classes = useStyles();\n  return (\n    <Grid\n      className={classes.root}\n      container\n      alignContent=\"center\"\n      justify=\"center\"\n    >\n      <CircularProgress />\n    </Grid>\n  );\n};\n\nexport default React.memo(Authenticating);\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { useUser } from '../hooks';\n\nconst WithAuthentication = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> => (props: P) => {\n  const { user } = useUser();\n\n  if (!user) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return <Component {...props} />;\n};\n\nexport default WithAuthentication;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { useUser } from '../hooks';\n\nconst WithNoAuthentication = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> => (props: P) => {\n  const { user } = useUser();\n\n  if (user) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return <Component {...props} />;\n};\n\nexport default WithNoAuthentication;\n","import './App.css';\nimport React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport Login from './pages/Login';\nimport Authenticating from './pages/Authenticating';\nimport withAuthentication from './components/WithAuthentication';\nimport withNoAuthentication from './components/WithNoAuthentication';\nimport { useUser, usePrefetch } from './hooks';\n\nfunction App() {\n  usePrefetch();\n  const { isLoading } = useUser();\n\n  if (isLoading) {\n    return <Authenticating />;\n  }\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\" component={withNoAuthentication(Login)} />\n        <Route path=\"/\" component={withAuthentication(Dashboard)} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default React.memo(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport { lightGreen } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: lightGreen,\n  },\n  typography: {\n    button: {\n      textTransform: 'none',\n    },\n  },\n});\n\nconst TeamFindrThemeProvider: React.FC = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default TeamFindrThemeProvider;\n","import 'typeface-roboto';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { SnackbarProvider } from 'notistack';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeProvider from './providers/ThemeProvider';\nimport ServicesProvider from './providers/ServicesProvider';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <CssBaseline />\n      <ThemeProvider>\n        <ServicesProvider>\n          <SnackbarProvider>\n            <App />\n            <ReactQueryDevtools initialIsOpen={false} />\n          </SnackbarProvider>\n        </ServicesProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}