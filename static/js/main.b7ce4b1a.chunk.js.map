{"version":3,"sources":["components/Navigation/navigationItems.ts","components/Navigation/MobileNavigation/MobileNavigation.styles.ts","components/Navigation/MobileNavigation/MobileNavigation.tsx","components/Avatar/Avatar.styles.ts","components/Avatar/Avatar.tsx","components/AvatarMenu/AvatarMenu.styles.ts","services/images.service.ts","services/location.service.ts","endpoints.ts","services/user.service.ts","utils/encodeQueryData.ts","services/index.ts","services/venues.service.ts","providers/ServicesProvider.tsx","hooks/location/useCurrentLocation.ts","hooks/location/useLocationAutocomplete.ts","hooks/location/useLocationFromCoordinates.ts","hooks/location/useLocationFromMapClick.ts","hooks/user/useUser.ts","hooks/user/useLogout.ts","hooks/user/useLoginViaSocialMedia.ts","hooks/user/useChangeAvatar.ts","hooks/utils/usePrefetch.ts","hooks/venues/useCreateVenue.ts","hooks/utils/useDebounce.ts","hooks/venues/useVenues.ts","hooks/venues/useVenue.ts","components/AvatarMenu/AvatarMenu.tsx","components/Navigation/DesktopNavigation/DesktopNavigation.styles.ts","components/Navigation/DesktopNavigation/DesktopNavigation.tsx","components/Navigation/Navigation.tsx","pages/Home/Home.tsx","components/Map/icons/index.ts","utils/leaflet.ts","components/Map/Map.tsx","pages/Events/Events.styles.ts","pages/Events/Events.tsx","components/LocationAutocomplete/LocationAutocomplete.tsx","components/NewVenueDialog/LocationWithMapField.tsx","components/RadiusSlider/RadiusSlider.styles.ts","components/RadiusSlider/RadiusSlider.tsx","components/Dialog/Dialog.styles.ts","components/Dialog/Dialog.tsx","components/Dialog/DialogActions.tsx","components/Dialog/DialogContent.tsx","components/NewVenueDialog/NewVenueDialogContent.tsx","components/NewVenueDialog/NewVenueDialog.tsx","pages/Venues/VenueListItem.styles.ts","pages/Venues/VenueListItem.tsx","pages/Venues/VenueList.tsx","pages/Venues/VenueMarkers.tsx","pages/Venues/Venues.styles.ts","pages/Venues/Venues.tsx","pages/Venue/Venue.tsx","pages/Settings/Profile/AvatarUploader.styles.ts","pages/Settings/Profile/AvatarUploader.tsx","pages/Settings/Profile/Profile.styles.ts","pages/Settings/Profile/Profile.tsx","pages/Settings/NotificationSettings/NotificationSettings.tsx","pages/Settings/Settings.styles.ts","pages/Settings/Settings.tsx","pages/Dashboard/Dashboard.styles.ts","pages/Dashboard/Dashboard.tsx","components/GoogleIcon.tsx","components/LoginButtons/LoginButtons.styles.ts","components/LoginButtons/LoginButtons.tsx","pages/Login/Login.styles.ts","pages/Login/Login.tsx","pages/Authenticating/Authenticating.styles.ts","pages/Authenticating/Authenticating.tsx","components/WithAuthentication.tsx","components/WithNoAuthentication.tsx","App.tsx","reportWebVitals.ts","providers/ThemeProvider.tsx","index.tsx"],"names":["NavigationItems","value","label","icon","HomeIcon","SportsSoccerIcon","LocationOnIcon","SettingsIcon","useStyles","makeStyles","navigation","position","bottom","width","MobileNavigation","selectedValue","items","classes","history","useHistory","BottomNavigation","className","onChange","event","push","map","item","BottomNavigationAction","React","memo","theme","small","spacing","height","medium","large","Avatar","firstName","lastName","avatar","size","variant","loading","fullName","Skeleton","animation","alt","src","fullHeight","itemIcon","minWidth","paddingRight","imagesService","uploadImage","file","a","fd","FormData","append","axios","post","url","data","secure_url","PHOTON_API","featureToLocation","feature","coordinates","geometry","properties","name","country","city","postcode","number","housenumber","street","baseProperties","geo","type","specificName","descriptionProperties","description","propertyName","filter","join","getLocationFromCoordinates","longitude","latitude","get","features","filterByType","restrictToType","location","locationService","getLocationFromGeolocation","Promise","resolve","reject","navigator","geolocation","code","GeolocationPositionError","POSITION_UNAVAILABLE","message","getCurrentPosition","newPosition","coords","getLocationFromIp","getLocationSuggestions","query","around","aroundQuery","encodeURIComponent","API_URL","userService","verify","withCredentials","headers","Accept","user","response","status","openIdpAuthPage","provider","window","open","logout","patchUser","id","patch","updatedUser","encodeQueryData","Object","keys","reduce","acc","key","services","images","venues","createVenue","venue","getVenues","radius","lon","lat","getVenue","ServiceContext","createContext","useServices","useContext","ServicesProvider","children","injectedServices","Provider","STALE_TIME_MS","useCurrentLocation","geoLocation","useQuery","staleTime","refetchInterval","isLoading","error","useCurrentGeoLocation","ipLocation","useCurrentIpLocation","ipLocationFinished","useLocationAutocomplete","debouncedQuery","useDebounce","useState","suggestions","setSuggestions","setLoading","useEffect","newSuggestions","performSearch","debounceOpts","leading","trailing","useLocationFromCoordinates","debouncedCoordinates","setLocation","newLocation","lookupCoordinates","useLocationFromMapClick","setCoordinates","useMapEvents","click","e","latlng","lng","useUser","cacheTime","useLogout","useLoginViaSocialMedia","useChangeAvatar","queryClient","useQueryClient","changeUserAvatar","useMutation","onSuccess","setQueryData","usePrefetch","fetchQuery","useCreateVenue","invalidateQueries","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useVenues","debouncedRadius","enabled","forEach","useVenue","AvatarMenu","anchorEl","setAnchorEl","menuItems","onClick","Icon","ExitToAppIcon","Button","currentTarget","Menu","keepMounted","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ListItemIcon","ListItemText","topBar","minHeight","titleContainer","list","padding","display","flexDirection","DesktopNavigation","AppBar","Toolbar","Grid","container","justify","alignItems","Typography","List","component","ListItem","selected","button","Link","to","Navigation","useTheme","desktopMode","useMediaQuery","breakpoints","up","useLocation","pathname","split","NavigationComponent","Home","Marker","L","iconUrl","iconSize","iconAnchor","popupAnchor","Pin","toLeaflet","MapController","useMap","locationFromClick","oldLocationFromClick","setOldLocationFromClick","setView","getZoom","Map","circleRadius","markers","leafCoordinates","style","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","PinIcon","Circle","center","pathOptions","color","fillColor","AccordionSummary","withStyles","root","content","margin","expanded","MuiAccordionSummary","accordionDetails","Events","currentLocation","Accordion","defaultExpanded","expandIcon","AccordionDetails","suggestionsForValue","find","b","coordA","coordB","geTextFieldLabel","LocationAutocomplete","disabled","required","helperText","onBlur","inputValue","setInputValue","Autocomplete","fullWidth","getOptionLabel","option","options","autoComplete","includeInputInList","filterSelectedOptions","disableClearable","noOptionsText","newValue","onInputChange","newInputValue","renderInput","params","TextField","renderOption","xs","fontWeight","LocationWithMapField","disableChangePositionViaMap","current","direction","sliderContainer","paddingLeft","valuetext","Math","round","marks","RadiusSlider","handleChange","useCallback","gutterBottom","Slider","getAriaValueText","aria-labelledby","step","min","max","dialogPaper","maxWidth","title","closeButton","right","top","palette","grey","Dialog","fullScreen","down","titleId","paper","undefined","disableBackdropClick","disableEscapeKeyDown","scroll","DialogTitle","disableTypography","IconButton","aria-label","DialogActions","actions","action","CircularProgress","DialogContent","dividers","NewVenueInitialFormValues","NewVenueDialogContent","enqueueSnackbar","useSnackbar","isSuccess","isError","initialValues","onSubmit","values","mutate","validate","errors","touched","handleBlur","handleSubmit","setFieldValue","NewVenueDialog","link","textDecoration","VenueListItem","ListItemAvatar","primary","secondary","VenueList","VenueMarkers","Popup","filtersPaper","Venues","setRadius","newVenueDialogOpen","setNewVenueDialogOpen","startIcon","md","Paper","Venue","venueId","useParams","JSON","stringify","visuallyHidden","AvatarUploader","changeAvatar","changingAvatar","inputEl","useRef","Tooltip","placement","ref","accept","files","target","avatarContainer","justifyContent","Profile","dataItems","PersonIcon","text","EmailIcon","email","alignContent","NotificationSettings","tabPanel","tabLabelContainer","tabIcon","AllTabs","Component","NotificationsIcon","Settings","match","useRouteMatch","currentTab","tab","parts","length","lastSegment","Tabs","changeTab","indicatorColor","textColor","Tab","SvgIcon","role","flex","Dashboard","path","exact","render","GoogleIcon","props","d","baseRoot","facebookRoot","backgroundColor","googleRoot","twitterRoot","FacebookLoginButton","clsx","GoogleLoginButton","TwitterLoginButton","buttonsContainer","buttonContainer","LoginButtons","authProvider","Login","loginViaSocialMedia","loginButton","Authenticating","WithAuthentication","WithNoAuthentication","App","withNoAuthentication","withAuthentication","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","lightGreen","typography","textTransform","TeamFindrThemeProvider","ThemeProvider","QueryClient","ReactDOM","StrictMode","QueryClientProvider","client","CssBaseline","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.b7ce4b1a.chunk.js","sourcesContent":["import HomeIcon from '@material-ui/icons/Home';\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst NavigationItems = [\n  {\n    value: 'home',\n    label: 'Home',\n    icon: HomeIcon,\n  },\n  {\n    value: 'events',\n    label: 'Events',\n    icon: SportsSoccerIcon,\n  },\n  {\n    value: 'venues',\n    label: 'Venues',\n    icon: LocationOnIcon,\n  },\n  {\n    value: 'settings',\n    label: 'Settings',\n    icon: SettingsIcon,\n  },\n];\n\nexport default NavigationItems;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  navigation: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport BottomNavigationBase from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './MobileNavigation.styles';\nimport NavigationProps from '../NavigationProps';\n\nconst MobileNavigation: React.FC<NavigationProps> = ({\n  selectedValue,\n  items,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleNavigationChange = (\n    event: React.ChangeEvent<{}>,\n    value: string\n  ) => {\n    history.push(`/${value}`);\n  };\n\n  return (\n    <BottomNavigationBase\n      className={classes.navigation}\n      value={selectedValue}\n      onChange={handleNavigationChange}\n    >\n      {items.map((item) => (\n        <BottomNavigationAction\n          key={item.value}\n          value={item.value}\n          label={item.label}\n          icon={<item.icon />}\n        />\n      ))}\n    </BottomNavigationBase>\n  );\n};\n\nexport default React.memo(MobileNavigation);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  medium: {\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n  },\n  large: {\n    width: theme.spacing(16),\n    height: theme.spacing(16),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport AvatarBase from '@material-ui/core/Avatar';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport useStyles from './Avatar.styles';\nimport { User } from '../../types';\n\ntype Size = 'small' | 'medium' | 'large';\ntype Variant = 'circle' | 'rounded' | 'circular' | 'square';\n\ninterface BaseProps {\n  size?: Size;\n  variant?: Variant;\n  loading?: boolean;\n}\n\ntype AvatarProps = Pick<User, 'firstName' | 'lastName' | 'avatar'> & BaseProps;\n\nconst Avatar: React.FC<AvatarProps> = ({\n  firstName,\n  lastName,\n  avatar,\n  size = 'medium',\n  variant,\n  loading = false,\n}) => {\n  const classes = useStyles();\n  const fullName = `${firstName} ${lastName}`;\n  return loading ? (\n    <Skeleton className={classes[size]} variant=\"circle\" animation=\"wave\" />\n  ) : (\n    <AvatarBase\n      variant={variant}\n      className={classes[size]}\n      alt={fullName}\n      src={avatar}\n    />\n  );\n};\n\nexport default React.memo(Avatar);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  fullHeight: {\n    height: '100%',\n  },\n  itemIcon: {\n    minWidth: 0,\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import axios from 'axios';\n\nconst imagesService = {\n  uploadImage: async (file: File): Promise<string> => {\n    const endpoint = 'https://api.cloudinary.com/v1_1/teamfindr/image/upload';\n    const preset = 'teamfindr';\n    const fd = new FormData();\n    fd.append('file', file);\n    fd.append('upload_preset', preset);\n    const {\n      data: { secure_url: url },\n    } = await axios.post(endpoint, fd);\n    return url;\n  },\n};\n\nexport default imagesService;\n","import axios from 'axios';\nimport {\n  Coordinates,\n  Locations,\n  Location,\n  LocationType,\n  GeoType,\n} from '../types';\n\nconst PHOTON_API = 'https://photon.komoot.io';\nconst GEOLOCATION_API =\n  'https://geolocation-db.com/json/85249190-4601-11eb-9067-21b51bc8dee3';\n\ntype DescriptionProperty =\n  | 'number'\n  | 'street'\n  | 'postcode'\n  | 'city'\n  | 'country';\ntype DescriptionProperties = DescriptionProperty[];\n\nconst featureToLocation = (feature: any): Location => {\n  const {\n    geometry: { coordinates },\n    properties: {\n      name,\n      country,\n      city,\n      postcode,\n      housenumber: number,\n      street,\n      type,\n    },\n  } = feature;\n  const baseProperties = {\n    geo: {\n      type: 'Point' as GeoType,\n      coordinates: coordinates,\n    },\n    country,\n    city,\n    postcode,\n    number,\n    street,\n    type,\n  };\n\n  let specificName = '';\n  let descriptionProperties: DescriptionProperties = [];\n\n  switch (feature.properties.type) {\n    case 'house':\n      if (name) {\n        descriptionProperties = [\n          'number',\n          'street',\n          'postcode',\n          'city',\n          'country',\n        ];\n      } else {\n        specificName = `${number ? `${number} ` : ''}${street}`;\n        descriptionProperties = ['postcode', 'city', 'country'];\n      }\n      break;\n    case 'street':\n      descriptionProperties = ['postcode', 'city', 'country'];\n      break;\n    case 'district':\n      descriptionProperties = ['city', 'country'];\n      break;\n    case 'city':\n    case 'county':\n      descriptionProperties = ['country'];\n      break;\n  }\n\n  return {\n    ...baseProperties,\n    name: name || specificName,\n    description: descriptionProperties\n      .map(\n        (propertyName: DescriptionProperty) =>\n          baseProperties[propertyName] as string\n      )\n      .filter((value) => !!value)\n      .join(', '),\n  };\n};\n\nconst getLocationFromCoordinates = async (\n  coordinates: Coordinates\n): Promise<Location> => {\n  const [longitude, latitude] = coordinates;\n  const { data } = await axios.get(\n    `${PHOTON_API}/reverse?lat=${latitude}&lon=${longitude}`\n  );\n  return {\n    ...featureToLocation(data.features[0]),\n    geo: {\n      type: 'Point',\n      coordinates,\n    },\n  };\n};\n\nconst getCoordinatesFromGeolocation = (): Promise<Coordinates> =>\n  new Promise((resolve, reject) => {\n    const geo = navigator.geolocation;\n    if (!geo) {\n      reject({\n        code: GeolocationPositionError.POSITION_UNAVAILABLE,\n        message: 'Geolocation not available',\n      });\n    }\n\n    const handleSuccess: PositionCallback = (newPosition) =>\n      resolve([newPosition.coords.longitude, newPosition.coords.latitude]);\n\n    geo.getCurrentPosition(handleSuccess, reject);\n  });\n\nconst getLocationFromGeolocation = async (): Promise<Location> => {\n  const coordinates = await getCoordinatesFromGeolocation();\n  return getLocationFromCoordinates(coordinates);\n};\n\nconst getLocationFromIp = async (): Promise<Location> => {\n  const {\n    data: { latitude, longitude },\n  } = await axios.get(GEOLOCATION_API);\n  return getLocationFromCoordinates([longitude, latitude]);\n};\n\nconst filterByType = (restrictToType?: LocationType) => (\n  location: Location\n) => {\n  if (!restrictToType) {\n    return true;\n  }\n\n  return location.type === restrictToType;\n};\n\nconst getLocationSuggestions = async (\n  query: string,\n  around?: Coordinates,\n  restrictToType?: LocationType\n): Promise<Locations> => {\n  if (!query) {\n    return [];\n  }\n\n  const aroundQuery = around ? `&lon=${around[0]}&lat=${around[1]}` : '';\n  const url = `${PHOTON_API}/api/?q=${encodeURIComponent(query)}${aroundQuery}`;\n\n  try {\n    const {\n      data: { features },\n    } = await axios.get(url);\n\n    return features.map(featureToLocation).filter(filterByType(restrictToType));\n  } catch (error) {\n    return [];\n  }\n};\n\nconst locationService = {\n  getLocationFromGeolocation,\n  getLocationFromIp,\n  getLocationSuggestions,\n  getLocationFromCoordinates,\n};\n\nexport default locationService;\n","export const API_URL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:5000'\n    : 'https://api.teamfindr.saltares.com';\n","import axios from 'axios';\nimport { User, AuthProvider } from '../types';\nimport { API_URL } from '../endpoints';\n\nconst userService = {\n  verify: async (): Promise<User | null> => {\n    try {\n      const {\n        data: { user },\n      } = await axios.get(`${API_URL}/auth/verify`, {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      });\n      return user;\n    } catch (error) {\n      if (error?.response?.status === 401) {\n        return null;\n      }\n      throw error;\n    }\n  },\n  openIdpAuthPage: (provider: AuthProvider) => {\n    window.open(`${API_URL}/auth/${provider}`, '_self');\n  },\n  logout: () => {\n    window.open(`${API_URL}/auth/logout`, '_self');\n  },\n  patchUser: async (id: string, user: Partial<User>): Promise<User> => {\n    const {\n      data: { user: updatedUser },\n    } = await axios.patch(\n      `${API_URL}/users/${id}`,\n      {\n        user,\n      },\n      {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      }\n    );\n    return updatedUser;\n  },\n};\n\nexport default userService;\n","const encodeQueryData = (data: any) => {\n  const queryParts: string[] = Object.keys(data).reduce(\n    (acc: string[], key: string): string[] => {\n      const value = data[key];\n      if (!key || !value) {\n        return acc;\n      }\n      return [\n        ...acc,\n        `${encodeURIComponent(key)}=${encodeURIComponent(value)}`,\n      ];\n    },\n    []\n  );\n  return queryParts.join('&');\n};\n\nexport default encodeQueryData;\n","import images from './images.service';\nimport location from './location.service';\nimport user from './user.service';\nimport venues from './venues.service';\n\nconst services = {\n  images,\n  location,\n  user,\n  venues,\n};\n\nexport default services;\n","import axios from 'axios';\nimport { API_URL } from '../endpoints';\nimport { Location, Venue } from '../types';\nimport encodeQueryData from '../utils/encodeQueryData';\n\nexport interface CreateVenueParams {\n  name: string;\n  location: Location;\n}\n\nexport interface GetVenuesParams {\n  location?: Location | null;\n  radius?: number;\n}\n\nconst venuesService = {\n  createVenue: async ({\n    name,\n    location,\n  }: CreateVenueParams): Promise<Venue> => {\n    const {\n      data: { venue },\n    } = await axios.post(\n      `${API_URL}/venues`,\n      { venue: { name, location } },\n      {\n        withCredentials: true,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': true,\n        },\n      }\n    );\n    return venue;\n  },\n  getVenues: async ({\n    location,\n    radius,\n  }: GetVenuesParams): Promise<Venue[]> => {\n    const coords = location?.geo.coordinates || [];\n    const query = encodeQueryData({\n      lon: coords[0],\n      lat: coords[1],\n      radius,\n    });\n    const {\n      data: { venues },\n    } = await axios.get(`${API_URL}/venues?${query}`, {\n      withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      },\n    });\n    return venues;\n  },\n  getVenue: async (id: string): Promise<Venue> => {\n    const {\n      data: { venue },\n    } = await axios.get(`${API_URL}/venues/${id}`, {\n      withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true,\n      },\n    });\n    return venue;\n  },\n};\n\nexport default venuesService;\n","import React, { createContext, useContext } from 'react';\nimport services from '../services';\n\ntype ServicesContextType = typeof services;\n\nconst ServiceContext = createContext<ServicesContextType>(services);\n\ninterface ServicesProviderProps {\n  services?: typeof services;\n}\n\nconst ServicesProvider: React.FC<ServicesProviderProps> = ({\n  children,\n  services: injectedServices,\n}) => {\n  return (\n    <ServiceContext.Provider value={injectedServices || services}>\n      {children}\n    </ServiceContext.Provider>\n  );\n};\n\nexport const useServices = () => useContext(ServiceContext);\n\nexport default ServicesProvider;\n","import { useQuery } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useCurrentIpLocation = () => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    'ipLocation',\n    () => services.location.getLocationFromIp(),\n    { staleTime: STALE_TIME_MS, refetchInterval: STALE_TIME_MS }\n  );\n  return {\n    isLoading,\n    error,\n    location: data || null,\n  };\n};\n\nconst useCurrentGeoLocation = () => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    'geoLocation',\n    () => services.location.getLocationFromGeolocation(),\n    { staleTime: STALE_TIME_MS, refetchInterval: STALE_TIME_MS }\n  );\n  return {\n    isLoading,\n    error,\n    location: data || null,\n  };\n};\n\nconst useCurrentLocation = () => {\n  const geoLocation = useCurrentGeoLocation();\n  const ipLocation = useCurrentIpLocation();\n\n  const ipLocationFinished = !!ipLocation.location || !!ipLocation.error;\n  const geoError = !!geoLocation.error;\n  const validIp = ipLocationFinished && !!ipLocation;\n\n  if (geoError && validIp) {\n    return ipLocation;\n  }\n\n  return geoLocation;\n};\n\nexport default useCurrentLocation;\n","import { useState, useEffect } from 'react';\nimport { useDebounce } from 'use-lodash-debounce';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { Coordinates, Locations, LocationType } from '../../types';\n\ninterface UseLocationTypeArgs {\n  query: string;\n  around?: Coordinates;\n  restrictToType?: LocationType;\n}\n\nconst useLocationAutocomplete = ({\n  query,\n  around,\n  restrictToType,\n}: UseLocationTypeArgs) => {\n  const services = useServices();\n  const debouncedQuery = useDebounce(query, 200);\n  const [suggestions, setSuggestions] = useState<Locations>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const performSearch = async () => {\n      setLoading(true);\n      const newSuggestions = await services.location.getLocationSuggestions(\n        debouncedQuery,\n        around,\n        restrictToType\n      );\n      if (newSuggestions) {\n        setSuggestions(newSuggestions);\n      }\n      setLoading(false);\n    };\n    performSearch();\n  }, [\n    debouncedQuery,\n    setSuggestions,\n    setLoading,\n    services,\n    around,\n    restrictToType,\n  ]);\n\n  return { suggestions, loading };\n};\n\nexport default useLocationAutocomplete;\n","import { useEffect, useState } from 'react';\nimport { useDebounce } from 'use-lodash-debounce';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { Coordinates, Location } from '../../types';\n\nconst debounceTimeMs = 200;\nconst debounceOpts = {\n  leading: true,\n  trailing: true,\n};\n\nconst useLocationFromCoordinates = (coordinates: Coordinates | null) => {\n  const debouncedCoordinates = useDebounce(\n    coordinates,\n    debounceTimeMs,\n    debounceOpts\n  );\n  const [location, setLocation] = useState<Location | null>(null);\n  const services = useServices();\n\n  useEffect(() => {\n    const lookupCoordinates = async () => {\n      if (!debouncedCoordinates) {\n        return;\n      }\n      try {\n        const newLocation = await services.location.getLocationFromCoordinates(\n          debouncedCoordinates\n        );\n        setLocation(newLocation);\n      } catch (e) {}\n    };\n    lookupCoordinates();\n  }, [debouncedCoordinates, services, setLocation]);\n\n  return location;\n};\n\nexport default useLocationFromCoordinates;\n","import { useState } from 'react';\nimport { useMapEvents } from 'react-leaflet';\nimport { Coordinates } from '../../types';\nimport useLocationFromCoordinates from './useLocationFromCoordinates';\n\nconst useLocationFromMapClick = () => {\n  const [coordinates, setCoordinates] = useState<Coordinates | null>(null);\n  const location = useLocationFromCoordinates(coordinates);\n\n  useMapEvents({\n    click: (e) => {\n      setCoordinates([e.latlng.lng, e.latlng.lat]);\n    },\n  });\n\n  return location;\n};\n\nexport default useLocationFromMapClick;\n","import { useQuery } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useUser = () => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    'user',\n    () => services.user.verify(),\n    {\n      staleTime: STALE_TIME_MS,\n      cacheTime: STALE_TIME_MS,\n    }\n  );\n  return {\n    isLoading,\n    error,\n    user: data,\n  };\n};\n\nexport default useUser;\n","import { useServices } from '../../providers/ServicesProvider';\n\nconst useLogout = () => {\n  const services = useServices();\n  return services.user.logout;\n};\n\nexport default useLogout;\n","import { useServices } from '../../providers/ServicesProvider';\n\nconst useLoginViaSocialMedia = () => {\n  const services = useServices();\n  return services.user.openIdpAuthPage;\n};\n\nexport default useLoginViaSocialMedia;\n","import { useMutation, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { User } from '../../types';\nimport useUser from './useUser';\n\nconst useChangeAvatar = () => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const user = useUser().user as User;\n  const changeUserAvatar = async (file: File) => {\n    const url = await services.images.uploadImage(file);\n    return services.user.patchUser(user.id, { avatar: url });\n  };\n  const mutation = useMutation(changeUserAvatar, {\n    onSuccess: (data) => {\n      queryClient.setQueryData('user', data);\n    },\n  });\n  return mutation;\n};\n\nexport default useChangeAvatar;\n","import { useEffect } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst usePrefetch = () => {\n  const services = useServices();\n  const queryClient = useQueryClient();\n  useEffect(() => {\n    queryClient.fetchQuery('user', services.user.verify);\n    queryClient.fetchQuery('ipLocation', services.location.getLocationFromIp);\n    queryClient.fetchQuery(\n      'geoLocation',\n      services.location.getLocationFromGeolocation\n    );\n  }, [queryClient, services]);\n};\n\nexport default usePrefetch;\n","import { useMutation, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst useCreateVenue = () => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const mutation = useMutation(services.venues.createVenue, {\n    onSuccess: (data) => {\n      queryClient.invalidateQueries('venues');\n      queryClient.setQueryData(`venues/${data.id}`, data);\n    },\n  });\n  return mutation;\n};\n\nexport default useCreateVenue;\n","import { useState, useEffect } from 'react';\n\nconst useDebounce = <T>(value: T, delay: number = 500) => {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler: NodeJS.Timeout = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useQuery, useQueryClient } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\nimport { Location } from '../../types';\nimport useDebounce from '../utils/useDebounce';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useVenues = (location: Location | null, radius: number) => {\n  const queryClient = useQueryClient();\n  const services = useServices();\n  const debouncedRadius = useDebounce(radius, 200);\n  const { isLoading, error, data } = useQuery(\n    ['venues', [location?.geo.coordinates, debouncedRadius]],\n    () => services.venues.getVenues({ location, radius: debouncedRadius }),\n    {\n      staleTime: STALE_TIME_MS,\n      enabled: !!location,\n      onSuccess: (venues) => {\n        venues.forEach((venue) => {\n          queryClient.setQueryData(`venues/${venue.id}`, venue);\n        });\n      },\n    }\n  );\n  return {\n    isLoading,\n    error,\n    venues: data,\n  };\n};\n\nexport default useVenues;\n","import { useQuery } from 'react-query';\nimport { useServices } from '../../providers/ServicesProvider';\n\nconst STALE_TIME_MS = 12 * 60 * 60 * 1000; // 12h\n\nconst useVenue = (id: string) => {\n  const services = useServices();\n  const { isLoading, error, data } = useQuery(\n    `venues/${id}`,\n    () => services.venues.getVenue(id),\n    {\n      staleTime: STALE_TIME_MS,\n    }\n  );\n  return {\n    isLoading,\n    error,\n    venue: data,\n  };\n};\n\nexport default useVenue;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Avatar from '../Avatar';\nimport useStyles from './AvatarMenu.styles';\nimport { useUser, useLogout } from '../../hooks';\nimport { User } from '../../types';\n\nconst AvatarMenu = () => {\n  const user = useUser().user as User;\n  const logout = useLogout();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  const classes = useStyles();\n\n  const menuItems = [\n    {\n      key: 'logout',\n      label: 'Log out',\n      onClick: handleLogout,\n      Icon: ExitToAppIcon,\n    },\n  ];\n\n  return (\n    <>\n      <Button className={classes.fullHeight} onClick={handleClick}>\n        <Avatar avatar={user.avatar} />\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        {menuItems.map((item) => (\n          <MenuItem key={item.key} onClick={item.onClick}>\n            <ListItemIcon className={classes.itemIcon}>\n              <item.Icon />\n            </ListItemIcon>\n            <ListItemText>{item.label}</ListItemText>\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default React.memo(AvatarMenu);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  topBar: {\n    minHeight: 'auto',\n    height: 64,\n  },\n  fullHeight: {\n    height: '100%',\n  },\n  titleContainer: {\n    paddingRight: theme.spacing(6),\n  },\n  list: {\n    padding: 0,\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100%',\n  },\n  item: {\n    height: '100%',\n  },\n  icon: {\n    minWidth: 0,\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport AvatarMenu from '../../AvatarMenu/AvatarMenu';\nimport useStyles from './DesktopNavigation.styles';\nimport NavigationProps from '../NavigationProps';\n\nconst DesktopNavigation: React.FC<NavigationProps> = ({\n  selectedValue,\n  items,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.topBar} position=\"static\">\n      <Toolbar>\n        <Grid\n          container\n          className={classes.fullHeight}\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item className={classes.fullHeight}>\n            <Grid container className={classes.fullHeight} alignItems=\"center\">\n              <Grid item className={classes.titleContainer}>\n                <Typography variant=\"h5\">TeamFindr</Typography>\n              </Grid>\n              <Grid item className={classes.fullHeight}>\n                <List className={classes.list} component=\"nav\">\n                  {items.map((item) => (\n                    <ListItem\n                      key={item.value}\n                      className={classes.item}\n                      selected={item.value === selectedValue}\n                      button\n                      component={Link}\n                      to={`/${item.value}`}\n                    >\n                      <ListItemIcon className={classes.icon}>\n                        <item.icon />\n                      </ListItemIcon>\n                      <ListItemText>{item.label}</ListItemText>\n                    </ListItem>\n                  ))}\n                </List>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item className={classes.fullHeight}>\n            <AvatarMenu />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default React.memo(DesktopNavigation);\n","import React from 'react';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useLocation } from 'react-router-dom';\n\nimport NavigationItems from './navigationItems';\nimport MobileNavigation from './MobileNavigation';\nimport DesktopNavigation from './DesktopNavigation';\n\nconst Navigation = () => {\n  const theme = useTheme();\n  const desktopMode = useMediaQuery(theme.breakpoints.up('md'));\n  const location = useLocation();\n  const value = location.pathname.split('/')[1];\n\n  const NavigationComponent = desktopMode\n    ? DesktopNavigation\n    : MobileNavigation;\n  return <NavigationComponent selectedValue={value} items={NavigationItems} />;\n};\n\nexport default React.memo(Navigation);\n","const Home = () => <div>Home</div>;\n\nexport default Home;\n","import L from 'leaflet';\n\nexport const Marker = L.icon({\n  iconUrl: '/icons/marker.svg',\n  iconSize: [38, 95],\n  iconAnchor: [19, 60],\n  popupAnchor: [0, -20],\n});\n\nexport const Pin = L.icon({\n  iconUrl: '/icons/pin.svg',\n  iconSize: [38, 95],\n  iconAnchor: [19, 60],\n  popupAnchor: [0, -15],\n});\n","import { Coordinates } from '../types';\n\nexport const toLeaflet = (coordinates: Coordinates): Coordinates => [\n  coordinates[1],\n  coordinates[0],\n];\n","import React, { useState, useEffect } from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { MapContainer, TileLayer, Marker, Circle, useMap } from 'react-leaflet';\nimport { Pin as PinIcon } from './icons';\nimport { Location } from '../../types';\nimport { toLeaflet } from '../../utils/leaflet';\nimport { useLocationFromMapClick } from '../../hooks';\n\ninterface MapControllerProps {\n  onChange?: (location: Location) => void;\n  location: Location;\n}\n\nconst MapController: React.FC<MapControllerProps> = ({\n  onChange,\n  location,\n}) => {\n  const map = useMap();\n  const locationFromClick = useLocationFromMapClick();\n  const [\n    oldLocationFromClick,\n    setOldLocationFromClick,\n  ] = useState<Location | null>(null);\n\n  const coordinates = location.geo.coordinates;\n\n  useEffect(() => {\n    if (\n      onChange &&\n      locationFromClick &&\n      locationFromClick !== oldLocationFromClick\n    ) {\n      onChange(locationFromClick);\n      setOldLocationFromClick(locationFromClick);\n    }\n  }, [\n    locationFromClick,\n    onChange,\n    oldLocationFromClick,\n    setOldLocationFromClick,\n  ]);\n\n  useEffect(() => {\n    map.setView(toLeaflet(coordinates), map.getZoom());\n  }, [map, coordinates]);\n\n  return null;\n};\n\ninterface MapProps {\n  location: Location | null;\n  onChange?: (location: Location | null) => void;\n  circleRadius?: number;\n  markers?: React.ReactNode;\n}\n\nconst Map: React.FC<MapProps> = ({\n  location,\n  onChange,\n  circleRadius,\n  markers,\n}) => {\n  if (!location) {\n    return <Skeleton width=\"100%\" height={310} variant=\"rect\" />;\n  }\n\n  const coordinates = location.geo.coordinates;\n  const leafCoordinates = toLeaflet(coordinates);\n\n  return (\n    <div style={{ width: '100%' }}>\n      <MapContainer zoom={12} scrollWheelZoom={true}>\n        <MapController location={location} onChange={onChange} />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={leafCoordinates} icon={PinIcon} />\n        {circleRadius && (\n          <Circle\n            center={leafCoordinates}\n            pathOptions={{ color: 'green', fillColor: 'green' }}\n            radius={circleRadius}\n          />\n        )}\n        {!!markers && markers}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default React.memo(Map);\n","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\n\nexport const AccordionSummary = withStyles({\n  root: {\n    minHeight: 0,\n    '&$expanded': {\n      minHeight: 0,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary);\n\nconst useStyles = makeStyles(() => ({\n  accordionDetails: {\n    padding: 0,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport Map from '../../components/Map';\nimport useStyles, { AccordionSummary } from './Events.styles';\nimport { useCurrentLocation } from '../../hooks';\n\nconst Events = () => {\n  const currentLocation = useCurrentLocation();\n  const classes = useStyles();\n\n  return (\n    <div style={{ width: '100%' }}>\n      <Accordion defaultExpanded>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>Map</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.accordionDetails}>\n          <Map location={currentLocation.location} />\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default React.memo(Events);\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { useLocationAutocomplete } from '../../hooks';\nimport { Coordinates, Location, Locations, LocationType } from '../../types';\n\ninterface LocationAutocompleteProps {\n  value: Location | null;\n  around?: Coordinates;\n  onChange: (value: Location | null) => void;\n  disabled?: boolean;\n  required?: boolean;\n  restrictToType?: LocationType;\n  name?: string;\n  error?: boolean;\n  helperText?: string | false;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nconst byCoordinates = (a: Location) => (b: Location) => {\n  const {\n    geo: { coordinates: coordA },\n  } = a;\n  const {\n    geo: { coordinates: coordB },\n  } = b;\n  return coordA[0] === coordB[0] && coordA[1] === coordB[1];\n};\n\nconst suggestionsForValue = (\n  value: Location | null,\n  suggestions: Locations\n): Locations => {\n  if (!value) {\n    return suggestions;\n  }\n\n  const suggestion = suggestions.find(byCoordinates(value));\n  if (!suggestion) {\n    return [value, ...suggestions];\n  }\n\n  return suggestions;\n};\n\nconst getOptionLabel = (option: Location, restrictToType?: LocationType) =>\n  restrictToType\n    ? option[restrictToType] || (option.name as string)\n    : option.name;\n\nconst geTextFieldLabel = (restrictToType?: LocationType) =>\n  `Enter a ${restrictToType || 'location'}`;\n\nconst LocationAutocomplete: React.FC<LocationAutocompleteProps> = ({\n  value,\n  around,\n  onChange,\n  disabled = false,\n  required = false,\n  restrictToType,\n  name,\n  error = false,\n  helperText,\n  onBlur,\n}) => {\n  const [inputValue, setInputValue] = useState<string>('');\n  const { suggestions, loading } = useLocationAutocomplete({\n    query: inputValue,\n    around,\n    restrictToType,\n  });\n\n  return (\n    <Autocomplete\n      fullWidth\n      disabled={disabled}\n      getOptionLabel={(option) => getOptionLabel(option, restrictToType)}\n      options={suggestionsForValue(value, suggestions)}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      disableClearable={true}\n      value={value as Location}\n      loading={loading}\n      noOptionsText={'No results'}\n      onChange={(event, newValue) => {\n        onChange(newValue);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          name={name}\n          label={geTextFieldLabel(restrictToType)}\n          variant=\"outlined\"\n          fullWidth\n          required={required}\n          error={error}\n          helperText={helperText}\n          onBlur={onBlur}\n        />\n      )}\n      renderOption={(option) => (\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <LocationOnIcon />\n          </Grid>\n          <Grid item xs>\n            <span style={{ fontWeight: 700 }}>{option.name}</span>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {option.description || ''}\n            </Typography>\n          </Grid>\n        </Grid>\n      )}\n    />\n  );\n};\n\nexport default React.memo(LocationAutocomplete);\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Coordinates, Location, LocationType } from '../../types';\nimport LocationAutocomplete from '../LocationAutocomplete';\nimport Map from '../Map';\nimport { useCurrentLocation } from '../../hooks';\n\ninterface LocationFieldProps {\n  location: Location | null;\n  around?: Coordinates;\n  onChange: (location: Location | null) => void;\n  disabled?: boolean;\n  name?: string;\n  error?: boolean;\n  helperText?: string | false;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  disableChangePositionViaMap?: boolean;\n  restrictToType?: LocationType;\n  circleRadius?: number;\n  markers?: React.ReactNode;\n}\n\nconst LocationWithMapField: React.FC<LocationFieldProps> = ({\n  location,\n  onChange,\n  disabled = false,\n  name,\n  error = false,\n  helperText,\n  onBlur,\n  disableChangePositionViaMap,\n  restrictToType,\n  circleRadius,\n  markers,\n}) => {\n  const { location: current } = useCurrentLocation();\n  useEffect(() => {\n    if (!location && current) {\n      onChange(current);\n    }\n  }, [current, onChange, location]);\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item>\n        <LocationAutocomplete\n          name={name}\n          value={location}\n          onChange={onChange}\n          disabled={disabled || disableChangePositionViaMap}\n          required\n          around={current?.geo.coordinates}\n          error={error}\n          helperText={helperText}\n          onBlur={onBlur}\n          restrictToType={restrictToType}\n        />\n      </Grid>\n      <Grid item>\n        <Map\n          location={location}\n          onChange={onChange}\n          circleRadius={circleRadius}\n          markers={markers}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(LocationWithMapField);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  sliderContainer: {\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import React, { useCallback } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport useStyles from './RadiusSlider.styles';\n\ninterface RadiusSliderProps {\n  id: string;\n  value: number;\n  onChange: (e: React.ChangeEvent<{}>, value: number) => void;\n  name?: string;\n}\n\nfunction valuetext(value: number) {\n  return `${Math.round(value / 1000)}km`;\n}\n\nconst marks = [\n  {\n    value: 1000,\n    label: '1km',\n  },\n  {\n    value: 5000,\n    label: '5km',\n  },\n  {\n    value: 10000,\n    label: '10km',\n  },\n  {\n    value: 20000,\n    label: '20km',\n  },\n  {\n    value: 30000,\n    label: '30km',\n  },\n];\n\nconst RadiusSlider: React.FC<RadiusSliderProps> = ({\n  id,\n  value,\n  onChange,\n  name,\n}) => {\n  const classes = useStyles();\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<{}>, value: number | number[]) => {\n      onChange(e, value as number);\n    },\n    [onChange]\n  );\n  return (\n    <div className={classes.root}>\n      <Typography id={id} gutterBottom>\n        Radius: {`${valuetext(value)}`}\n      </Typography>\n      <div className={classes.sliderContainer}>\n        <Slider\n          getAriaValueText={valuetext}\n          aria-labelledby={id}\n          step={1000}\n          marks={marks}\n          min={1000}\n          max={30000}\n          name={name}\n          value={value}\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(RadiusSlider);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    minWidth: 500,\n    maxWidth: 900,\n  },\n  title: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport DialogBase from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\nimport useStyles from './Dialog.styles';\n\ninterface DialogProps {\n  id: string;\n  open: boolean;\n  onClose: () => void;\n  title: string;\n  loading?: boolean;\n  children: React.ReactNode;\n}\n\nconst Dialog: React.FC<DialogProps> = ({\n  id,\n  open,\n  onClose,\n  title,\n  children,\n  loading = false,\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const titleId = `${id}-title`;\n  const classes = useStyles();\n\n  return (\n    <DialogBase\n      classes={{\n        paper: !fullScreen ? classes.dialogPaper : undefined,\n      }}\n      fullScreen={fullScreen}\n      disableBackdropClick={loading}\n      disableEscapeKeyDown={loading}\n      onClose={onClose}\n      aria-labelledby={titleId}\n      open={open}\n      scroll=\"paper\"\n    >\n      <DialogTitle id={titleId} className={classes.title} disableTypography>\n        <Typography variant=\"h6\">{title}</Typography>\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      {open && children}\n    </DialogBase>\n  );\n};\n\nexport default React.memo(Dialog);\n","import React from 'react';\nimport DialogActionsBase from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\ninterface Action {\n  key: string;\n  label: string;\n  disabled?: boolean;\n  loading?: boolean;\n  onClick?: () => void;\n  type?: 'submit';\n}\n\ninterface DialogActionProps {\n  actions: Action[];\n  loading?: boolean;\n}\n\nconst DialogActions: React.FC<DialogActionProps> = ({\n  actions,\n  loading = false,\n}) => (\n  <DialogActionsBase>\n    {actions.map((action) => (\n      <Button\n        key={action.key}\n        type={action.type}\n        onClick={action.onClick}\n        color=\"primary\"\n        disabled={action.disabled || loading}\n      >\n        {action.loading ? (\n          <CircularProgress size={24} color=\"primary\" />\n        ) : (\n          action.label\n        )}\n      </Button>\n    ))}\n  </DialogActionsBase>\n);\n\nexport default React.memo(DialogActions);\n","import React from 'react';\nimport DialogContentBase from '@material-ui/core/DialogContent';\n\ninterface DialogContentProps {\n  children: React.ReactNode;\n}\n\nconst DialogContent: React.FC<DialogContentProps> = ({ children }) => (\n  <DialogContentBase dividers>{children}</DialogContentBase>\n);\n\nexport default React.memo(DialogContent);\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { DialogContent, DialogActions } from '../Dialog';\nimport LocationWithMapField from './LocationWithMapField';\nimport { useCreateVenue } from '../../hooks';\nimport { Location } from '../../types';\n\ninterface NewVenueFormValues {\n  name: string;\n  location: Location | null;\n}\nconst NewVenueInitialFormValues: NewVenueFormValues = {\n  name: '',\n  location: null,\n};\n\ninterface NewVenueDialogContentProps {\n  onClose: () => void;\n}\n\nconst NewVenueDialogContent: React.FC<NewVenueDialogContentProps> = ({\n  onClose,\n}) => {\n  const createVenue = useCreateVenue();\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (createVenue.isSuccess) {\n      onClose();\n      enqueueSnackbar('Venue created', { variant: 'success' });\n    }\n    if (createVenue.isError) {\n      enqueueSnackbar('Failed to create venue', { variant: 'error' });\n    }\n  }, [enqueueSnackbar, createVenue.isSuccess, createVenue.isError, onClose]);\n\n  return (\n    <Formik\n      initialValues={NewVenueInitialFormValues}\n      onSubmit={(values) => {\n        createVenue.mutate({\n          name: values.name,\n          location: values.location as Location,\n        });\n      }}\n      validate={(values) => {\n        const errors: any = {};\n        if (!values.name) {\n          errors.name = 'Required';\n        }\n        if (!values.location) {\n          errors.location = 'Required';\n        }\n        return errors;\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <TextField\n                  required\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  name=\"name\"\n                  value={values.name}\n                  fullWidth\n                  onChange={handleChange}\n                  error={touched.name && !!errors.name}\n                  helperText={touched.name && errors.name}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n              <Grid item>\n                <LocationWithMapField\n                  name=\"location\"\n                  location={values.location}\n                  error={touched.location && !!errors.location}\n                  helperText={touched.location && errors.location}\n                  onBlur={handleBlur}\n                  onChange={(newLocation) =>\n                    setFieldValue('location', newLocation)\n                  }\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions\n            actions={[\n              {\n                key: 'create',\n                label: 'Create',\n                loading: createVenue.isLoading,\n                type: 'submit',\n              },\n            ]}\n          />\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewVenueDialogContent;\n","import React from 'react';\nimport Dialog from '../Dialog';\nimport NewVenueDialogContent from './NewVenueDialogContent';\n\ninterface NewVenueDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NewVenueDialog: React.FC<NewVenueDialogProps> = ({ open, onClose }) => (\n  <Dialog id=\"new-venue-dialog\" title=\"New venue\" open={open} onClose={onClose}>\n    <NewVenueDialogContent onClose={onClose} />\n  </Dialog>\n);\n\nexport default React.memo(NewVenueDialog);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    display: 'flex',\n    alignItems: 'center',\n    textDecoration: 'none',\n    '&:focus, &:hover, &:visited, &:link, &:active': {\n      textDecoration: 'none',\n      color: 'inherit',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport { Venue } from '../../types';\nimport { Link } from 'react-router-dom';\nimport useStyles from './VenueListItem.styles';\n\ninterface VenueListItemProps {\n  venue: Venue;\n}\n\nconst VenueListItem: React.FC<VenueListItemProps> = ({ venue }) => {\n  const classes = useStyles();\n  return (\n    <ListItem button component=\"li\">\n      <Link className={classes.link} to={`/venues/${venue.id}`}>\n        <ListItemAvatar>\n          <Avatar>\n            <ImageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={venue.name}\n          secondary={`${venue.location.name} ${venue.location.description}`}\n        />\n      </Link>\n    </ListItem>\n  );\n};\n\nexport default React.memo(VenueListItem);\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport VenueListItem from './VenueListItem';\nimport { Venue } from '../../types';\n\ninterface VenueListProps {\n  venues: Venue[];\n}\n\nconst VenueList: React.FC<VenueListProps> = ({ venues }) => {\n  return (\n    <List>\n      {venues.map((venue) => (\n        <VenueListItem key={venue.id} venue={venue} />\n      ))}\n    </List>\n  );\n};\n\nexport default React.memo(VenueList);\n","import React from 'react';\nimport { Marker, Popup } from 'react-leaflet';\nimport { Link } from 'react-router-dom';\nimport { Marker as PinIcon } from '../../components/Map/icons';\nimport { Venue } from '../../types';\nimport { toLeaflet } from '../../utils/leaflet';\n\ninterface VenueMarkersProps {\n  venues?: Venue[];\n}\n\nconst VenueMarkers: React.FC<VenueMarkersProps> = ({ venues = [] }) => {\n  return (\n    <>\n      {venues.map((venue) => (\n        <Marker\n          key={venue.id}\n          position={toLeaflet(venue.location.geo.coordinates)}\n          icon={PinIcon}\n        >\n          <Popup>\n            <Link to={`/venues/${venue.id}`}>{venue.name}</Link>\n          </Popup>\n        </Marker>\n      ))}\n    </>\n  );\n};\n\nexport default React.memo(VenueMarkers);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  filtersPaper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport LocationWithMapField from '../../components/NewVenueDialog/LocationWithMapField';\nimport RadiusSlider from '../../components/RadiusSlider';\nimport NewVenueDialog from '../../components/NewVenueDialog';\nimport { Location } from '../../types';\nimport { useCurrentLocation, useVenues } from '../../hooks';\nimport VenueList from './VenueList';\nimport VenueMarkers from './VenueMarkers';\nimport useStyles from './Venues.styles';\n\nconst Venues = () => {\n  const [location, setLocation] = useState<Location | null>(null);\n  const [radius, setRadius] = useState<number>(5000);\n  const { venues } = useVenues(location, radius);\n  const currentLocation = useCurrentLocation();\n  const [newVenueDialogOpen, setNewVenueDialogOpen] = useState(false);\n  const handleNewVenueDialogClose = () => setNewVenueDialogOpen(false);\n  const handleNewVenueDialogOpen = () => setNewVenueDialogOpen(true);\n\n  const handleRadiusChange = (e: React.ChangeEvent<{}>, value: number) =>\n    setRadius(value);\n\n  useEffect(() => {\n    if (currentLocation.location && !location) {\n      setLocation(currentLocation.location);\n    }\n  }, [currentLocation, location]);\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item>\n        <Grid container justify=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h4\">Venues</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              startIcon={<AddIcon />}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleNewVenueDialogOpen}\n            >\n              New venue\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Paper className={classes.filtersPaper}>\n              <Grid container direction=\"column\" spacing={2}>\n                <Grid item>\n                  <LocationWithMapField\n                    location={location}\n                    onChange={setLocation}\n                    disabled={currentLocation.isLoading}\n                    around={currentLocation.location?.geo.coordinates}\n                    circleRadius={radius}\n                    markers={<VenueMarkers venues={venues} />}\n                  />\n                </Grid>\n                <Grid item>\n                  <RadiusSlider\n                    id=\"venue-search-radius\"\n                    value={radius}\n                    onChange={handleRadiusChange}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            {!venues ? (\n              <Skeleton width=\"100%\" height=\"100%\" variant=\"rect\" />\n            ) : (\n              <Paper style={{ height: '100%' }}>\n                {/* {venues && (\n              <AutoSizer>\n                {({ height }) => {\n                  console.log('height', height);\n                  return (\n                    <Scrollbars autoHide height={height}>\n                      <VenueList venues={venues} />\n                    </Scrollbars>\n                  );\n                }}\n              </AutoSizer>\n            )} */}\n                {venues && <VenueList venues={venues} />}\n              </Paper>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n      <NewVenueDialog\n        open={newVenueDialogOpen}\n        onClose={handleNewVenueDialogClose}\n      />\n    </Grid>\n  );\n};\n\nexport default React.memo(Venues);\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { useVenue } from '../../hooks';\n\ninterface VenueRouteParams {\n  venueId: string;\n}\n\nconst Venue = () => {\n  const { venueId } = useParams<VenueRouteParams>();\n  const { isLoading, error, venue } = useVenue(venueId);\n\n  return <div>{JSON.stringify({ isLoading, error, venue }, null, 2)}</div>;\n};\n\nexport default React.memo(Venue);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  visuallyHidden: {\n    display: 'none',\n  },\n}));\n\nexport default useStyles;\n","import React, { useRef } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '../../../components/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useStyles from './AvatarUploader.styles';\nimport { useUser, useChangeAvatar } from '../../../hooks';\nimport { User } from '../../../types';\n\nconst AvatarUploader = () => {\n  const classes = useStyles();\n  const user = useUser().user as User;\n  const { mutate: changeAvatar, isLoading: changingAvatar } = useChangeAvatar();\n  const inputEl = useRef<HTMLInputElement>(null);\n  const handleAvatarClicked = () => {\n    const current = inputEl?.current;\n    if (current) {\n      current.click();\n    }\n  };\n  const handleSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files as FileList;\n    changeAvatar(files[0]);\n  };\n\n  return (\n    <>\n      <Tooltip\n        title=\"Change avatar\"\n        aria-label=\"change avatar\"\n        placement=\"right\"\n      >\n        <IconButton onClick={handleAvatarClicked} disabled={changingAvatar}>\n          <Avatar\n            firstName={user.firstName}\n            lastName={user.lastName}\n            avatar={user.avatar}\n            size=\"large\"\n            variant=\"circular\"\n            loading={changingAvatar}\n          />\n        </IconButton>\n      </Tooltip>\n      <input\n        ref={inputEl}\n        className={classes.visuallyHidden}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleSelectFile}\n      />\n    </>\n  );\n};\n\nexport default React.memo(AvatarUploader);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  avatarContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AvatarUploader from './AvatarUploader';\nimport useStyles from './Profile.styles';\nimport { useUser } from '../../../hooks';\nimport { User } from '../../../types';\n\nconst Profile = () => {\n  const classes = useStyles();\n  const user = useUser().user as User;\n\n  const dataItems = [\n    {\n      key: 'name',\n      Icon: PersonIcon,\n      text: `${user?.firstName} ${user?.lastName}`,\n    },\n    {\n      key: 'email',\n      Icon: EmailIcon,\n      text: user.email,\n    },\n  ];\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      spacing={4}\n      justify=\"center\"\n      alignContent=\"center\"\n    >\n      <Grid item>\n        <div className={classes.avatarContainer}>\n          <AvatarUploader />\n        </div>\n      </Grid>\n      <Grid item>\n        <Grid\n          container\n          direction=\"column\"\n          spacing={2}\n          justify=\"center\"\n          alignContent=\"center\"\n        >\n          {dataItems.map((item) => (\n            <Grid key={item.key} item>\n              <Grid container direction=\"row\" spacing={2}>\n                <Grid item>\n                  <item.Icon color=\"primary\" />\n                </Grid>\n                <Grid item>\n                  <Typography>{item.text}</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(Profile);\n","const NotificationSettings = () => <div>NotificationSettings</div>;\n\nexport default NotificationSettings;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n  tabPanel: {\n    padding: theme.spacing(3),\n  },\n  tabLabelContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  tabIcon: {\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {\n  Link,\n  Redirect,\n  useHistory,\n  useLocation,\n  useRouteMatch,\n} from 'react-router-dom';\nimport Profile from './Profile';\nimport NotificationSettings from './NotificationSettings';\nimport useStyles from './Settings.styles';\n\nconst tabAllyProps = (key: string) => ({\n  id: `settings-tab-${key}`,\n  'aria-controls': `settings-tabpanel-${key}`,\n});\n\nconst tabPanelAllyProps = (key: string) => ({\n  role: 'tabpanel',\n  id: `settings-tabpanel-${key}`,\n  'aria-labelledby': `settings-tab-${key}`,\n});\n\ninterface SettingsTab {\n  value: string;\n  label: string;\n  Icon: React.ComponentType;\n  Component: React.ComponentType;\n  disabled?: boolean;\n}\n\nconst AllTabs: SettingsTab[] = [\n  {\n    value: 'profile',\n    label: 'Profile',\n    Icon: PersonIcon,\n    Component: Profile,\n  },\n  {\n    value: 'notifications',\n    label: 'Notifications',\n    Icon: NotificationsIcon,\n    Component: NotificationSettings,\n    // disabled: true,\n  },\n];\n\nconst lastSegment = (pathname: string) => {\n  const parts = pathname.split('/');\n  return parts[parts.length - 1];\n};\n\nconst Settings = () => {\n  const history = useHistory();\n  const match = useRouteMatch();\n  const location = useLocation();\n  const classes = useStyles();\n  const currentTab = AllTabs.find(\n    (tab) => tab.value === lastSegment(location.pathname)\n  ) as SettingsTab;\n\n  const changeTab = (value: string) => {\n    if (value !== currentTab.value) {\n      history.push(`${match.url}/${value}`);\n    }\n  };\n\n  const handleChangeTab = (event: React.ChangeEvent<{}>, value: string) => {\n    changeTab(value);\n  };\n\n  const isRootPath = match.url === location.pathname;\n  if (isRootPath) {\n    return <Redirect to={`${match.url}/profile`} />;\n  }\n\n  return (\n    <div className={classes.container}>\n      <Tabs\n        value={currentTab.value}\n        onChange={handleChangeTab}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n      >\n        {AllTabs.map((tab) => (\n          <Tab\n            key={tab.value}\n            value={tab.value}\n            component={Link}\n            to={`${match.url}/${tab.value}`}\n            label={\n              <div className={classes.tabLabelContainer}>\n                <SvgIcon className={classes.tabIcon}>\n                  <tab.Icon />\n                </SvgIcon>\n                {tab.label}\n              </div>\n            }\n            disabled={tab.disabled}\n            {...tabAllyProps(tab.value)}\n          />\n        ))}\n      </Tabs>\n      <div\n        className={classes.tabPanel}\n        {...tabPanelAllyProps(currentTab.value)}\n      >\n        <currentTab.Component />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Settings);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  content: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    maxWidth: '900px',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport Navigation from '../../components/Navigation';\nimport Home from '../Home';\nimport Events from '../Events';\nimport Venues from '../Venues';\nimport Venue from '../Venue';\nimport Settings from '../Settings';\nimport useStyles from './Dashboard.styles';\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Navigation />\n      <div className={classes.root}>\n        <main className={classes.content}>\n          <Switch>\n            <Route path=\"/\" exact render={() => <Redirect to=\"/home\" />} />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/events\" component={Events} />\n            <Route path=\"/venues\" exact component={Venues} />\n            <Route path=\"/venues/:venueId\" component={Venue} />\n            <Route path=\"/settings\" component={Settings} />\n          </Switch>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Dashboard);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst GoogleIcon: React.FC = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\" />\n  </SvgIcon>\n);\n\nexport default GoogleIcon;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  baseRoot: {\n    color: 'white',\n    justifyContent: 'flex-start',\n  },\n  facebookRoot: {\n    backgroundColor: '#4267B2',\n    '&:hover': {\n      backgroundColor: '#2e487c',\n    },\n  },\n  googleRoot: {\n    backgroundColor: '#DB4437',\n    '&:hover': {\n      backgroundColor: '#a2271d',\n    },\n  },\n  twitterRoot: {\n    backgroundColor: '#1DA1F2',\n    '&:hover': {\n      backgroundColor: '#0a73b3',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport GoogleIcon from '../GoogleIcon';\nimport useStyles from './LoginButtons.styles';\n\ninterface LoginButtonProps {\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\n}\n\nexport const FacebookLoginButton: React.FC<LoginButtonProps> = React.memo(\n  ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n      <Button\n        classes={{\n          root: clsx(classes.baseRoot, classes.facebookRoot),\n        }}\n        startIcon={<FacebookIcon />}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onClick}\n        fullWidth\n      >\n        Join with Facebook\n      </Button>\n    );\n  }\n);\n\nexport const GoogleLoginButton: React.FC<LoginButtonProps> = React.memo(\n  ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n      <Button\n        classes={{\n          root: clsx(classes.baseRoot, classes.googleRoot),\n        }}\n        startIcon={<GoogleIcon />}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onClick}\n        fullWidth\n      >\n        Join with Google\n      </Button>\n    );\n  }\n);\n\nexport const TwitterLoginButton: React.FC<LoginButtonProps> = React.memo(\n  ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n      <Button\n        classes={{\n          root: clsx(classes.baseRoot, classes.twitterRoot),\n        }}\n        startIcon={<TwitterIcon />}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onClick}\n        fullWidth\n      >\n        Join with Twitter\n      </Button>\n    );\n  }\n);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minHeight: '100vh',\n  },\n  buttonsContainer: {\n    maxWidth: '300px',\n  },\n  buttonContainer: {\n    width: '100%',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  FacebookLoginButton,\n  GoogleLoginButton,\n  TwitterLoginButton,\n} from '../../components/LoginButtons';\nimport useStyles from './Login.styles';\nimport { useLoginViaSocialMedia } from '../../hooks';\nimport { AuthProvider } from '../../types';\n\nconst LoginButtons = [\n  {\n    authProvider: 'google',\n    Button: GoogleLoginButton,\n  },\n  {\n    authProvider: 'facebook',\n    Button: FacebookLoginButton,\n  },\n  {\n    authProvider: 'twitter',\n    Button: TwitterLoginButton,\n  },\n];\n\nfunction Login() {\n  const loginViaSocialMedia = useLoginViaSocialMedia();\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      direction=\"column\"\n      alignContent=\"center\"\n      alignItems=\"center\"\n      justify=\"center\"\n    >\n      <Grid item>\n        <Grid\n          container\n          direction=\"column\"\n          alignContent=\"center\"\n          alignItems=\"center\"\n          justify=\"center\"\n          spacing={8}\n        >\n          <Grid item>\n            <Typography variant=\"h2\">Team Findr</Typography>\n          </Grid>\n          <Grid\n            className={classes.buttonsContainer}\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={1}\n          >\n            {LoginButtons.map((loginButton) => (\n              <Grid\n                key={loginButton.authProvider}\n                item\n                className={classes.buttonContainer}\n              >\n                <loginButton.Button\n                  onClick={() =>\n                    loginViaSocialMedia(\n                      loginButton.authProvider as AuthProvider\n                    )\n                  }\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default React.memo(Login);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: '100vh',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useStyles from './Authenticating.styles';\n\nconst Authenticating = () => {\n  const classes = useStyles();\n  return (\n    <Grid\n      className={classes.root}\n      container\n      alignContent=\"center\"\n      justify=\"center\"\n    >\n      <CircularProgress />\n    </Grid>\n  );\n};\n\nexport default React.memo(Authenticating);\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { useUser } from '../hooks';\n\nconst WithAuthentication = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> => (props: P) => {\n  const { user } = useUser();\n\n  if (!user) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return <Component {...props} />;\n};\n\nexport default WithAuthentication;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { useUser } from '../hooks';\n\nconst WithNoAuthentication = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> => (props: P) => {\n  const { user } = useUser();\n\n  if (user) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return <Component {...props} />;\n};\n\nexport default WithNoAuthentication;\n","import './App.css';\nimport React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport Login from './pages/Login';\nimport Authenticating from './pages/Authenticating';\nimport withAuthentication from './components/WithAuthentication';\nimport withNoAuthentication from './components/WithNoAuthentication';\nimport { useUser, usePrefetch } from './hooks';\n\nfunction App() {\n  usePrefetch();\n  const { isLoading } = useUser();\n\n  if (isLoading) {\n    return <Authenticating />;\n  }\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\" component={withNoAuthentication(Login)} />\n        <Route path=\"/\" component={withAuthentication(Dashboard)} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default React.memo(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport { lightGreen } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: lightGreen,\n  },\n  typography: {\n    button: {\n      textTransform: 'none',\n    },\n  },\n});\n\nconst TeamFindrThemeProvider: React.FC = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default TeamFindrThemeProvider;\n","import 'typeface-roboto';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { SnackbarProvider } from 'notistack';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeProvider from './providers/ThemeProvider';\nimport ServicesProvider from './providers/ServicesProvider';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <CssBaseline />\n      <ThemeProvider>\n        <ServicesProvider>\n          <SnackbarProvider>\n            <App />\n            <ReactQueryDevtools initialIsOpen={false} />\n          </SnackbarProvider>\n        </ServicesProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}